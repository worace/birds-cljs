// Compiled by ClojureScript 0.0-2740 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2740";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__5845__delegate = function (args){
return console.log.apply(console,(function (){var G__5844 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__5844) : cljs.core.into_array.call(null,G__5844));
})());
};
var G__5845 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5846__i = 0, G__5846__a = new Array(arguments.length -  0);
while (G__5846__i < G__5846__a.length) {G__5846__a[G__5846__i] = arguments[G__5846__i + 0]; ++G__5846__i;}
  args = new cljs.core.IndexedSeq(G__5846__a,0);
} 
return G__5845__delegate.call(this,args);};
G__5845.cljs$lang$maxFixedArity = 0;
G__5845.cljs$lang$applyTo = (function (arglist__5847){
var args = cljs.core.seq(arglist__5847);
return G__5845__delegate(args);
});
G__5845.cljs$core$IFn$_invoke$arity$variadic = G__5845__delegate;
return G__5845;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__5849 = x;
return goog.isString(G__5849);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__5851 = x__$1;
return goog.typeOf(G__5851);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3747__auto__ = ty;
if(cljs.core.truth_(and__3747__auto__)){
return ty.cljs$lang$type;
} else {
return and__3747__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__5853 = obj;
return goog.typeOf(G__5853);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__5855 = Symbol;
return goog.typeOf(G__5855);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4646__auto___5857 = len;
var i_5858 = (0);
while(true){
if((i_5858 < n__4646__auto___5857)){
(new_arr[i_5858] = (arr[i_5858]));

var G__5859 = (i_5858 + (1));
i_5858 = G__5859;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__5860 = (i + (1));
i = G__5860;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__5869__delegate = function (array,i,idxs){
var G__5866 = aget;
var G__5867 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__5868 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__5866,G__5867,G__5868) : cljs.core.apply.call(null,G__5866,G__5867,G__5868));
};
var G__5869 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__5870__i = 0, G__5870__a = new Array(arguments.length -  2);
while (G__5870__i < G__5870__a.length) {G__5870__a[G__5870__i] = arguments[G__5870__i + 2]; ++G__5870__i;}
  idxs = new cljs.core.IndexedSeq(G__5870__a,0);
} 
return G__5869__delegate.call(this,array,i,idxs);};
G__5869.cljs$lang$maxFixedArity = 2;
G__5869.cljs$lang$applyTo = (function (arglist__5871){
var array = cljs.core.first(arglist__5871);
arglist__5871 = cljs.core.next(arglist__5871);
var i = cljs.core.first(arglist__5871);
var idxs = cljs.core.rest(arglist__5871);
return G__5869__delegate(array,i,idxs);
});
G__5869.cljs$core$IFn$_invoke$arity$variadic = G__5869__delegate;
return G__5869;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__5872 = null;
if (arguments.length > 2) {
var G__5873__i = 0, G__5873__a = new Array(arguments.length -  2);
while (G__5873__i < G__5873__a.length) {G__5873__a[G__5873__i] = arguments[G__5873__i + 2]; ++G__5873__i;}
G__5872 = new cljs.core.IndexedSeq(G__5873__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__5872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__5882__delegate = function (array,idx,idx2,idxv){
var G__5878 = aset;
var G__5879 = (array[idx]);
var G__5880 = idx2;
var G__5881 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__5878,G__5879,G__5880,G__5881) : cljs.core.apply.call(null,G__5878,G__5879,G__5880,G__5881));
};
var G__5882 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__5883__i = 0, G__5883__a = new Array(arguments.length -  3);
while (G__5883__i < G__5883__a.length) {G__5883__a[G__5883__i] = arguments[G__5883__i + 3]; ++G__5883__i;}
  idxv = new cljs.core.IndexedSeq(G__5883__a,0);
} 
return G__5882__delegate.call(this,array,idx,idx2,idxv);};
G__5882.cljs$lang$maxFixedArity = 3;
G__5882.cljs$lang$applyTo = (function (arglist__5884){
var array = cljs.core.first(arglist__5884);
arglist__5884 = cljs.core.next(arglist__5884);
var idx = cljs.core.first(arglist__5884);
arglist__5884 = cljs.core.next(arglist__5884);
var idx2 = cljs.core.first(arglist__5884);
var idxv = cljs.core.rest(arglist__5884);
return G__5882__delegate(array,idx,idx2,idxv);
});
G__5882.cljs$core$IFn$_invoke$arity$variadic = G__5882__delegate;
return G__5882;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__5885 = null;
if (arguments.length > 3) {
var G__5886__i = 0, G__5886__a = new Array(arguments.length -  3);
while (G__5886__i < G__5886__a.length) {G__5886__a[G__5886__i] = arguments[G__5886__i + 3]; ++G__5886__i;}
G__5885 = new cljs.core.IndexedSeq(G__5886__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__5885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__5892 = (function (a,x){
a.push(x);

return a;
});
var G__5893 = [];
var G__5894 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5892,G__5893,G__5894) : cljs.core.reduce.call(null,G__5892,G__5893,G__5894));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__5895__i = 0, G__5895__a = new Array(arguments.length -  2);
while (G__5895__i < G__5895__a.length) {G__5895__a[G__5895__i] = arguments[G__5895__i + 2]; ++G__5895__i;}
  args = new cljs.core.IndexedSeq(G__5895__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__5896){
var obj = cljs.core.first(arglist__5896);
arglist__5896 = cljs.core.next(arglist__5896);
var s = cljs.core.first(arglist__5896);
var args = cljs.core.rest(arglist__5896);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj5898 = {};
return obj5898;
})();


cljs.core.IFn = (function (){var obj5900 = {};
return obj5900;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5946 = x__4403__auto__;
return goog.typeOf(G__5946);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5948 = x__4403__auto__;
return goog.typeOf(G__5948);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5950 = x__4403__auto__;
return goog.typeOf(G__5950);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5952 = x__4403__auto__;
return goog.typeOf(G__5952);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5954 = x__4403__auto__;
return goog.typeOf(G__5954);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5956 = x__4403__auto__;
return goog.typeOf(G__5956);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5958 = x__4403__auto__;
return goog.typeOf(G__5958);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5960 = x__4403__auto__;
return goog.typeOf(G__5960);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5962 = x__4403__auto__;
return goog.typeOf(G__5962);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5964 = x__4403__auto__;
return goog.typeOf(G__5964);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5966 = x__4403__auto__;
return goog.typeOf(G__5966);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5968 = x__4403__auto__;
return goog.typeOf(G__5968);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5970 = x__4403__auto__;
return goog.typeOf(G__5970);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5972 = x__4403__auto__;
return goog.typeOf(G__5972);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5974 = x__4403__auto__;
return goog.typeOf(G__5974);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5976 = x__4403__auto__;
return goog.typeOf(G__5976);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5978 = x__4403__auto__;
return goog.typeOf(G__5978);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5980 = x__4403__auto__;
return goog.typeOf(G__5980);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5982 = x__4403__auto__;
return goog.typeOf(G__5982);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5984 = x__4403__auto__;
return goog.typeOf(G__5984);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5986 = x__4403__auto__;
return goog.typeOf(G__5986);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__5988 = x__4403__auto__;
return goog.typeOf(G__5988);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj5990 = {};
return obj5990;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3747__auto__ = value;
if(and__3747__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3747__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4403__auto__ = (((value == null))?null:value);
return (function (){var or__3759__auto__ = (cljs.core._clone[(function (){var G__5994 = x__4403__auto__;
return goog.typeOf(G__5994);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._clone["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj5996 = {};
return obj5996;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._count[(function (){var G__6000 = x__4403__auto__;
return goog.typeOf(G__6000);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._count["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj6002 = {};
return obj6002;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._empty[(function (){var G__6006 = x__4403__auto__;
return goog.typeOf(G__6006);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._empty["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj6008 = {};
return obj6008;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._conj[(function (){var G__6012 = x__4403__auto__;
return goog.typeOf(G__6012);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._conj["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj6014 = {};
return obj6014;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._nth[(function (){var G__6020 = x__4403__auto__;
return goog.typeOf(G__6020);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._nth["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._nth[(function (){var G__6022 = x__4403__auto__;
return goog.typeOf(G__6022);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._nth["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj6024 = {};
return obj6024;
})();


cljs.core.ISeq = (function (){var obj6026 = {};
return obj6026;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._first[(function (){var G__6030 = x__4403__auto__;
return goog.typeOf(G__6030);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._rest[(function (){var G__6034 = x__4403__auto__;
return goog.typeOf(G__6034);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._rest["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj6036 = {};
return obj6036;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._next[(function (){var G__6040 = x__4403__auto__;
return goog.typeOf(G__6040);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._next["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj6042 = {};
return obj6042;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._lookup[(function (){var G__6048 = x__4403__auto__;
return goog.typeOf(G__6048);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._lookup["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._lookup[(function (){var G__6050 = x__4403__auto__;
return goog.typeOf(G__6050);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._lookup["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj6052 = {};
return obj6052;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__6056 = x__4403__auto__;
return goog.typeOf(G__6056);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._assoc[(function (){var G__6060 = x__4403__auto__;
return goog.typeOf(G__6060);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj6062 = {};
return obj6062;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._dissoc[(function (){var G__6066 = x__4403__auto__;
return goog.typeOf(G__6066);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj6068 = {};
return obj6068;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._key[(function (){var G__6072 = x__4403__auto__;
return goog.typeOf(G__6072);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._key["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._val[(function (){var G__6076 = x__4403__auto__;
return goog.typeOf(G__6076);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._val["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj6078 = {};
return obj6078;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._disjoin[(function (){var G__6082 = x__4403__auto__;
return goog.typeOf(G__6082);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj6084 = {};
return obj6084;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._peek[(function (){var G__6088 = x__4403__auto__;
return goog.typeOf(G__6088);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._peek["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._pop[(function (){var G__6092 = x__4403__auto__;
return goog.typeOf(G__6092);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pop["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj6094 = {};
return obj6094;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_n[(function (){var G__6098 = x__4403__auto__;
return goog.typeOf(G__6098);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj6100 = {};
return obj6100;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._deref[(function (){var G__6104 = x__4403__auto__;
return goog.typeOf(G__6104);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._deref["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj6106 = {};
return obj6106;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._deref_with_timeout[(function (){var G__6110 = x__4403__auto__;
return goog.typeOf(G__6110);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj6112 = {};
return obj6112;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._meta[(function (){var G__6116 = x__4403__auto__;
return goog.typeOf(G__6116);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._meta["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj6118 = {};
return obj6118;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._with_meta[(function (){var G__6122 = x__4403__auto__;
return goog.typeOf(G__6122);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj6124 = {};
return obj6124;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._reduce[(function (){var G__6130 = x__4403__auto__;
return goog.typeOf(G__6130);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._reduce[(function (){var G__6132 = x__4403__auto__;
return goog.typeOf(G__6132);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj6134 = {};
return obj6134;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._kv_reduce[(function (){var G__6138 = x__4403__auto__;
return goog.typeOf(G__6138);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj6140 = {};
return obj6140;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._equiv[(function (){var G__6144 = x__4403__auto__;
return goog.typeOf(G__6144);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._equiv["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj6146 = {};
return obj6146;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._hash[(function (){var G__6150 = x__4403__auto__;
return goog.typeOf(G__6150);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._hash["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj6152 = {};
return obj6152;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._seq[(function (){var G__6156 = x__4403__auto__;
return goog.typeOf(G__6156);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._seq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj6158 = {};
return obj6158;
})();


cljs.core.IList = (function (){var obj6160 = {};
return obj6160;
})();


cljs.core.IRecord = (function (){var obj6162 = {};
return obj6162;
})();


cljs.core.IReversible = (function (){var obj6164 = {};
return obj6164;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._rseq[(function (){var G__6168 = x__4403__auto__;
return goog.typeOf(G__6168);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._rseq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj6170 = {};
return obj6170;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._sorted_seq[(function (){var G__6174 = x__4403__auto__;
return goog.typeOf(G__6174);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._sorted_seq_from[(function (){var G__6178 = x__4403__auto__;
return goog.typeOf(G__6178);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._entry_key[(function (){var G__6182 = x__4403__auto__;
return goog.typeOf(G__6182);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._comparator[(function (){var G__6186 = x__4403__auto__;
return goog.typeOf(G__6186);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._comparator["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj6188 = {};
return obj6188;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3747__auto__ = writer;
if(and__3747__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3747__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3759__auto__ = (cljs.core._write[(function (){var G__6192 = x__4403__auto__;
return goog.typeOf(G__6192);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._write["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3747__auto__ = writer;
if(and__3747__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3747__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3759__auto__ = (cljs.core._flush[(function (){var G__6196 = x__4403__auto__;
return goog.typeOf(G__6196);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._flush["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj6198 = {};
return obj6198;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._pr_writer[(function (){var G__6202 = x__4403__auto__;
return goog.typeOf(G__6202);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj6204 = {};
return obj6204;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3747__auto__ = d;
if(and__3747__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4403__auto__ = (((d == null))?null:d);
return (function (){var or__3759__auto__ = (cljs.core._realized_QMARK_[(function (){var G__6208 = x__4403__auto__;
return goog.typeOf(G__6208);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj6210 = {};
return obj6210;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._notify_watches[(function (){var G__6214 = x__4403__auto__;
return goog.typeOf(G__6214);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._add_watch[(function (){var G__6218 = x__4403__auto__;
return goog.typeOf(G__6218);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._remove_watch[(function (){var G__6222 = x__4403__auto__;
return goog.typeOf(G__6222);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj6224 = {};
return obj6224;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._as_transient[(function (){var G__6228 = x__4403__auto__;
return goog.typeOf(G__6228);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj6230 = {};
return obj6230;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._conj_BANG_[(function (){var G__6234 = x__4403__auto__;
return goog.typeOf(G__6234);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._persistent_BANG_[(function (){var G__6238 = x__4403__auto__;
return goog.typeOf(G__6238);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj6240 = {};
return obj6240;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_BANG_[(function (){var G__6244 = x__4403__auto__;
return goog.typeOf(G__6244);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj6246 = {};
return obj6246;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__6250 = x__4403__auto__;
return goog.typeOf(G__6250);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj6252 = {};
return obj6252;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__6256 = x__4403__auto__;
return goog.typeOf(G__6256);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._pop_BANG_[(function (){var G__6260 = x__4403__auto__;
return goog.typeOf(G__6260);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj6262 = {};
return obj6262;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__6266 = x__4403__auto__;
return goog.typeOf(G__6266);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj6268 = {};
return obj6268;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._compare[(function (){var G__6272 = x__4403__auto__;
return goog.typeOf(G__6272);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._compare["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj6274 = {};
return obj6274;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._drop_first[(function (){var G__6278 = x__4403__auto__;
return goog.typeOf(G__6278);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj6280 = {};
return obj6280;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_first[(function (){var G__6284 = x__4403__auto__;
return goog.typeOf(G__6284);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_rest[(function (){var G__6288 = x__4403__auto__;
return goog.typeOf(G__6288);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj6290 = {};
return obj6290;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_next[(function (){var G__6294 = x__4403__auto__;
return goog.typeOf(G__6294);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj6296 = {};
return obj6296;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._name[(function (){var G__6300 = x__4403__auto__;
return goog.typeOf(G__6300);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._name["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._namespace[(function (){var G__6304 = x__4403__auto__;
return goog.typeOf(G__6304);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._namespace["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj6306 = {};
return obj6306;
})();


cljs.core.IReset = (function (){var obj6308 = {};
return obj6308;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._reset_BANG_[(function (){var G__6312 = x__4403__auto__;
return goog.typeOf(G__6312);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj6314 = {};
return obj6314;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__6324 = x__4403__auto__;
return goog.typeOf(G__6324);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__6326 = x__4403__auto__;
return goog.typeOf(G__6326);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__6328 = x__4403__auto__;
return goog.typeOf(G__6328);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__6330 = x__4403__auto__;
return goog.typeOf(G__6330);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj6332 = {};
return obj6332;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._vreset_BANG_[(function (){var G__6336 = x__4403__auto__;
return goog.typeOf(G__6336);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj6338 = {};
return obj6338;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._iterator[(function (){var G__6342 = x__4403__auto__;
return goog.typeOf(G__6342);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._iterator["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__6345 = (4294967295);
var G__6346 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6345,G__6346) : Math.imul.call(null,G__6345,G__6346));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__6349 = a;
var G__6350 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6349,G__6350) : Math.imul.call(null,G__6349,G__6350));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__6351 = (i + (2));
var G__6352 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__6351;
h1 = G__6352;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj6354 = {};
return obj6354;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__6355 = (i + (1));
var G__6356 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__6355;
hash = G__6356;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj6360 = {};
return obj6360;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__6363 = o;
if(G__6363){
var bit__4433__auto__ = (G__6363.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4433__auto__) || (G__6363.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__6364 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6364) : Math.floor.call(null,G__6364));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.not(a.ns);
if(and__3747__auto__){
return b.ns;
} else {
return and__3747__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6371 = a.ns;
var G__6372 = b.ns;
return goog.array.defaultCompare(G__6371,G__6372);
})();
if(((0) === nsc)){
var G__6373 = a.name;
var G__6374 = b.name;
return goog.array.defaultCompare(G__6373,G__6374);
} else {
return nsc;
}
}
} else {
var G__6375 = a.name;
var G__6376 = b.name;
return goog.array.defaultCompare(G__6375,G__6376);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4180__auto__ = self__._hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__6378 = null;
var G__6378__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__6378__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__6378 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6378__2.call(this,self__,coll);
case 3:
return G__6378__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6378.cljs$core$IFn$_invoke$arity$2 = G__6378__2;
G__6378.cljs$core$IFn$_invoke$arity$3 = G__6378__3;
return G__6378;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args6377){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6377)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__6426 = null;
var G__6426__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__6426__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__6426__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__6426__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__6426__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__6426__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__6426__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__6426__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__6426__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__6426__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__6426__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__6426__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__6426__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__6426__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__6426__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__6426__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__6426__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__6426__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__6426__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__6426__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__6426__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__6426__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6382 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6383 = a;
var G__6384 = b;
var G__6385 = c;
var G__6386 = d;
var G__6387 = e;
var G__6388 = f;
var G__6389 = g;
var G__6390 = h;
var G__6391 = i;
var G__6392 = j;
var G__6393 = k;
var G__6394 = l;
var G__6395 = m;
var G__6396 = n;
var G__6397 = o;
var G__6398 = p;
var G__6399 = q;
var G__6400 = r;
var G__6401 = s;
var G__6402 = t;
var G__6403 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398,G__6399,G__6400,G__6401,G__6402,G__6403) : cljs.core.apply.call(null,G__6382,G__6383,G__6384,G__6385,G__6386,G__6387,G__6388,G__6389,G__6390,G__6391,G__6392,G__6393,G__6394,G__6395,G__6396,G__6397,G__6398,G__6399,G__6400,G__6401,G__6402,G__6403));
});
G__6426 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6426__1.call(this,self__);
case 2:
return G__6426__2.call(this,self__,a);
case 3:
return G__6426__3.call(this,self__,a,b);
case 4:
return G__6426__4.call(this,self__,a,b,c);
case 5:
return G__6426__5.call(this,self__,a,b,c,d);
case 6:
return G__6426__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6426__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6426__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6426__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6426__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6426__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6426__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6426__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6426__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6426__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6426__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6426__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6426__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6426__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6426__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6426__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6426__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6426.cljs$core$IFn$_invoke$arity$1 = G__6426__1;
G__6426.cljs$core$IFn$_invoke$arity$2 = G__6426__2;
G__6426.cljs$core$IFn$_invoke$arity$3 = G__6426__3;
G__6426.cljs$core$IFn$_invoke$arity$4 = G__6426__4;
G__6426.cljs$core$IFn$_invoke$arity$5 = G__6426__5;
G__6426.cljs$core$IFn$_invoke$arity$6 = G__6426__6;
G__6426.cljs$core$IFn$_invoke$arity$7 = G__6426__7;
G__6426.cljs$core$IFn$_invoke$arity$8 = G__6426__8;
G__6426.cljs$core$IFn$_invoke$arity$9 = G__6426__9;
G__6426.cljs$core$IFn$_invoke$arity$10 = G__6426__10;
G__6426.cljs$core$IFn$_invoke$arity$11 = G__6426__11;
G__6426.cljs$core$IFn$_invoke$arity$12 = G__6426__12;
G__6426.cljs$core$IFn$_invoke$arity$13 = G__6426__13;
G__6426.cljs$core$IFn$_invoke$arity$14 = G__6426__14;
G__6426.cljs$core$IFn$_invoke$arity$15 = G__6426__15;
G__6426.cljs$core$IFn$_invoke$arity$16 = G__6426__16;
G__6426.cljs$core$IFn$_invoke$arity$17 = G__6426__17;
G__6426.cljs$core$IFn$_invoke$arity$18 = G__6426__18;
G__6426.cljs$core$IFn$_invoke$arity$19 = G__6426__19;
G__6426.cljs$core$IFn$_invoke$arity$20 = G__6426__20;
G__6426.cljs$core$IFn$_invoke$arity$21 = G__6426__21;
G__6426.cljs$core$IFn$_invoke$arity$22 = G__6426__22;
return G__6426;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args6381){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6381)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__6404 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__6405 = a;
var G__6406 = b;
var G__6407 = c;
var G__6408 = d;
var G__6409 = e;
var G__6410 = f;
var G__6411 = g;
var G__6412 = h;
var G__6413 = i;
var G__6414 = j;
var G__6415 = k;
var G__6416 = l;
var G__6417 = m;
var G__6418 = n;
var G__6419 = o;
var G__6420 = p;
var G__6421 = q;
var G__6422 = r;
var G__6423 = s;
var G__6424 = t;
var G__6425 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6404,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417,G__6418,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425) : cljs.core.apply.call(null,G__6404,G__6405,G__6406,G__6407,G__6408,G__6409,G__6410,G__6411,G__6412,G__6413,G__6414,G__6415,G__6416,G__6417,G__6418,G__6419,G__6420,G__6421,G__6422,G__6423,G__6424,G__6425));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__6428 = x;
if(G__6428){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__6428.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__6428.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6428);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__6428);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__6430 = value;
if(G__6430){
var bit__4440__auto__ = (G__6430.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4440__auto__) || (G__6430.cljs$core$ICloneable$)){
return true;
} else {
if((!G__6430.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6430);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__6430);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6432 = coll;
if(G__6432){
var bit__4433__auto__ = (G__6432.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4433__auto__) || (G__6432.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6434 = coll;
if(G__6434){
var bit__4433__auto__ = (G__6434.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__6434.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__6436 = coll;
if(G__6436){
var bit__4433__auto__ = (G__6436.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__6436.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__6438 = coll;
if(G__6438){
var bit__4433__auto__ = (G__6438.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4433__auto__) || (G__6438.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__6443__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6444 = y;
var G__6445 = cljs.core.first(more);
var G__6446 = cljs.core.next(more);
x = G__6444;
y = G__6445;
more = G__6446;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6443 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6447__i = 0, G__6447__a = new Array(arguments.length -  2);
while (G__6447__i < G__6447__a.length) {G__6447__a[G__6447__i] = arguments[G__6447__i + 2]; ++G__6447__i;}
  more = new cljs.core.IndexedSeq(G__6447__a,0);
} 
return G__6443__delegate.call(this,x,y,more);};
G__6443.cljs$lang$maxFixedArity = 2;
G__6443.cljs$lang$applyTo = (function (arglist__6448){
var x = cljs.core.first(arglist__6448);
arglist__6448 = cljs.core.next(arglist__6448);
var y = cljs.core.first(arglist__6448);
var more = cljs.core.rest(arglist__6448);
return G__6443__delegate(x,y,more);
});
G__6443.cljs$core$IFn$_invoke$arity$variadic = G__6443__delegate;
return G__6443;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__6449 = null;
if (arguments.length > 2) {
var G__6450__i = 0, G__6450__a = new Array(arguments.length -  2);
while (G__6450__i < G__6450__a.length) {G__6450__a[G__6450__i] = arguments[G__6450__i + 2]; ++G__6450__i;}
G__6449 = new cljs.core.IndexedSeq(G__6450__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__6451 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6451) : cljs.core.es6_iterator_seq.call(null,G__6451));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6452 = (n + (1));
var G__6453 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6454 = cljs.core.next(coll__$1);
n = G__6452;
hash_code = G__6453;
coll__$1 = G__6454;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__6455 = (n + (1));
var G__6456 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__6457 = cljs.core.next(coll__$1);
n = G__6455;
hash_code = G__6456;
coll__$1 = G__6457;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__6458 = o;
return goog.getUid(G__6458);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__6460 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6460) : cljs.core.deref.call(null,G__6460));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6467 = val;
var G__6468 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6467,G__6468) : f.call(null,G__6467,G__6468));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6473 = nval;
var G__6474 = (n + (1));
val = G__6473;
n = G__6474;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6469 = val__$1;
var G__6470 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6469,G__6470) : f.call(null,G__6469,G__6470));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6475 = nval;
var G__6476 = (n + (1));
val__$1 = G__6475;
n = G__6476;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6471 = val__$1;
var G__6472 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6471,G__6472) : f.call(null,G__6471,G__6472));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6477 = nval;
var G__6478 = (n + (1));
val__$1 = G__6477;
n = G__6478;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__6485 = val;
var G__6486 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6485,G__6486) : f.call(null,G__6485,G__6486));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6491 = nval;
var G__6492 = (n + (1));
val = G__6491;
n = G__6492;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__6487 = val__$1;
var G__6488 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6487,G__6488) : f.call(null,G__6487,G__6488));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6493 = nval;
var G__6494 = (n + (1));
val__$1 = G__6493;
n = G__6494;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__6489 = val__$1;
var G__6490 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6489,G__6490) : f.call(null,G__6489,G__6490));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6495 = nval;
var G__6496 = (n + (1));
val__$1 = G__6495;
n = G__6496;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__6498 = x;
if(G__6498){
var bit__4440__auto__ = (G__6498.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4440__auto__) || (G__6498.cljs$core$ICounted$)){
return true;
} else {
if((!G__6498.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6498);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__6498);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__6500 = x;
if(G__6500){
var bit__4440__auto__ = (G__6500.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4440__auto__) || (G__6500.cljs$core$IIndexed$)){
return true;
} else {
if((!G__6500.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6500);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__6500);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6501 = coll__$1;
var G__6502 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6501,G__6502) : cljs.core.equiv_sequential.call(null,G__6501,G__6502));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6503 = o;
var G__6504 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6503,G__6504) : cljs.core.cons.call(null,G__6503,G__6504));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__6507 = coll__$1;
var G__6508 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6507,G__6508) : cljs.core.equiv_sequential.call(null,G__6507,G__6508));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__6509 = cljs.core.List.EMPTY;
var G__6510 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6509,G__6510) : cljs.core.with_meta.call(null,G__6509,G__6510));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__6511 = f;
var G__6512 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6511,G__6512) : cljs.core.seq_reduce.call(null,G__6511,G__6512));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__6513 = f;
var G__6514 = start;
var G__6515 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6513,G__6514,G__6515) : cljs.core.seq_reduce.call(null,G__6513,G__6514,G__6515));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__6516 = o;
var G__6517 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6516,G__6517) : cljs.core.cons.call(null,G__6516,G__6517));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__6518 = sn;
s = G__6518;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__6523__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__6524 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__6525 = cljs.core.first(xs);
var G__6526 = cljs.core.next(xs);
coll = G__6524;
x = G__6525;
xs = G__6526;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__6523 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__6527__i = 0, G__6527__a = new Array(arguments.length -  2);
while (G__6527__i < G__6527__a.length) {G__6527__a[G__6527__i] = arguments[G__6527__i + 2]; ++G__6527__i;}
  xs = new cljs.core.IndexedSeq(G__6527__a,0);
} 
return G__6523__delegate.call(this,coll,x,xs);};
G__6523.cljs$lang$maxFixedArity = 2;
G__6523.cljs$lang$applyTo = (function (arglist__6528){
var coll = cljs.core.first(arglist__6528);
arglist__6528 = cljs.core.next(arglist__6528);
var x = cljs.core.first(arglist__6528);
var xs = cljs.core.rest(arglist__6528);
return G__6523__delegate(coll,x,xs);
});
G__6523.cljs$core$IFn$_invoke$arity$variadic = G__6523__delegate;
return G__6523;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__6529 = null;
if (arguments.length > 2) {
var G__6530__i = 0, G__6530__a = new Array(arguments.length -  2);
while (G__6530__i < G__6530__a.length) {G__6530__a[G__6530__i] = arguments[G__6530__i + 2]; ++G__6530__i;}
G__6529 = new cljs.core.IndexedSeq(G__6530__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__6529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__6531 = cljs.core.next(s);
var G__6532 = (acc + (1));
s = G__6531;
acc = G__6532;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__6534 = coll;
if(G__6534){
var bit__4433__auto__ = (G__6534.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4433__auto__) || (G__6534.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__6535 = cljs.core.next(coll);
var G__6536 = (n - (1));
coll = G__6535;
n = G__6536;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__6537 = cljs.core.next(coll);
var G__6538 = (n - (1));
var G__6539 = not_found;
coll = G__6537;
n = G__6538;
not_found = G__6539;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__6544 = coll;
if(G__6544){
var bit__4433__auto__ = (G__6544.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4433__auto__) || (G__6544.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6545 = coll;
if(G__6545){
var bit__4440__auto__ = (G__6545.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__6545.cljs$core$ISeq$)){
return true;
} else {
if((!G__6545.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6545);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6545);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__6546 = coll;
if(G__6546){
var bit__4433__auto__ = (G__6546.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4433__auto__) || (G__6546.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__6547 = coll;
if(G__6547){
var bit__4440__auto__ = (G__6547.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__6547.cljs$core$ISeq$)){
return true;
} else {
if((!G__6547.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6547);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6547);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__6548 = (n__$1 - (1));
var G__6549 = cljs.core.rest(xs);
n__$1 = G__6548;
xs = G__6549;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__6552 = o;
if(G__6552){
var bit__4433__auto__ = (G__6552.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4433__auto__) || (G__6552.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__6553 = o;
if(G__6553){
var bit__4433__auto__ = (G__6553.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4433__auto__) || (G__6553.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__6557__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__6558 = ret;
var G__6559 = cljs.core.first(kvs);
var G__6560 = cljs.core.second(kvs);
var G__6561 = cljs.core.nnext(kvs);
coll = G__6558;
k = G__6559;
v = G__6560;
kvs = G__6561;
continue;
} else {
return ret;
}
break;
}
};
var G__6557 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6562__i = 0, G__6562__a = new Array(arguments.length -  3);
while (G__6562__i < G__6562__a.length) {G__6562__a[G__6562__i] = arguments[G__6562__i + 3]; ++G__6562__i;}
  kvs = new cljs.core.IndexedSeq(G__6562__a,0);
} 
return G__6557__delegate.call(this,coll,k,v,kvs);};
G__6557.cljs$lang$maxFixedArity = 3;
G__6557.cljs$lang$applyTo = (function (arglist__6563){
var coll = cljs.core.first(arglist__6563);
arglist__6563 = cljs.core.next(arglist__6563);
var k = cljs.core.first(arglist__6563);
arglist__6563 = cljs.core.next(arglist__6563);
var v = cljs.core.first(arglist__6563);
var kvs = cljs.core.rest(arglist__6563);
return G__6557__delegate(coll,k,v,kvs);
});
G__6557.cljs$core$IFn$_invoke$arity$variadic = G__6557__delegate;
return G__6557;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__6564 = null;
if (arguments.length > 3) {
var G__6565__i = 0, G__6565__a = new Array(arguments.length -  3);
while (G__6565__i < G__6565__a.length) {G__6565__a[G__6565__i] = arguments[G__6565__i + 3]; ++G__6565__i;}
G__6564 = new cljs.core.IndexedSeq(G__6565__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__6564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__6568__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__6569 = ret;
var G__6570 = cljs.core.first(ks);
var G__6571 = cljs.core.next(ks);
coll = G__6569;
k = G__6570;
ks = G__6571;
continue;
} else {
return ret;
}
}
break;
}
};
var G__6568 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6572__i = 0, G__6572__a = new Array(arguments.length -  2);
while (G__6572__i < G__6572__a.length) {G__6572__a[G__6572__i] = arguments[G__6572__i + 2]; ++G__6572__i;}
  ks = new cljs.core.IndexedSeq(G__6572__a,0);
} 
return G__6568__delegate.call(this,coll,k,ks);};
G__6568.cljs$lang$maxFixedArity = 2;
G__6568.cljs$lang$applyTo = (function (arglist__6573){
var coll = cljs.core.first(arglist__6573);
arglist__6573 = cljs.core.next(arglist__6573);
var k = cljs.core.first(arglist__6573);
var ks = cljs.core.rest(arglist__6573);
return G__6568__delegate(coll,k,ks);
});
G__6568.cljs$core$IFn$_invoke$arity$variadic = G__6568__delegate;
return G__6568;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__6574 = null;
if (arguments.length > 2) {
var G__6575__i = 0, G__6575__a = new Array(arguments.length -  2);
while (G__6575__i < G__6575__a.length) {G__6575__a[G__6575__i] = arguments[G__6575__i + 2]; ++G__6575__i;}
G__6574 = new cljs.core.IndexedSeq(G__6575__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__6574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3759__auto__ = (function (){var G__6580 = f;
return goog.isFunction(G__6580);
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__6581 = f;
if(G__6581){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto____$1 = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
return G__6581.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__6581.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6581);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__6581);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__7047 = null;
var G__7047__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__7047__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6583 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6583) : self__.afn.call(null,G__6583));
});
var G__7047__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6584 = a;
var G__6585 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6584,G__6585) : self__.afn.call(null,G__6584,G__6585));
});
var G__7047__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6586 = a;
var G__6587 = b;
var G__6588 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6586,G__6587,G__6588) : self__.afn.call(null,G__6586,G__6587,G__6588));
});
var G__7047__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6589 = a;
var G__6590 = b;
var G__6591 = c;
var G__6592 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6589,G__6590,G__6591,G__6592) : self__.afn.call(null,G__6589,G__6590,G__6591,G__6592));
});
var G__7047__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6593 = a;
var G__6594 = b;
var G__6595 = c;
var G__6596 = d;
var G__6597 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6593,G__6594,G__6595,G__6596,G__6597) : self__.afn.call(null,G__6593,G__6594,G__6595,G__6596,G__6597));
});
var G__7047__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6598 = a;
var G__6599 = b;
var G__6600 = c;
var G__6601 = d;
var G__6602 = e;
var G__6603 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6598,G__6599,G__6600,G__6601,G__6602,G__6603) : self__.afn.call(null,G__6598,G__6599,G__6600,G__6601,G__6602,G__6603));
});
var G__7047__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6604 = a;
var G__6605 = b;
var G__6606 = c;
var G__6607 = d;
var G__6608 = e;
var G__6609 = f;
var G__6610 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610) : self__.afn.call(null,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609,G__6610));
});
var G__7047__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6611 = a;
var G__6612 = b;
var G__6613 = c;
var G__6614 = d;
var G__6615 = e;
var G__6616 = f;
var G__6617 = g;
var G__6618 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618) : self__.afn.call(null,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618));
});
var G__7047__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6619 = a;
var G__6620 = b;
var G__6621 = c;
var G__6622 = d;
var G__6623 = e;
var G__6624 = f;
var G__6625 = g;
var G__6626 = h;
var G__6627 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627) : self__.afn.call(null,G__6619,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627));
});
var G__7047__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6628 = a;
var G__6629 = b;
var G__6630 = c;
var G__6631 = d;
var G__6632 = e;
var G__6633 = f;
var G__6634 = g;
var G__6635 = h;
var G__6636 = i;
var G__6637 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6628,G__6629,G__6630,G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637) : self__.afn.call(null,G__6628,G__6629,G__6630,G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637));
});
var G__7047__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6638 = a;
var G__6639 = b;
var G__6640 = c;
var G__6641 = d;
var G__6642 = e;
var G__6643 = f;
var G__6644 = g;
var G__6645 = h;
var G__6646 = i;
var G__6647 = j;
var G__6648 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648) : self__.afn.call(null,G__6638,G__6639,G__6640,G__6641,G__6642,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648));
});
var G__7047__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6649 = a;
var G__6650 = b;
var G__6651 = c;
var G__6652 = d;
var G__6653 = e;
var G__6654 = f;
var G__6655 = g;
var G__6656 = h;
var G__6657 = i;
var G__6658 = j;
var G__6659 = k;
var G__6660 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658,G__6659,G__6660) : self__.afn.call(null,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655,G__6656,G__6657,G__6658,G__6659,G__6660));
});
var G__7047__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6661 = a;
var G__6662 = b;
var G__6663 = c;
var G__6664 = d;
var G__6665 = e;
var G__6666 = f;
var G__6667 = g;
var G__6668 = h;
var G__6669 = i;
var G__6670 = j;
var G__6671 = k;
var G__6672 = l;
var G__6673 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669,G__6670,G__6671,G__6672,G__6673) : self__.afn.call(null,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669,G__6670,G__6671,G__6672,G__6673));
});
var G__7047__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6674 = a;
var G__6675 = b;
var G__6676 = c;
var G__6677 = d;
var G__6678 = e;
var G__6679 = f;
var G__6680 = g;
var G__6681 = h;
var G__6682 = i;
var G__6683 = j;
var G__6684 = k;
var G__6685 = l;
var G__6686 = m;
var G__6687 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686,G__6687) : self__.afn.call(null,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684,G__6685,G__6686,G__6687));
});
var G__7047__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6688 = a;
var G__6689 = b;
var G__6690 = c;
var G__6691 = d;
var G__6692 = e;
var G__6693 = f;
var G__6694 = g;
var G__6695 = h;
var G__6696 = i;
var G__6697 = j;
var G__6698 = k;
var G__6699 = l;
var G__6700 = m;
var G__6701 = n;
var G__6702 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6688,G__6689,G__6690,G__6691,G__6692,G__6693,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700,G__6701,G__6702) : self__.afn.call(null,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700,G__6701,G__6702));
});
var G__7047__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6703 = a;
var G__6704 = b;
var G__6705 = c;
var G__6706 = d;
var G__6707 = e;
var G__6708 = f;
var G__6709 = g;
var G__6710 = h;
var G__6711 = i;
var G__6712 = j;
var G__6713 = k;
var G__6714 = l;
var G__6715 = m;
var G__6716 = n;
var G__6717 = o;
var G__6718 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6703,G__6704,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718) : self__.afn.call(null,G__6703,G__6704,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717,G__6718));
});
var G__7047__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6719 = a;
var G__6720 = b;
var G__6721 = c;
var G__6722 = d;
var G__6723 = e;
var G__6724 = f;
var G__6725 = g;
var G__6726 = h;
var G__6727 = i;
var G__6728 = j;
var G__6729 = k;
var G__6730 = l;
var G__6731 = m;
var G__6732 = n;
var G__6733 = o;
var G__6734 = p;
var G__6735 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733,G__6734,G__6735) : self__.afn.call(null,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733,G__6734,G__6735));
});
var G__7047__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6736 = a;
var G__6737 = b;
var G__6738 = c;
var G__6739 = d;
var G__6740 = e;
var G__6741 = f;
var G__6742 = g;
var G__6743 = h;
var G__6744 = i;
var G__6745 = j;
var G__6746 = k;
var G__6747 = l;
var G__6748 = m;
var G__6749 = n;
var G__6750 = o;
var G__6751 = p;
var G__6752 = q;
var G__6753 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753) : self__.afn.call(null,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753));
});
var G__7047__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6754 = a;
var G__6755 = b;
var G__6756 = c;
var G__6757 = d;
var G__6758 = e;
var G__6759 = f;
var G__6760 = g;
var G__6761 = h;
var G__6762 = i;
var G__6763 = j;
var G__6764 = k;
var G__6765 = l;
var G__6766 = m;
var G__6767 = n;
var G__6768 = o;
var G__6769 = p;
var G__6770 = q;
var G__6771 = r;
var G__6772 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772) : self__.afn.call(null,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772));
});
var G__7047__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6773 = a;
var G__6774 = b;
var G__6775 = c;
var G__6776 = d;
var G__6777 = e;
var G__6778 = f;
var G__6779 = g;
var G__6780 = h;
var G__6781 = i;
var G__6782 = j;
var G__6783 = k;
var G__6784 = l;
var G__6785 = m;
var G__6786 = n;
var G__6787 = o;
var G__6788 = p;
var G__6789 = q;
var G__6790 = r;
var G__6791 = s;
var G__6792 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790,G__6791,G__6792) : self__.afn.call(null,G__6773,G__6774,G__6775,G__6776,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790,G__6791,G__6792));
});
var G__7047__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__6793 = self__.afn;
var G__6794 = a;
var G__6795 = b;
var G__6796 = c;
var G__6797 = d;
var G__6798 = e;
var G__6799 = f;
var G__6800 = g;
var G__6801 = h;
var G__6802 = i;
var G__6803 = j;
var G__6804 = k;
var G__6805 = l;
var G__6806 = m;
var G__6807 = n;
var G__6808 = o;
var G__6809 = p;
var G__6810 = q;
var G__6811 = r;
var G__6812 = s;
var G__6813 = t;
var G__6814 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6793,G__6794,G__6795,G__6796,G__6797,G__6798,G__6799,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814) : cljs.core.apply.call(null,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798,G__6799,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805,G__6806,G__6807,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814));
});
G__7047 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__7047__1.call(this,self__);
case 2:
return G__7047__2.call(this,self__,a);
case 3:
return G__7047__3.call(this,self__,a,b);
case 4:
return G__7047__4.call(this,self__,a,b,c);
case 5:
return G__7047__5.call(this,self__,a,b,c,d);
case 6:
return G__7047__6.call(this,self__,a,b,c,d,e);
case 7:
return G__7047__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__7047__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__7047__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__7047__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__7047__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__7047__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__7047__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__7047__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__7047__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__7047__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__7047__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__7047__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__7047__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__7047__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__7047__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__7047__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7047.cljs$core$IFn$_invoke$arity$1 = G__7047__1;
G__7047.cljs$core$IFn$_invoke$arity$2 = G__7047__2;
G__7047.cljs$core$IFn$_invoke$arity$3 = G__7047__3;
G__7047.cljs$core$IFn$_invoke$arity$4 = G__7047__4;
G__7047.cljs$core$IFn$_invoke$arity$5 = G__7047__5;
G__7047.cljs$core$IFn$_invoke$arity$6 = G__7047__6;
G__7047.cljs$core$IFn$_invoke$arity$7 = G__7047__7;
G__7047.cljs$core$IFn$_invoke$arity$8 = G__7047__8;
G__7047.cljs$core$IFn$_invoke$arity$9 = G__7047__9;
G__7047.cljs$core$IFn$_invoke$arity$10 = G__7047__10;
G__7047.cljs$core$IFn$_invoke$arity$11 = G__7047__11;
G__7047.cljs$core$IFn$_invoke$arity$12 = G__7047__12;
G__7047.cljs$core$IFn$_invoke$arity$13 = G__7047__13;
G__7047.cljs$core$IFn$_invoke$arity$14 = G__7047__14;
G__7047.cljs$core$IFn$_invoke$arity$15 = G__7047__15;
G__7047.cljs$core$IFn$_invoke$arity$16 = G__7047__16;
G__7047.cljs$core$IFn$_invoke$arity$17 = G__7047__17;
G__7047.cljs$core$IFn$_invoke$arity$18 = G__7047__18;
G__7047.cljs$core$IFn$_invoke$arity$19 = G__7047__19;
G__7047.cljs$core$IFn$_invoke$arity$20 = G__7047__20;
G__7047.cljs$core$IFn$_invoke$arity$21 = G__7047__21;
G__7047.cljs$core$IFn$_invoke$arity$22 = G__7047__22;
return G__7047;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args6582){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6582)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__6815 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__6815) : self__.afn.call(null,G__6815));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__6816 = a;
var G__6817 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__6816,G__6817) : self__.afn.call(null,G__6816,G__6817));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__6818 = a;
var G__6819 = b;
var G__6820 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__6818,G__6819,G__6820) : self__.afn.call(null,G__6818,G__6819,G__6820));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__6821 = a;
var G__6822 = b;
var G__6823 = c;
var G__6824 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__6821,G__6822,G__6823,G__6824) : self__.afn.call(null,G__6821,G__6822,G__6823,G__6824));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__6825 = a;
var G__6826 = b;
var G__6827 = c;
var G__6828 = d;
var G__6829 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__6825,G__6826,G__6827,G__6828,G__6829) : self__.afn.call(null,G__6825,G__6826,G__6827,G__6828,G__6829));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__6830 = a;
var G__6831 = b;
var G__6832 = c;
var G__6833 = d;
var G__6834 = e;
var G__6835 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__6830,G__6831,G__6832,G__6833,G__6834,G__6835) : self__.afn.call(null,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__6836 = a;
var G__6837 = b;
var G__6838 = c;
var G__6839 = d;
var G__6840 = e;
var G__6841 = f;
var G__6842 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842) : self__.afn.call(null,G__6836,G__6837,G__6838,G__6839,G__6840,G__6841,G__6842));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__6843 = a;
var G__6844 = b;
var G__6845 = c;
var G__6846 = d;
var G__6847 = e;
var G__6848 = f;
var G__6849 = g;
var G__6850 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850) : self__.afn.call(null,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__6851 = a;
var G__6852 = b;
var G__6853 = c;
var G__6854 = d;
var G__6855 = e;
var G__6856 = f;
var G__6857 = g;
var G__6858 = h;
var G__6859 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859) : self__.afn.call(null,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856,G__6857,G__6858,G__6859));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__6860 = a;
var G__6861 = b;
var G__6862 = c;
var G__6863 = d;
var G__6864 = e;
var G__6865 = f;
var G__6866 = g;
var G__6867 = h;
var G__6868 = i;
var G__6869 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869) : self__.afn.call(null,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__6870 = a;
var G__6871 = b;
var G__6872 = c;
var G__6873 = d;
var G__6874 = e;
var G__6875 = f;
var G__6876 = g;
var G__6877 = h;
var G__6878 = i;
var G__6879 = j;
var G__6880 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__6870,G__6871,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880) : self__.afn.call(null,G__6870,G__6871,G__6872,G__6873,G__6874,G__6875,G__6876,G__6877,G__6878,G__6879,G__6880));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__6881 = a;
var G__6882 = b;
var G__6883 = c;
var G__6884 = d;
var G__6885 = e;
var G__6886 = f;
var G__6887 = g;
var G__6888 = h;
var G__6889 = i;
var G__6890 = j;
var G__6891 = k;
var G__6892 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889,G__6890,G__6891,G__6892) : self__.afn.call(null,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889,G__6890,G__6891,G__6892));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__6893 = a;
var G__6894 = b;
var G__6895 = c;
var G__6896 = d;
var G__6897 = e;
var G__6898 = f;
var G__6899 = g;
var G__6900 = h;
var G__6901 = i;
var G__6902 = j;
var G__6903 = k;
var G__6904 = l;
var G__6905 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900,G__6901,G__6902,G__6903,G__6904,G__6905) : self__.afn.call(null,G__6893,G__6894,G__6895,G__6896,G__6897,G__6898,G__6899,G__6900,G__6901,G__6902,G__6903,G__6904,G__6905));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__6906 = a;
var G__6907 = b;
var G__6908 = c;
var G__6909 = d;
var G__6910 = e;
var G__6911 = f;
var G__6912 = g;
var G__6913 = h;
var G__6914 = i;
var G__6915 = j;
var G__6916 = k;
var G__6917 = l;
var G__6918 = m;
var G__6919 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__6906,G__6907,G__6908,G__6909,G__6910,G__6911,G__6912,G__6913,G__6914,G__6915,G__6916,G__6917,G__6918,G__6919) : self__.afn.call(null,G__6906,G__6907,G__6908,G__6909,G__6910,G__6911,G__6912,G__6913,G__6914,G__6915,G__6916,G__6917,G__6918,G__6919));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__6920 = a;
var G__6921 = b;
var G__6922 = c;
var G__6923 = d;
var G__6924 = e;
var G__6925 = f;
var G__6926 = g;
var G__6927 = h;
var G__6928 = i;
var G__6929 = j;
var G__6930 = k;
var G__6931 = l;
var G__6932 = m;
var G__6933 = n;
var G__6934 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__6920,G__6921,G__6922,G__6923,G__6924,G__6925,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933,G__6934) : self__.afn.call(null,G__6920,G__6921,G__6922,G__6923,G__6924,G__6925,G__6926,G__6927,G__6928,G__6929,G__6930,G__6931,G__6932,G__6933,G__6934));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__6935 = a;
var G__6936 = b;
var G__6937 = c;
var G__6938 = d;
var G__6939 = e;
var G__6940 = f;
var G__6941 = g;
var G__6942 = h;
var G__6943 = i;
var G__6944 = j;
var G__6945 = k;
var G__6946 = l;
var G__6947 = m;
var G__6948 = n;
var G__6949 = o;
var G__6950 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__6935,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950) : self__.afn.call(null,G__6935,G__6936,G__6937,G__6938,G__6939,G__6940,G__6941,G__6942,G__6943,G__6944,G__6945,G__6946,G__6947,G__6948,G__6949,G__6950));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__6951 = a;
var G__6952 = b;
var G__6953 = c;
var G__6954 = d;
var G__6955 = e;
var G__6956 = f;
var G__6957 = g;
var G__6958 = h;
var G__6959 = i;
var G__6960 = j;
var G__6961 = k;
var G__6962 = l;
var G__6963 = m;
var G__6964 = n;
var G__6965 = o;
var G__6966 = p;
var G__6967 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__6951,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967) : self__.afn.call(null,G__6951,G__6952,G__6953,G__6954,G__6955,G__6956,G__6957,G__6958,G__6959,G__6960,G__6961,G__6962,G__6963,G__6964,G__6965,G__6966,G__6967));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__6968 = a;
var G__6969 = b;
var G__6970 = c;
var G__6971 = d;
var G__6972 = e;
var G__6973 = f;
var G__6974 = g;
var G__6975 = h;
var G__6976 = i;
var G__6977 = j;
var G__6978 = k;
var G__6979 = l;
var G__6980 = m;
var G__6981 = n;
var G__6982 = o;
var G__6983 = p;
var G__6984 = q;
var G__6985 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985) : self__.afn.call(null,G__6968,G__6969,G__6970,G__6971,G__6972,G__6973,G__6974,G__6975,G__6976,G__6977,G__6978,G__6979,G__6980,G__6981,G__6982,G__6983,G__6984,G__6985));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__6986 = a;
var G__6987 = b;
var G__6988 = c;
var G__6989 = d;
var G__6990 = e;
var G__6991 = f;
var G__6992 = g;
var G__6993 = h;
var G__6994 = i;
var G__6995 = j;
var G__6996 = k;
var G__6997 = l;
var G__6998 = m;
var G__6999 = n;
var G__7000 = o;
var G__7001 = p;
var G__7002 = q;
var G__7003 = r;
var G__7004 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__6986,G__6987,G__6988,G__6989,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004) : self__.afn.call(null,G__6986,G__6987,G__6988,G__6989,G__6990,G__6991,G__6992,G__6993,G__6994,G__6995,G__6996,G__6997,G__6998,G__6999,G__7000,G__7001,G__7002,G__7003,G__7004));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__7005 = a;
var G__7006 = b;
var G__7007 = c;
var G__7008 = d;
var G__7009 = e;
var G__7010 = f;
var G__7011 = g;
var G__7012 = h;
var G__7013 = i;
var G__7014 = j;
var G__7015 = k;
var G__7016 = l;
var G__7017 = m;
var G__7018 = n;
var G__7019 = o;
var G__7020 = p;
var G__7021 = q;
var G__7022 = r;
var G__7023 = s;
var G__7024 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7005,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022,G__7023,G__7024) : self__.afn.call(null,G__7005,G__7006,G__7007,G__7008,G__7009,G__7010,G__7011,G__7012,G__7013,G__7014,G__7015,G__7016,G__7017,G__7018,G__7019,G__7020,G__7021,G__7022,G__7023,G__7024));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__7025 = self__.afn;
var G__7026 = a;
var G__7027 = b;
var G__7028 = c;
var G__7029 = d;
var G__7030 = e;
var G__7031 = f;
var G__7032 = g;
var G__7033 = h;
var G__7034 = i;
var G__7035 = j;
var G__7036 = k;
var G__7037 = l;
var G__7038 = m;
var G__7039 = n;
var G__7040 = o;
var G__7041 = p;
var G__7042 = q;
var G__7043 = r;
var G__7044 = s;
var G__7045 = t;
var G__7046 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046) : cljs.core.apply.call(null,G__7025,G__7026,G__7027,G__7028,G__7029,G__7030,G__7031,G__7032,G__7033,G__7034,G__7035,G__7036,G__7037,G__7038,G__7039,G__7040,G__7041,G__7042,G__7043,G__7044,G__7045,G__7046));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__7051 = o;
if(G__7051){
var bit__4440__auto__ = (G__7051.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4440__auto__) || (G__7051.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__7051.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7051);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__7051);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3747__auto__ = !((o == null));
if(and__3747__auto__){
var G__7055 = o;
if(G__7055){
var bit__4440__auto__ = (G__7055.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4440__auto__) || (G__7055.cljs$core$IMeta$)){
return true;
} else {
if((!G__7055.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7055);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__7055);
}
} else {
return and__3747__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__7058__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__7059 = ret;
var G__7060 = cljs.core.first(ks);
var G__7061 = cljs.core.next(ks);
coll = G__7059;
k = G__7060;
ks = G__7061;
continue;
} else {
return ret;
}
}
break;
}
};
var G__7058 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7062__i = 0, G__7062__a = new Array(arguments.length -  2);
while (G__7062__i < G__7062__a.length) {G__7062__a[G__7062__i] = arguments[G__7062__i + 2]; ++G__7062__i;}
  ks = new cljs.core.IndexedSeq(G__7062__a,0);
} 
return G__7058__delegate.call(this,coll,k,ks);};
G__7058.cljs$lang$maxFixedArity = 2;
G__7058.cljs$lang$applyTo = (function (arglist__7063){
var coll = cljs.core.first(arglist__7063);
arglist__7063 = cljs.core.next(arglist__7063);
var k = cljs.core.first(arglist__7063);
var ks = cljs.core.rest(arglist__7063);
return G__7058__delegate(coll,k,ks);
});
G__7058.cljs$core$IFn$_invoke$arity$variadic = G__7058__delegate;
return G__7058;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__7064 = null;
if (arguments.length > 2) {
var G__7065__i = 0, G__7065__a = new Array(arguments.length -  2);
while (G__7065__i < G__7065__a.length) {G__7065__a[G__7065__i] = arguments[G__7065__i + 2]; ++G__7065__i;}
G__7064 = new cljs.core.IndexedSeq(G__7065__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__7064);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7067 = x;
if(G__7067){
var bit__4440__auto__ = (G__7067.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4440__auto__) || (G__7067.cljs$core$ICollection$)){
return true;
} else {
if((!G__7067.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7067);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__7067);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7069 = x;
if(G__7069){
var bit__4440__auto__ = (G__7069.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4440__auto__) || (G__7069.cljs$core$ISet$)){
return true;
} else {
if((!G__7069.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7069);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__7069);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__7071 = x;
if(G__7071){
var bit__4440__auto__ = (G__7071.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4440__auto__) || (G__7071.cljs$core$IAssociative$)){
return true;
} else {
if((!G__7071.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7071);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__7071);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__7073 = x;
if(G__7073){
var bit__4440__auto__ = (G__7073.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4440__auto__) || (G__7073.cljs$core$ISequential$)){
return true;
} else {
if((!G__7073.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7073);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__7073);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__7075 = x;
if(G__7075){
var bit__4440__auto__ = (G__7075.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4440__auto__) || (G__7075.cljs$core$ISorted$)){
return true;
} else {
if((!G__7075.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7075);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__7075);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__7077 = x;
if(G__7077){
var bit__4440__auto__ = (G__7077.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4440__auto__) || (G__7077.cljs$core$IReduce$)){
return true;
} else {
if((!G__7077.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7077);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__7077);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__7079 = x;
if(G__7079){
var bit__4440__auto__ = (G__7079.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4440__auto__) || (G__7079.cljs$core$IMap$)){
return true;
} else {
if((!G__7079.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7079);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__7079);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__7081 = x;
if(G__7081){
var bit__4440__auto__ = (G__7081.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4440__auto__) || (G__7081.cljs$core$IVector$)){
return true;
} else {
if((!G__7081.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7081);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__7081);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__7083 = x;
if(G__7083){
var bit__4433__auto__ = (G__7083.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4433__auto__) || (G__7083.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj7089 = {};
return obj7089;
});
var js_obj__1 = (function() { 
var G__7092__delegate = function (keyvals){
var G__7090 = goog.object.create;
var G__7091 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7090,G__7091) : cljs.core.apply.call(null,G__7090,G__7091));
};
var G__7092 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__7093__i = 0, G__7093__a = new Array(arguments.length -  0);
while (G__7093__i < G__7093__a.length) {G__7093__a[G__7093__i] = arguments[G__7093__i + 0]; ++G__7093__i;}
  keyvals = new cljs.core.IndexedSeq(G__7093__a,0);
} 
return G__7092__delegate.call(this,keyvals);};
G__7092.cljs$lang$maxFixedArity = 0;
G__7092.cljs$lang$applyTo = (function (arglist__7094){
var keyvals = cljs.core.seq(arglist__7094);
return G__7092__delegate(keyvals);
});
G__7092.cljs$core$IFn$_invoke$arity$variadic = G__7092__delegate;
return G__7092;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__7095 = null;
if (arguments.length > 0) {
var G__7096__i = 0, G__7096__a = new Array(arguments.length -  0);
while (G__7096__i < G__7096__a.length) {G__7096__a[G__7096__i] = arguments[G__7096__i + 0]; ++G__7096__i;}
G__7095 = new cljs.core.IndexedSeq(G__7096__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__7095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__7099_7101 = obj;
var G__7100_7102 = ((function (G__7099_7101,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__7099_7101,keys))
;
goog.object.forEach(G__7099_7101,G__7100_7102);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7103 = (i__$1 + (1));
var G__7104 = (j__$1 + (1));
var G__7105 = (len__$1 - (1));
i__$1 = G__7103;
j__$1 = G__7104;
len__$1 = G__7105;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__7106 = (i__$1 - (1));
var G__7107 = (j__$1 - (1));
var G__7108 = (len__$1 - (1));
i__$1 = G__7106;
j__$1 = G__7107;
len__$1 = G__7108;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj7110 = {};
return obj7110;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__7112 = s;
if(G__7112){
var bit__4440__auto__ = (G__7112.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__7112.cljs$core$ISeq$)){
return true;
} else {
if((!G__7112.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7112);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__7112);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__7114 = s;
if(G__7114){
var bit__4440__auto__ = (G__7114.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4440__auto__) || (G__7114.cljs$core$ISeqable$)){
return true;
} else {
if((!G__7114.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7114);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__7114);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3759__auto__ = cljs.core.fn_QMARK_(f);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var G__7118 = f;
if(G__7118){
var bit__4440__auto__ = (G__7118.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4440__auto__) || (G__7118.cljs$core$IFn$)){
return true;
} else {
if((!G__7118.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7118);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__7118);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__7131 = n;
return isNaN(G__7131);
})())) && (!((n === Infinity))) && (((function (){var G__7132 = n;
return parseFloat(G__7132);
})() === (function (){var G__7133 = n;
var G__7134 = (10);
return parseInt(G__7133,G__7134);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__7135__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__7136 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__7137 = etc;
s = G__7136;
xs = G__7137;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__7135 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7138__i = 0, G__7138__a = new Array(arguments.length -  2);
while (G__7138__i < G__7138__a.length) {G__7138__a[G__7138__i] = arguments[G__7138__i + 2]; ++G__7138__i;}
  more = new cljs.core.IndexedSeq(G__7138__a,0);
} 
return G__7135__delegate.call(this,x,y,more);};
G__7135.cljs$lang$maxFixedArity = 2;
G__7135.cljs$lang$applyTo = (function (arglist__7139){
var x = cljs.core.first(arglist__7139);
arglist__7139 = cljs.core.next(arglist__7139);
var y = cljs.core.first(arglist__7139);
var more = cljs.core.rest(arglist__7139);
return G__7135__delegate(x,y,more);
});
G__7135.cljs$core$IFn$_invoke$arity$variadic = G__7135__delegate;
return G__7135;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__7140 = null;
if (arguments.length > 2) {
var G__7141__i = 0, G__7141__a = new Array(arguments.length -  2);
while (G__7141__i < G__7141__a.length) {G__7141__a[G__7141__i] = arguments[G__7141__i + 2]; ++G__7141__i;}
G__7140 = new cljs.core.IndexedSeq(G__7141__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7140);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__7145 = x;
if(G__7145){
var bit__4433__auto__ = (G__7145.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4433__auto__) || (G__7145.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__7146 = x;
var G__7147 = y;
return goog.array.defaultCompare(G__7146,G__7147);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__7152 = xs;
var G__7153 = ys;
var G__7154 = len;
var G__7155 = (n + (1));
xs = G__7152;
ys = G__7153;
len = G__7154;
n = G__7155;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__7160 = x;
var G__7161 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7160,G__7161) : f.call(null,G__7160,G__7161));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__7162 = y;
var G__7163 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7162,G__7163) : f.call(null,G__7162,G__7163));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__7169 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7169) : cljs.core.to_array.call(null,G__7169));
})();
var G__7170_7172 = a;
var G__7171_7173 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__7170_7172,G__7171_7173);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__7179 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7179) : keyfn.call(null,G__7179));
})(),(function (){var G__7180 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7180) : keyfn.call(null,G__7180));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__7186 = f;
var G__7187 = cljs.core.first(s);
var G__7188 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7186,G__7187,G__7188) : cljs.core.reduce.call(null,G__7186,G__7187,G__7188));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__7189 = val__$1;
var G__7190 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7189,G__7190) : f.call(null,G__7189,G__7190));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__7191 = nval;
var G__7192 = cljs.core.next(coll__$1);
val__$1 = G__7191;
coll__$1 = G__7192;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__7196 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7196) : cljs.core.to_array.call(null,G__7196));
})();
var G__7197_7199 = a;
goog.array.shuffle(G__7197_7199);

var G__7198 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7198) : cljs.core.vec.call(null,G__7198));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__7202 = coll;
if(G__7202){
var bit__4433__auto__ = (G__7202.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4433__auto__) || (G__7202.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__7203 = coll;
if(G__7203){
var bit__4433__auto__ = (G__7203.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4433__auto__) || (G__7203.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__7212 = null;
var G__7212__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__7212__1 = (function (x){
var G__7209 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7209) : cf.call(null,G__7209));
});
var G__7212__2 = (function (x,y){
var G__7210 = x;
var G__7211 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7210,G__7211) : f.call(null,G__7210,G__7211));
});
G__7212 = function(x,y){
switch(arguments.length){
case 0:
return G__7212__0.call(this);
case 1:
return G__7212__1.call(this,x);
case 2:
return G__7212__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7212.cljs$core$IFn$_invoke$arity$0 = G__7212__0;
G__7212.cljs$core$IFn$_invoke$arity$1 = G__7212__1;
G__7212.cljs$core$IFn$_invoke$arity$2 = G__7212__2;
return G__7212;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__7219 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7219) : xform.call(null,G__7219));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__7220 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7220) : f__$1.call(null,G__7220));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__7221__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__7221 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7222__i = 0, G__7222__a = new Array(arguments.length -  2);
while (G__7222__i < G__7222__a.length) {G__7222__a[G__7222__i] = arguments[G__7222__i + 2]; ++G__7222__i;}
  more = new cljs.core.IndexedSeq(G__7222__a,0);
} 
return G__7221__delegate.call(this,x,y,more);};
G__7221.cljs$lang$maxFixedArity = 2;
G__7221.cljs$lang$applyTo = (function (arglist__7223){
var x = cljs.core.first(arglist__7223);
arglist__7223 = cljs.core.next(arglist__7223);
var y = cljs.core.first(arglist__7223);
var more = cljs.core.rest(arglist__7223);
return G__7221__delegate(x,y,more);
});
G__7221.cljs$core$IFn$_invoke$arity$variadic = G__7221__delegate;
return G__7221;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__7224 = null;
if (arguments.length > 2) {
var G__7225__i = 0, G__7225__a = new Array(arguments.length -  2);
while (G__7225__i < G__7225__a.length) {G__7225__a[G__7225__i] = arguments[G__7225__i + 2]; ++G__7225__i;}
G__7224 = new cljs.core.IndexedSeq(G__7225__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__7226__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__7226 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7227__i = 0, G__7227__a = new Array(arguments.length -  2);
while (G__7227__i < G__7227__a.length) {G__7227__a[G__7227__i] = arguments[G__7227__i + 2]; ++G__7227__i;}
  more = new cljs.core.IndexedSeq(G__7227__a,0);
} 
return G__7226__delegate.call(this,x,y,more);};
G__7226.cljs$lang$maxFixedArity = 2;
G__7226.cljs$lang$applyTo = (function (arglist__7228){
var x = cljs.core.first(arglist__7228);
arglist__7228 = cljs.core.next(arglist__7228);
var y = cljs.core.first(arglist__7228);
var more = cljs.core.rest(arglist__7228);
return G__7226__delegate(x,y,more);
});
G__7226.cljs$core$IFn$_invoke$arity$variadic = G__7226__delegate;
return G__7226;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__7229 = null;
if (arguments.length > 2) {
var G__7230__i = 0, G__7230__a = new Array(arguments.length -  2);
while (G__7230__i < G__7230__a.length) {G__7230__a[G__7230__i] = arguments[G__7230__i + 2]; ++G__7230__i;}
G__7229 = new cljs.core.IndexedSeq(G__7230__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__7231__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__7231 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7232__i = 0, G__7232__a = new Array(arguments.length -  2);
while (G__7232__i < G__7232__a.length) {G__7232__a[G__7232__i] = arguments[G__7232__i + 2]; ++G__7232__i;}
  more = new cljs.core.IndexedSeq(G__7232__a,0);
} 
return G__7231__delegate.call(this,x,y,more);};
G__7231.cljs$lang$maxFixedArity = 2;
G__7231.cljs$lang$applyTo = (function (arglist__7233){
var x = cljs.core.first(arglist__7233);
arglist__7233 = cljs.core.next(arglist__7233);
var y = cljs.core.first(arglist__7233);
var more = cljs.core.rest(arglist__7233);
return G__7231__delegate(x,y,more);
});
G__7231.cljs$core$IFn$_invoke$arity$variadic = G__7231__delegate;
return G__7231;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__7234 = null;
if (arguments.length > 2) {
var G__7235__i = 0, G__7235__a = new Array(arguments.length -  2);
while (G__7235__i < G__7235__a.length) {G__7235__a[G__7235__i] = arguments[G__7235__i + 2]; ++G__7235__i;}
G__7234 = new cljs.core.IndexedSeq(G__7235__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__7240__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7240 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7241__i = 0, G__7241__a = new Array(arguments.length -  2);
while (G__7241__i < G__7241__a.length) {G__7241__a[G__7241__i] = arguments[G__7241__i + 2]; ++G__7241__i;}
  more = new cljs.core.IndexedSeq(G__7241__a,0);
} 
return G__7240__delegate.call(this,x,y,more);};
G__7240.cljs$lang$maxFixedArity = 2;
G__7240.cljs$lang$applyTo = (function (arglist__7242){
var x = cljs.core.first(arglist__7242);
arglist__7242 = cljs.core.next(arglist__7242);
var y = cljs.core.first(arglist__7242);
var more = cljs.core.rest(arglist__7242);
return G__7240__delegate(x,y,more);
});
G__7240.cljs$core$IFn$_invoke$arity$variadic = G__7240__delegate;
return G__7240;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__7243 = null;
if (arguments.length > 2) {
var G__7244__i = 0, G__7244__a = new Array(arguments.length -  2);
while (G__7244__i < G__7244__a.length) {G__7244__a[G__7244__i] = arguments[G__7244__i + 2]; ++G__7244__i;}
G__7243 = new cljs.core.IndexedSeq(G__7244__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__7245__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__7246 = y;
var G__7247 = cljs.core.first(more);
var G__7248 = cljs.core.next(more);
x = G__7246;
y = G__7247;
more = G__7248;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7245 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7249__i = 0, G__7249__a = new Array(arguments.length -  2);
while (G__7249__i < G__7249__a.length) {G__7249__a[G__7249__i] = arguments[G__7249__i + 2]; ++G__7249__i;}
  more = new cljs.core.IndexedSeq(G__7249__a,0);
} 
return G__7245__delegate.call(this,x,y,more);};
G__7245.cljs$lang$maxFixedArity = 2;
G__7245.cljs$lang$applyTo = (function (arglist__7250){
var x = cljs.core.first(arglist__7250);
arglist__7250 = cljs.core.next(arglist__7250);
var y = cljs.core.first(arglist__7250);
var more = cljs.core.rest(arglist__7250);
return G__7245__delegate(x,y,more);
});
G__7245.cljs$core$IFn$_invoke$arity$variadic = G__7245__delegate;
return G__7245;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__7251 = null;
if (arguments.length > 2) {
var G__7252__i = 0, G__7252__a = new Array(arguments.length -  2);
while (G__7252__i < G__7252__a.length) {G__7252__a[G__7252__i] = arguments[G__7252__i + 2]; ++G__7252__i;}
G__7251 = new cljs.core.IndexedSeq(G__7252__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__7253__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__7254 = y;
var G__7255 = cljs.core.first(more);
var G__7256 = cljs.core.next(more);
x = G__7254;
y = G__7255;
more = G__7256;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7253 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7257__i = 0, G__7257__a = new Array(arguments.length -  2);
while (G__7257__i < G__7257__a.length) {G__7257__a[G__7257__i] = arguments[G__7257__i + 2]; ++G__7257__i;}
  more = new cljs.core.IndexedSeq(G__7257__a,0);
} 
return G__7253__delegate.call(this,x,y,more);};
G__7253.cljs$lang$maxFixedArity = 2;
G__7253.cljs$lang$applyTo = (function (arglist__7258){
var x = cljs.core.first(arglist__7258);
arglist__7258 = cljs.core.next(arglist__7258);
var y = cljs.core.first(arglist__7258);
var more = cljs.core.rest(arglist__7258);
return G__7253__delegate(x,y,more);
});
G__7253.cljs$core$IFn$_invoke$arity$variadic = G__7253__delegate;
return G__7253;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__7259 = null;
if (arguments.length > 2) {
var G__7260__i = 0, G__7260__a = new Array(arguments.length -  2);
while (G__7260__i < G__7260__a.length) {G__7260__a[G__7260__i] = arguments[G__7260__i + 2]; ++G__7260__i;}
G__7259 = new cljs.core.IndexedSeq(G__7260__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7259);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__7261__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__7262 = y;
var G__7263 = cljs.core.first(more);
var G__7264 = cljs.core.next(more);
x = G__7262;
y = G__7263;
more = G__7264;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7261 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7265__i = 0, G__7265__a = new Array(arguments.length -  2);
while (G__7265__i < G__7265__a.length) {G__7265__a[G__7265__i] = arguments[G__7265__i + 2]; ++G__7265__i;}
  more = new cljs.core.IndexedSeq(G__7265__a,0);
} 
return G__7261__delegate.call(this,x,y,more);};
G__7261.cljs$lang$maxFixedArity = 2;
G__7261.cljs$lang$applyTo = (function (arglist__7266){
var x = cljs.core.first(arglist__7266);
arglist__7266 = cljs.core.next(arglist__7266);
var y = cljs.core.first(arglist__7266);
var more = cljs.core.rest(arglist__7266);
return G__7261__delegate(x,y,more);
});
G__7261.cljs$core$IFn$_invoke$arity$variadic = G__7261__delegate;
return G__7261;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__7267 = null;
if (arguments.length > 2) {
var G__7268__i = 0, G__7268__a = new Array(arguments.length -  2);
while (G__7268__i < G__7268__a.length) {G__7268__a[G__7268__i] = arguments[G__7268__i + 2]; ++G__7268__i;}
G__7267 = new cljs.core.IndexedSeq(G__7268__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__7269__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__7270 = y;
var G__7271 = cljs.core.first(more);
var G__7272 = cljs.core.next(more);
x = G__7270;
y = G__7271;
more = G__7272;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7269 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7273__i = 0, G__7273__a = new Array(arguments.length -  2);
while (G__7273__i < G__7273__a.length) {G__7273__a[G__7273__i] = arguments[G__7273__i + 2]; ++G__7273__i;}
  more = new cljs.core.IndexedSeq(G__7273__a,0);
} 
return G__7269__delegate.call(this,x,y,more);};
G__7269.cljs$lang$maxFixedArity = 2;
G__7269.cljs$lang$applyTo = (function (arglist__7274){
var x = cljs.core.first(arglist__7274);
arglist__7274 = cljs.core.next(arglist__7274);
var y = cljs.core.first(arglist__7274);
var more = cljs.core.rest(arglist__7274);
return G__7269__delegate(x,y,more);
});
G__7269.cljs$core$IFn$_invoke$arity$variadic = G__7269__delegate;
return G__7269;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__7275 = null;
if (arguments.length > 2) {
var G__7276__i = 0, G__7276__a = new Array(arguments.length -  2);
while (G__7276__i < G__7276__a.length) {G__7276__a[G__7276__i] = arguments[G__7276__i + 2]; ++G__7276__i;}
G__7275 = new cljs.core.IndexedSeq(G__7276__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4076__auto__ = x;
var y__4077__auto__ = y;
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
});
var max__3 = (function() { 
var G__7277__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4076__auto__ = x;
var y__4077__auto__ = y;
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
})(),more);
};
var G__7277 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7278__i = 0, G__7278__a = new Array(arguments.length -  2);
while (G__7278__i < G__7278__a.length) {G__7278__a[G__7278__i] = arguments[G__7278__i + 2]; ++G__7278__i;}
  more = new cljs.core.IndexedSeq(G__7278__a,0);
} 
return G__7277__delegate.call(this,x,y,more);};
G__7277.cljs$lang$maxFixedArity = 2;
G__7277.cljs$lang$applyTo = (function (arglist__7279){
var x = cljs.core.first(arglist__7279);
arglist__7279 = cljs.core.next(arglist__7279);
var y = cljs.core.first(arglist__7279);
var more = cljs.core.rest(arglist__7279);
return G__7277__delegate(x,y,more);
});
G__7277.cljs$core$IFn$_invoke$arity$variadic = G__7277__delegate;
return G__7277;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__7280 = null;
if (arguments.length > 2) {
var G__7281__i = 0, G__7281__a = new Array(arguments.length -  2);
while (G__7281__i < G__7281__a.length) {G__7281__a[G__7281__i] = arguments[G__7281__i + 2]; ++G__7281__i;}
G__7280 = new cljs.core.IndexedSeq(G__7281__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4083__auto__ = x;
var y__4084__auto__ = y;
return ((x__4083__auto__ < y__4084__auto__) ? x__4083__auto__ : y__4084__auto__);
});
var min__3 = (function() { 
var G__7282__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4083__auto__ = x;
var y__4084__auto__ = y;
return ((x__4083__auto__ < y__4084__auto__) ? x__4083__auto__ : y__4084__auto__);
})(),more);
};
var G__7282 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7283__i = 0, G__7283__a = new Array(arguments.length -  2);
while (G__7283__i < G__7283__a.length) {G__7283__a[G__7283__i] = arguments[G__7283__i + 2]; ++G__7283__i;}
  more = new cljs.core.IndexedSeq(G__7283__a,0);
} 
return G__7282__delegate.call(this,x,y,more);};
G__7282.cljs$lang$maxFixedArity = 2;
G__7282.cljs$lang$applyTo = (function (arglist__7284){
var x = cljs.core.first(arglist__7284);
arglist__7284 = cljs.core.next(arglist__7284);
var y = cljs.core.first(arglist__7284);
var more = cljs.core.rest(arglist__7284);
return G__7282__delegate(x,y,more);
});
G__7282.cljs$core$IFn$_invoke$arity$variadic = G__7282__delegate;
return G__7282;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__7285 = null;
if (arguments.length > 2) {
var G__7286__i = 0, G__7286__a = new Array(arguments.length -  2);
while (G__7286__i < G__7286__a.length) {G__7286__a[G__7286__i] = arguments[G__7286__i + 2]; ++G__7286__i;}
G__7285 = new cljs.core.IndexedSeq(G__7286__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7285);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__7287__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__7287 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7288__i = 0, G__7288__a = new Array(arguments.length -  2);
while (G__7288__i < G__7288__a.length) {G__7288__a[G__7288__i] = arguments[G__7288__i + 2]; ++G__7288__i;}
  more = new cljs.core.IndexedSeq(G__7288__a,0);
} 
return G__7287__delegate.call(this,x,y,more);};
G__7287.cljs$lang$maxFixedArity = 2;
G__7287.cljs$lang$applyTo = (function (arglist__7289){
var x = cljs.core.first(arglist__7289);
arglist__7289 = cljs.core.next(arglist__7289);
var y = cljs.core.first(arglist__7289);
var more = cljs.core.rest(arglist__7289);
return G__7287__delegate(x,y,more);
});
G__7287.cljs$core$IFn$_invoke$arity$variadic = G__7287__delegate;
return G__7287;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__7290 = null;
if (arguments.length > 2) {
var G__7291__i = 0, G__7291__a = new Array(arguments.length -  2);
while (G__7291__i < G__7291__a.length) {G__7291__a[G__7291__i] = arguments[G__7291__i + 2]; ++G__7291__i;}
G__7290 = new cljs.core.IndexedSeq(G__7291__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__7292__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__7292 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7293__i = 0, G__7293__a = new Array(arguments.length -  2);
while (G__7293__i < G__7293__a.length) {G__7293__a[G__7293__i] = arguments[G__7293__i + 2]; ++G__7293__i;}
  more = new cljs.core.IndexedSeq(G__7293__a,0);
} 
return G__7292__delegate.call(this,x,y,more);};
G__7292.cljs$lang$maxFixedArity = 2;
G__7292.cljs$lang$applyTo = (function (arglist__7294){
var x = cljs.core.first(arglist__7294);
arglist__7294 = cljs.core.next(arglist__7294);
var y = cljs.core.first(arglist__7294);
var more = cljs.core.rest(arglist__7294);
return G__7292__delegate(x,y,more);
});
G__7292.cljs$core$IFn$_invoke$arity$variadic = G__7292__delegate;
return G__7292;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__7295 = null;
if (arguments.length > 2) {
var G__7296__i = 0, G__7296__a = new Array(arguments.length -  2);
while (G__7296__i < G__7296__a.length) {G__7296__a[G__7296__i] = arguments[G__7296__i + 2]; ++G__7296__i;}
G__7295 = new cljs.core.IndexedSeq(G__7296__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__7301__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__7301 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7302__i = 0, G__7302__a = new Array(arguments.length -  2);
while (G__7302__i < G__7302__a.length) {G__7302__a[G__7302__i] = arguments[G__7302__i + 2]; ++G__7302__i;}
  more = new cljs.core.IndexedSeq(G__7302__a,0);
} 
return G__7301__delegate.call(this,x,y,more);};
G__7301.cljs$lang$maxFixedArity = 2;
G__7301.cljs$lang$applyTo = (function (arglist__7303){
var x = cljs.core.first(arglist__7303);
arglist__7303 = cljs.core.next(arglist__7303);
var y = cljs.core.first(arglist__7303);
var more = cljs.core.rest(arglist__7303);
return G__7301__delegate(x,y,more);
});
G__7301.cljs$core$IFn$_invoke$arity$variadic = G__7301__delegate;
return G__7301;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__7304 = null;
if (arguments.length > 2) {
var G__7305__i = 0, G__7305__a = new Array(arguments.length -  2);
while (G__7305__i < G__7305__a.length) {G__7305__a[G__7305__i] = arguments[G__7305__i + 2]; ++G__7305__i;}
G__7304 = new cljs.core.IndexedSeq(G__7305__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7304);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__7306__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__7306 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7307__i = 0, G__7307__a = new Array(arguments.length -  2);
while (G__7307__i < G__7307__a.length) {G__7307__a[G__7307__i] = arguments[G__7307__i + 2]; ++G__7307__i;}
  more = new cljs.core.IndexedSeq(G__7307__a,0);
} 
return G__7306__delegate.call(this,x,y,more);};
G__7306.cljs$lang$maxFixedArity = 2;
G__7306.cljs$lang$applyTo = (function (arglist__7308){
var x = cljs.core.first(arglist__7308);
arglist__7308 = cljs.core.next(arglist__7308);
var y = cljs.core.first(arglist__7308);
var more = cljs.core.rest(arglist__7308);
return G__7306__delegate(x,y,more);
});
G__7306.cljs$core$IFn$_invoke$arity$variadic = G__7306__delegate;
return G__7306;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__7309 = null;
if (arguments.length > 2) {
var G__7310__i = 0, G__7310__a = new Array(arguments.length -  2);
while (G__7310__i < G__7310__a.length) {G__7310__a[G__7310__i] = arguments[G__7310__i + 2]; ++G__7310__i;}
G__7309 = new cljs.core.IndexedSeq(G__7310__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__7311__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__7311 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7312__i = 0, G__7312__a = new Array(arguments.length -  2);
while (G__7312__i < G__7312__a.length) {G__7312__a[G__7312__i] = arguments[G__7312__i + 2]; ++G__7312__i;}
  more = new cljs.core.IndexedSeq(G__7312__a,0);
} 
return G__7311__delegate.call(this,x,y,more);};
G__7311.cljs$lang$maxFixedArity = 2;
G__7311.cljs$lang$applyTo = (function (arglist__7313){
var x = cljs.core.first(arglist__7313);
arglist__7313 = cljs.core.next(arglist__7313);
var y = cljs.core.first(arglist__7313);
var more = cljs.core.rest(arglist__7313);
return G__7311__delegate(x,y,more);
});
G__7311.cljs$core$IFn$_invoke$arity$variadic = G__7311__delegate;
return G__7311;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__7314 = null;
if (arguments.length > 2) {
var G__7315__i = 0, G__7315__a = new Array(arguments.length -  2);
while (G__7315__i < G__7315__a.length) {G__7315__a[G__7315__i] = arguments[G__7315__i + 2]; ++G__7315__i;}
G__7314 = new cljs.core.IndexedSeq(G__7315__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__7318 = x;
var G__7319 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7318,G__7319) : cljs.core.mod.call(null,G__7318,G__7319));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__7320__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__7320 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7321__i = 0, G__7321__a = new Array(arguments.length -  2);
while (G__7321__i < G__7321__a.length) {G__7321__a[G__7321__i] = arguments[G__7321__i + 2]; ++G__7321__i;}
  more = new cljs.core.IndexedSeq(G__7321__a,0);
} 
return G__7320__delegate.call(this,x,y,more);};
G__7320.cljs$lang$maxFixedArity = 2;
G__7320.cljs$lang$applyTo = (function (arglist__7322){
var x = cljs.core.first(arglist__7322);
arglist__7322 = cljs.core.next(arglist__7322);
var y = cljs.core.first(arglist__7322);
var more = cljs.core.rest(arglist__7322);
return G__7320__delegate(x,y,more);
});
G__7320.cljs$core$IFn$_invoke$arity$variadic = G__7320__delegate;
return G__7320;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__7323 = null;
if (arguments.length > 2) {
var G__7324__i = 0, G__7324__a = new Array(arguments.length -  2);
while (G__7324__i < G__7324__a.length) {G__7324__a[G__7324__i] = arguments[G__7324__i + 2]; ++G__7324__i;}
G__7323 = new cljs.core.IndexedSeq(G__7324__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7323);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__7325__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__7325 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7326__i = 0, G__7326__a = new Array(arguments.length -  2);
while (G__7326__i < G__7326__a.length) {G__7326__a[G__7326__i] = arguments[G__7326__i + 2]; ++G__7326__i;}
  more = new cljs.core.IndexedSeq(G__7326__a,0);
} 
return G__7325__delegate.call(this,x,y,more);};
G__7325.cljs$lang$maxFixedArity = 2;
G__7325.cljs$lang$applyTo = (function (arglist__7327){
var x = cljs.core.first(arglist__7327);
arglist__7327 = cljs.core.next(arglist__7327);
var y = cljs.core.first(arglist__7327);
var more = cljs.core.rest(arglist__7327);
return G__7325__delegate(x,y,more);
});
G__7325.cljs$core$IFn$_invoke$arity$variadic = G__7325__delegate;
return G__7325;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__7328 = null;
if (arguments.length > 2) {
var G__7329__i = 0, G__7329__a = new Array(arguments.length -  2);
while (G__7329__i < G__7329__a.length) {G__7329__a[G__7329__i] = arguments[G__7329__i + 2]; ++G__7329__i;}
G__7328 = new cljs.core.IndexedSeq(G__7329__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7328);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__7332 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7332) : Math.floor.call(null,G__7332));
} else {
var G__7333 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7333) : Math.ceil.call(null,G__7333));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__7334__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__7334 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7335__i = 0, G__7335__a = new Array(arguments.length -  2);
while (G__7335__i < G__7335__a.length) {G__7335__a[G__7335__i] = arguments[G__7335__i + 2]; ++G__7335__i;}
  more = new cljs.core.IndexedSeq(G__7335__a,0);
} 
return G__7334__delegate.call(this,x,y,more);};
G__7334.cljs$lang$maxFixedArity = 2;
G__7334.cljs$lang$applyTo = (function (arglist__7336){
var x = cljs.core.first(arglist__7336);
arglist__7336 = cljs.core.next(arglist__7336);
var y = cljs.core.first(arglist__7336);
var more = cljs.core.rest(arglist__7336);
return G__7334__delegate(x,y,more);
});
G__7334.cljs$core$IFn$_invoke$arity$variadic = G__7334__delegate;
return G__7334;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__7337 = null;
if (arguments.length > 2) {
var G__7338__i = 0, G__7338__a = new Array(arguments.length -  2);
while (G__7338__i < G__7338__a.length) {G__7338__a[G__7338__i] = arguments[G__7338__i + 2]; ++G__7338__i;}
G__7337 = new cljs.core.IndexedSeq(G__7338__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__7339__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__7339 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7340__i = 0, G__7340__a = new Array(arguments.length -  2);
while (G__7340__i < G__7340__a.length) {G__7340__a[G__7340__i] = arguments[G__7340__i + 2]; ++G__7340__i;}
  more = new cljs.core.IndexedSeq(G__7340__a,0);
} 
return G__7339__delegate.call(this,x,y,more);};
G__7339.cljs$lang$maxFixedArity = 2;
G__7339.cljs$lang$applyTo = (function (arglist__7341){
var x = cljs.core.first(arglist__7341);
arglist__7341 = cljs.core.next(arglist__7341);
var y = cljs.core.first(arglist__7341);
var more = cljs.core.rest(arglist__7341);
return G__7339__delegate(x,y,more);
});
G__7339.cljs$core$IFn$_invoke$arity$variadic = G__7339__delegate;
return G__7339;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__7342 = null;
if (arguments.length > 2) {
var G__7343__i = 0, G__7343__a = new Array(arguments.length -  2);
while (G__7343__i < G__7343__a.length) {G__7343__a[G__7343__i] = arguments[G__7343__i + 2]; ++G__7343__i;}
G__7342 = new cljs.core.IndexedSeq(G__7343__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__7344__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__7344 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7345__i = 0, G__7345__a = new Array(arguments.length -  2);
while (G__7345__i < G__7345__a.length) {G__7345__a[G__7345__i] = arguments[G__7345__i + 2]; ++G__7345__i;}
  more = new cljs.core.IndexedSeq(G__7345__a,0);
} 
return G__7344__delegate.call(this,x,y,more);};
G__7344.cljs$lang$maxFixedArity = 2;
G__7344.cljs$lang$applyTo = (function (arglist__7346){
var x = cljs.core.first(arglist__7346);
arglist__7346 = cljs.core.next(arglist__7346);
var y = cljs.core.first(arglist__7346);
var more = cljs.core.rest(arglist__7346);
return G__7344__delegate(x,y,more);
});
G__7344.cljs$core$IFn$_invoke$arity$variadic = G__7344__delegate;
return G__7344;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__7347 = null;
if (arguments.length > 2) {
var G__7348__i = 0, G__7348__a = new Array(arguments.length -  2);
while (G__7348__i < G__7348__a.length) {G__7348__a[G__7348__i] = arguments[G__7348__i + 2]; ++G__7348__i;}
G__7347 = new cljs.core.IndexedSeq(G__7348__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__7349__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__7349 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7350__i = 0, G__7350__a = new Array(arguments.length -  2);
while (G__7350__i < G__7350__a.length) {G__7350__a[G__7350__i] = arguments[G__7350__i + 2]; ++G__7350__i;}
  more = new cljs.core.IndexedSeq(G__7350__a,0);
} 
return G__7349__delegate.call(this,x,y,more);};
G__7349.cljs$lang$maxFixedArity = 2;
G__7349.cljs$lang$applyTo = (function (arglist__7351){
var x = cljs.core.first(arglist__7351);
arglist__7351 = cljs.core.next(arglist__7351);
var y = cljs.core.first(arglist__7351);
var more = cljs.core.rest(arglist__7351);
return G__7349__delegate(x,y,more);
});
G__7349.cljs$core$IFn$_invoke$arity$variadic = G__7349__delegate;
return G__7349;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__7352 = null;
if (arguments.length > 2) {
var G__7353__i = 0, G__7353__a = new Array(arguments.length -  2);
while (G__7353__i < G__7353__a.length) {G__7353__a[G__7353__i] = arguments[G__7353__i + 2]; ++G__7353__i;}
G__7352 = new cljs.core.IndexedSeq(G__7353__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7352);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__7358__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__7359 = y;
var G__7360 = cljs.core.first(more);
var G__7361 = cljs.core.next(more);
x = G__7359;
y = G__7360;
more = G__7361;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__7358 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__7362__i = 0, G__7362__a = new Array(arguments.length -  2);
while (G__7362__i < G__7362__a.length) {G__7362__a[G__7362__i] = arguments[G__7362__i + 2]; ++G__7362__i;}
  more = new cljs.core.IndexedSeq(G__7362__a,0);
} 
return G__7358__delegate.call(this,x,y,more);};
G__7358.cljs$lang$maxFixedArity = 2;
G__7358.cljs$lang$applyTo = (function (arglist__7363){
var x = cljs.core.first(arglist__7363);
arglist__7363 = cljs.core.next(arglist__7363);
var y = cljs.core.first(arglist__7363);
var more = cljs.core.rest(arglist__7363);
return G__7358__delegate(x,y,more);
});
G__7358.cljs$core$IFn$_invoke$arity$variadic = G__7358__delegate;
return G__7358;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__7364 = null;
if (arguments.length > 2) {
var G__7365__i = 0, G__7365__a = new Array(arguments.length -  2);
while (G__7365__i < G__7365__a.length) {G__7365__a[G__7365__i] = arguments[G__7365__i + 2]; ++G__7365__i;}
G__7364 = new cljs.core.IndexedSeq(G__7365__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__7366 = (n__$1 - (1));
var G__7367 = cljs.core.next(xs);
n__$1 = G__7366;
xs = G__7367;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__7371 = x;
return goog.string.buildString(G__7371);
}
});
var str__2 = (function() { 
var G__7372__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__7373 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__7374 = cljs.core.next(more);
sb = G__7373;
more = G__7374;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__7372 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__7375__i = 0, G__7375__a = new Array(arguments.length -  1);
while (G__7375__i < G__7375__a.length) {G__7375__a[G__7375__i] = arguments[G__7375__i + 1]; ++G__7375__i;}
  ys = new cljs.core.IndexedSeq(G__7375__a,0);
} 
return G__7372__delegate.call(this,x,ys);};
G__7372.cljs$lang$maxFixedArity = 1;
G__7372.cljs$lang$applyTo = (function (arglist__7376){
var x = cljs.core.first(arglist__7376);
var ys = cljs.core.rest(arglist__7376);
return G__7372__delegate(x,ys);
});
G__7372.cljs$core$IFn$_invoke$arity$variadic = G__7372__delegate;
return G__7372;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__7377 = null;
if (arguments.length > 1) {
var G__7378__i = 0, G__7378__a = new Array(arguments.length -  1);
while (G__7378__i < G__7378__a.length) {G__7378__a[G__7378__i] = arguments[G__7378__i + 1]; ++G__7378__i;}
G__7377 = new cljs.core.IndexedSeq(G__7378__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__7379 = cljs.core.next(xs);
var G__7380 = cljs.core.next(ys);
xs = G__7379;
ys = G__7380;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__7381 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__7382 = cljs.core.next(s);
res = G__7381;
s = G__7382;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__7387 = ((h + (cljs.core.hash((function (){var G__7385 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7385) : cljs.core.key.call(null,G__7385));
})()) ^ cljs.core.hash((function (){var G__7386 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7386) : cljs.core.val.call(null,G__7386));
})()))) % (4503599627370496));
var G__7388 = cljs.core.next(s);
h = G__7387;
s = G__7388;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__7389 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__7390 = cljs.core.next(s__$1);
h = G__7389;
s__$1 = G__7390;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__7401_7411 = cljs.core.seq(fn_map);
var chunk__7402_7412 = null;
var count__7403_7413 = (0);
var i__7404_7414 = (0);
while(true){
if((i__7404_7414 < count__7403_7413)){
var vec__7405_7415 = chunk__7402_7412.cljs$core$IIndexed$_nth$arity$2(null,i__7404_7414);
var key_name_7416 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7405_7415,(0),null);
var f_7417 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7405_7415,(1),null);
var str_name_7418 = (function (){var G__7406 = key_name_7416;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7406) : cljs.core.name.call(null,G__7406));
})();
(obj[str_name_7418] = f_7417);

var G__7419 = seq__7401_7411;
var G__7420 = chunk__7402_7412;
var G__7421 = count__7403_7413;
var G__7422 = (i__7404_7414 + (1));
seq__7401_7411 = G__7419;
chunk__7402_7412 = G__7420;
count__7403_7413 = G__7421;
i__7404_7414 = G__7422;
continue;
} else {
var temp__4126__auto___7423 = cljs.core.seq(seq__7401_7411);
if(temp__4126__auto___7423){
var seq__7401_7424__$1 = temp__4126__auto___7423;
if(cljs.core.chunked_seq_QMARK_(seq__7401_7424__$1)){
var c__4546__auto___7425 = (function (){var G__7407 = seq__7401_7424__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7407) : cljs.core.chunk_first.call(null,G__7407));
})();
var G__7426 = (function (){var G__7408 = seq__7401_7424__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7408) : cljs.core.chunk_rest.call(null,G__7408));
})();
var G__7427 = c__4546__auto___7425;
var G__7428 = cljs.core.count(c__4546__auto___7425);
var G__7429 = (0);
seq__7401_7411 = G__7426;
chunk__7402_7412 = G__7427;
count__7403_7413 = G__7428;
i__7404_7414 = G__7429;
continue;
} else {
var vec__7409_7430 = cljs.core.first(seq__7401_7424__$1);
var key_name_7431 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7409_7430,(0),null);
var f_7432 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7409_7430,(1),null);
var str_name_7433 = (function (){var G__7410 = key_name_7431;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7410) : cljs.core.name.call(null,G__7410));
})();
(obj[str_name_7433] = f_7432);

var G__7434 = cljs.core.next(seq__7401_7424__$1);
var G__7435 = null;
var G__7436 = (0);
var G__7437 = (0);
seq__7401_7411 = G__7434;
chunk__7402_7412 = G__7435;
count__7403_7413 = G__7436;
i__7404_7414 = G__7437;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__7439 = coll;
if(G__7439){
var bit__4440__auto__ = (G__7439.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4440__auto__) || (G__7439.cljs$core$IReversible$)){
return true;
} else {
if((!G__7439.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7439);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__7439);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__7440 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__7440;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__7441 = (i - (1));
var G__7442 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__7441;
r = G__7442;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__7443__i = 0, G__7443__a = new Array(arguments.length -  0);
while (G__7443__i < G__7443__a.length) {G__7443__a[G__7443__i] = arguments[G__7443__i + 0]; ++G__7443__i;}
  xs = new cljs.core.IndexedSeq(G__7443__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__7444){
var xs = cljs.core.seq(arglist__7444);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3759__auto__ = (coll == null);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var G__7448 = coll;
if(G__7448){
var bit__4433__auto__ = (G__7448.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__7448.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__7450 = x;
if(G__7450){
var bit__4440__auto__ = (G__7450.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4440__auto__) || (G__7450.cljs$core$IList$)){
return true;
} else {
if((!G__7450.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7450);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__7450);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.not(a.ns);
if(and__3747__auto__){
return b.ns;
} else {
return and__3747__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__7457 = a.ns;
var G__7458 = b.ns;
return goog.array.defaultCompare(G__7457,G__7458);
})();
if(((0) === nsc)){
var G__7459 = a.name;
var G__7460 = b.name;
return goog.array.defaultCompare(G__7459,G__7460);
} else {
return nsc;
}
}
} else {
var G__7461 = a.name;
var G__7462 = b.name;
return goog.array.defaultCompare(G__7461,G__7462);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4180__auto__ = self__._hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__7464 = null;
var G__7464__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__7464__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__7464 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__7464__2.call(this,self__,coll);
case 3:
return G__7464__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7464.cljs$core$IFn$_invoke$arity$2 = G__7464__2;
G__7464.cljs$core$IFn$_invoke$arity$3 = G__7464__3;
return G__7464;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args7463){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args7463)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__7466 = x;
if(G__7466){
var bit__4433__auto__ = (G__7466.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4433__auto__) || (G__7466.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__7468 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7468) : cljs.core.name.call(null,G__7468));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__7469 = ls.sval();
ls = G__7469;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__7471 = s;
if(G__7471){
var bit__4433__auto__ = (G__7471.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4433__auto__) || (G__7471.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__7472 = cljs.core.next(s__$1);
s__$1 = G__7472;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_7473 = (0);
var xs_7474 = cljs.core.seq(coll);
while(true){
if(xs_7474){
(ret[i_7473] = cljs.core.to_array(cljs.core.first(xs_7474)));

var G__7475 = (i_7473 + (1));
var G__7476 = cljs.core.next(xs_7474);
i_7473 = G__7475;
xs_7474 = G__7476;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7479 = (i + (1));
var G__7480 = cljs.core.next(s__$1);
i = G__7479;
s__$1 = G__7480;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___7481 = size;
var i_7482 = (0);
while(true){
if((i_7482 < n__4646__auto___7481)){
(a[i_7482] = init_val_or_seq);

var G__7483 = (i_7482 + (1));
i_7482 = G__7483;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7486 = (i + (1));
var G__7487 = cljs.core.next(s__$1);
i = G__7486;
s__$1 = G__7487;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___7488 = size;
var i_7489 = (0);
while(true){
if((i_7489 < n__4646__auto___7488)){
(a[i_7489] = init_val_or_seq);

var G__7490 = (i_7489 + (1));
i_7489 = G__7490;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7493 = (i + (1));
var G__7494 = cljs.core.next(s__$1);
i = G__7493;
s__$1 = G__7494;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___7495 = size;
var i_7496 = (0);
while(true){
if((i_7496 < n__4646__auto___7495)){
(a[i_7496] = init_val_or_seq);

var G__7497 = (i_7496 + (1));
i_7496 = G__7497;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__7500 = (i + (1));
var G__7501 = cljs.core.next(s__$1);
i = G__7500;
s__$1 = G__7501;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___7502 = size;
var i_7503 = (0);
while(true){
if((i_7503 < n__4646__auto___7502)){
(a[i_7503] = init_val_or_seq);

var G__7504 = (i_7503 + (1));
i_7503 = G__7504;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__7505 = cljs.core.next(s__$1);
var G__7506 = (i - (1));
var G__7507 = (sum + (1));
s__$1 = G__7505;
i = G__7506;
sum = G__7507;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__7527__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__7527 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7528__i = 0, G__7528__a = new Array(arguments.length -  2);
while (G__7528__i < G__7528__a.length) {G__7528__a[G__7528__i] = arguments[G__7528__i + 2]; ++G__7528__i;}
  zs = new cljs.core.IndexedSeq(G__7528__a,0);
} 
return G__7527__delegate.call(this,x,y,zs);};
G__7527.cljs$lang$maxFixedArity = 2;
G__7527.cljs$lang$applyTo = (function (arglist__7529){
var x = cljs.core.first(arglist__7529);
arglist__7529 = cljs.core.next(arglist__7529);
var y = cljs.core.first(arglist__7529);
var zs = cljs.core.rest(arglist__7529);
return G__7527__delegate(x,y,zs);
});
G__7527.cljs$core$IFn$_invoke$arity$variadic = G__7527__delegate;
return G__7527;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__7530 = null;
if (arguments.length > 2) {
var G__7531__i = 0, G__7531__a = new Array(arguments.length -  2);
while (G__7531__i < G__7531__a.length) {G__7531__a[G__7531__i] = arguments[G__7531__i + 2]; ++G__7531__i;}
G__7530 = new cljs.core.IndexedSeq(G__7531__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__7532__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__7532 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__7533__i = 0, G__7533__a = new Array(arguments.length -  4);
while (G__7533__i < G__7533__a.length) {G__7533__a[G__7533__i] = arguments[G__7533__i + 4]; ++G__7533__i;}
  more = new cljs.core.IndexedSeq(G__7533__a,0);
} 
return G__7532__delegate.call(this,a,b,c,d,more);};
G__7532.cljs$lang$maxFixedArity = 4;
G__7532.cljs$lang$applyTo = (function (arglist__7534){
var a = cljs.core.first(arglist__7534);
arglist__7534 = cljs.core.next(arglist__7534);
var b = cljs.core.first(arglist__7534);
arglist__7534 = cljs.core.next(arglist__7534);
var c = cljs.core.first(arglist__7534);
arglist__7534 = cljs.core.next(arglist__7534);
var d = cljs.core.first(arglist__7534);
var more = cljs.core.rest(arglist__7534);
return G__7532__delegate(a,b,c,d,more);
});
G__7532.cljs$core$IFn$_invoke$arity$variadic = G__7532__delegate;
return G__7532;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__7535 = null;
if (arguments.length > 4) {
var G__7536__i = 0, G__7536__a = new Array(arguments.length -  4);
while (G__7536__i < G__7536__a.length) {G__7536__a[G__7536__i] = arguments[G__7536__i + 4]; ++G__7536__i;}
G__7535 = new cljs.core.IndexedSeq(G__7536__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__7535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__7537__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7538 = ntcoll;
var G__7539 = cljs.core.first(vals);
var G__7540 = cljs.core.next(vals);
tcoll = G__7538;
val = G__7539;
vals = G__7540;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7537 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7541__i = 0, G__7541__a = new Array(arguments.length -  2);
while (G__7541__i < G__7541__a.length) {G__7541__a[G__7541__i] = arguments[G__7541__i + 2]; ++G__7541__i;}
  vals = new cljs.core.IndexedSeq(G__7541__a,0);
} 
return G__7537__delegate.call(this,tcoll,val,vals);};
G__7537.cljs$lang$maxFixedArity = 2;
G__7537.cljs$lang$applyTo = (function (arglist__7542){
var tcoll = cljs.core.first(arglist__7542);
arglist__7542 = cljs.core.next(arglist__7542);
var val = cljs.core.first(arglist__7542);
var vals = cljs.core.rest(arglist__7542);
return G__7537__delegate(tcoll,val,vals);
});
G__7537.cljs$core$IFn$_invoke$arity$variadic = G__7537__delegate;
return G__7537;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__7543 = null;
if (arguments.length > 2) {
var G__7544__i = 0, G__7544__a = new Array(arguments.length -  2);
while (G__7544__i < G__7544__a.length) {G__7544__a[G__7544__i] = arguments[G__7544__i + 2]; ++G__7544__i;}
G__7543 = new cljs.core.IndexedSeq(G__7544__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__7545__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__7546 = ntcoll;
var G__7547 = cljs.core.first(kvs);
var G__7548 = cljs.core.second(kvs);
var G__7549 = cljs.core.nnext(kvs);
tcoll = G__7546;
key = G__7547;
val = G__7548;
kvs = G__7549;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7545 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__7550__i = 0, G__7550__a = new Array(arguments.length -  3);
while (G__7550__i < G__7550__a.length) {G__7550__a[G__7550__i] = arguments[G__7550__i + 3]; ++G__7550__i;}
  kvs = new cljs.core.IndexedSeq(G__7550__a,0);
} 
return G__7545__delegate.call(this,tcoll,key,val,kvs);};
G__7545.cljs$lang$maxFixedArity = 3;
G__7545.cljs$lang$applyTo = (function (arglist__7551){
var tcoll = cljs.core.first(arglist__7551);
arglist__7551 = cljs.core.next(arglist__7551);
var key = cljs.core.first(arglist__7551);
arglist__7551 = cljs.core.next(arglist__7551);
var val = cljs.core.first(arglist__7551);
var kvs = cljs.core.rest(arglist__7551);
return G__7545__delegate(tcoll,key,val,kvs);
});
G__7545.cljs$core$IFn$_invoke$arity$variadic = G__7545__delegate;
return G__7545;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__7552 = null;
if (arguments.length > 3) {
var G__7553__i = 0, G__7553__a = new Array(arguments.length -  3);
while (G__7553__i < G__7553__a.length) {G__7553__a[G__7553__i] = arguments[G__7553__i + 3]; ++G__7553__i;}
G__7552 = new cljs.core.IndexedSeq(G__7553__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__7552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__7554__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__7555 = ntcoll;
var G__7556 = cljs.core.first(ks);
var G__7557 = cljs.core.next(ks);
tcoll = G__7555;
key = G__7556;
ks = G__7557;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7554 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__7558__i = 0, G__7558__a = new Array(arguments.length -  2);
while (G__7558__i < G__7558__a.length) {G__7558__a[G__7558__i] = arguments[G__7558__i + 2]; ++G__7558__i;}
  ks = new cljs.core.IndexedSeq(G__7558__a,0);
} 
return G__7554__delegate.call(this,tcoll,key,ks);};
G__7554.cljs$lang$maxFixedArity = 2;
G__7554.cljs$lang$applyTo = (function (arglist__7559){
var tcoll = cljs.core.first(arglist__7559);
arglist__7559 = cljs.core.next(arglist__7559);
var key = cljs.core.first(arglist__7559);
var ks = cljs.core.rest(arglist__7559);
return G__7554__delegate(tcoll,key,ks);
});
G__7554.cljs$core$IFn$_invoke$arity$variadic = G__7554__delegate;
return G__7554;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__7560 = null;
if (arguments.length > 2) {
var G__7561__i = 0, G__7561__a = new Array(arguments.length -  2);
while (G__7561__i < G__7561__a.length) {G__7561__a[G__7561__i] = arguments[G__7561__i + 2]; ++G__7561__i;}
G__7560 = new cljs.core.IndexedSeq(G__7561__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__7560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__7562__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__7563 = ntcoll;
var G__7564 = cljs.core.first(vals);
var G__7565 = cljs.core.next(vals);
tcoll = G__7563;
val = G__7564;
vals = G__7565;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__7562 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__7566__i = 0, G__7566__a = new Array(arguments.length -  2);
while (G__7566__i < G__7566__a.length) {G__7566__a[G__7566__i] = arguments[G__7566__i + 2]; ++G__7566__i;}
  vals = new cljs.core.IndexedSeq(G__7566__a,0);
} 
return G__7562__delegate.call(this,tcoll,val,vals);};
G__7562.cljs$lang$maxFixedArity = 2;
G__7562.cljs$lang$applyTo = (function (arglist__7567){
var tcoll = cljs.core.first(arglist__7567);
arglist__7567 = cljs.core.next(arglist__7567);
var val = cljs.core.first(arglist__7567);
var vals = cljs.core.rest(arglist__7567);
return G__7562__delegate(tcoll,val,vals);
});
G__7562.cljs$core$IFn$_invoke$arity$variadic = G__7562__delegate;
return G__7562;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__7568 = null;
if (arguments.length > 2) {
var G__7569__i = 0, G__7569__a = new Array(arguments.length -  2);
while (G__7569__i < G__7569__a.length) {G__7569__a[G__7569__i] = arguments[G__7569__i + 2]; ++G__7569__i;}
G__7568 = new cljs.core.IndexedSeq(G__7569__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__7568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4690 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4690);
} else {
var G__7780 = a4690;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7780) : f.call(null,G__7780));
}
} else {
var b4691 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4690,b4691);
} else {
var G__7781 = a4690;
var G__7782 = b4691;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7781,G__7782) : f.call(null,G__7781,G__7782));
}
} else {
var c4692 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4690,b4691,c4692);
} else {
var G__7783 = a4690;
var G__7784 = b4691;
var G__7785 = c4692;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7783,G__7784,G__7785) : f.call(null,G__7783,G__7784,G__7785));
}
} else {
var d4693 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4690,b4691,c4692,d4693);
} else {
var G__7786 = a4690;
var G__7787 = b4691;
var G__7788 = c4692;
var G__7789 = d4693;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7786,G__7787,G__7788,G__7789) : f.call(null,G__7786,G__7787,G__7788,G__7789));
}
} else {
var e4694 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4690,b4691,c4692,d4693,e4694);
} else {
var G__7790 = a4690;
var G__7791 = b4691;
var G__7792 = c4692;
var G__7793 = d4693;
var G__7794 = e4694;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7790,G__7791,G__7792,G__7793,G__7794) : f.call(null,G__7790,G__7791,G__7792,G__7793,G__7794));
}
} else {
var f4695 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4690,b4691,c4692,d4693,e4694,f4695);
} else {
var G__7795 = a4690;
var G__7796 = b4691;
var G__7797 = c4692;
var G__7798 = d4693;
var G__7799 = e4694;
var G__7800 = f4695;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7795,G__7796,G__7797,G__7798,G__7799,G__7800) : f.call(null,G__7795,G__7796,G__7797,G__7798,G__7799,G__7800));
}
} else {
var g4696 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4690,b4691,c4692,d4693,e4694,f4695,g4696);
} else {
var G__7801 = a4690;
var G__7802 = b4691;
var G__7803 = c4692;
var G__7804 = d4693;
var G__7805 = e4694;
var G__7806 = f4695;
var G__7807 = g4696;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807) : f.call(null,G__7801,G__7802,G__7803,G__7804,G__7805,G__7806,G__7807));
}
} else {
var h4697 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697);
} else {
var G__7808 = a4690;
var G__7809 = b4691;
var G__7810 = c4692;
var G__7811 = d4693;
var G__7812 = e4694;
var G__7813 = f4695;
var G__7814 = g4696;
var G__7815 = h4697;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__7808,G__7809,G__7810,G__7811,G__7812,G__7813,G__7814,G__7815) : f.call(null,G__7808,G__7809,G__7810,G__7811,G__7812,G__7813,G__7814,G__7815));
}
} else {
var i4698 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698);
} else {
var G__7816 = a4690;
var G__7817 = b4691;
var G__7818 = c4692;
var G__7819 = d4693;
var G__7820 = e4694;
var G__7821 = f4695;
var G__7822 = g4696;
var G__7823 = h4697;
var G__7824 = i4698;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824) : f.call(null,G__7816,G__7817,G__7818,G__7819,G__7820,G__7821,G__7822,G__7823,G__7824));
}
} else {
var j4699 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699);
} else {
var G__7825 = a4690;
var G__7826 = b4691;
var G__7827 = c4692;
var G__7828 = d4693;
var G__7829 = e4694;
var G__7830 = f4695;
var G__7831 = g4696;
var G__7832 = h4697;
var G__7833 = i4698;
var G__7834 = j4699;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834) : f.call(null,G__7825,G__7826,G__7827,G__7828,G__7829,G__7830,G__7831,G__7832,G__7833,G__7834));
}
} else {
var k4700 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700);
} else {
var G__7835 = a4690;
var G__7836 = b4691;
var G__7837 = c4692;
var G__7838 = d4693;
var G__7839 = e4694;
var G__7840 = f4695;
var G__7841 = g4696;
var G__7842 = h4697;
var G__7843 = i4698;
var G__7844 = j4699;
var G__7845 = k4700;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__7835,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845) : f.call(null,G__7835,G__7836,G__7837,G__7838,G__7839,G__7840,G__7841,G__7842,G__7843,G__7844,G__7845));
}
} else {
var l4701 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701);
} else {
var G__7846 = a4690;
var G__7847 = b4691;
var G__7848 = c4692;
var G__7849 = d4693;
var G__7850 = e4694;
var G__7851 = f4695;
var G__7852 = g4696;
var G__7853 = h4697;
var G__7854 = i4698;
var G__7855 = j4699;
var G__7856 = k4700;
var G__7857 = l4701;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857) : f.call(null,G__7846,G__7847,G__7848,G__7849,G__7850,G__7851,G__7852,G__7853,G__7854,G__7855,G__7856,G__7857));
}
} else {
var m4702 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702);
} else {
var G__7858 = a4690;
var G__7859 = b4691;
var G__7860 = c4692;
var G__7861 = d4693;
var G__7862 = e4694;
var G__7863 = f4695;
var G__7864 = g4696;
var G__7865 = h4697;
var G__7866 = i4698;
var G__7867 = j4699;
var G__7868 = k4700;
var G__7869 = l4701;
var G__7870 = m4702;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870) : f.call(null,G__7858,G__7859,G__7860,G__7861,G__7862,G__7863,G__7864,G__7865,G__7866,G__7867,G__7868,G__7869,G__7870));
}
} else {
var n4703 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703);
} else {
var G__7871 = a4690;
var G__7872 = b4691;
var G__7873 = c4692;
var G__7874 = d4693;
var G__7875 = e4694;
var G__7876 = f4695;
var G__7877 = g4696;
var G__7878 = h4697;
var G__7879 = i4698;
var G__7880 = j4699;
var G__7881 = k4700;
var G__7882 = l4701;
var G__7883 = m4702;
var G__7884 = n4703;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884) : f.call(null,G__7871,G__7872,G__7873,G__7874,G__7875,G__7876,G__7877,G__7878,G__7879,G__7880,G__7881,G__7882,G__7883,G__7884));
}
} else {
var o4704 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704);
} else {
var G__7885 = a4690;
var G__7886 = b4691;
var G__7887 = c4692;
var G__7888 = d4693;
var G__7889 = e4694;
var G__7890 = f4695;
var G__7891 = g4696;
var G__7892 = h4697;
var G__7893 = i4698;
var G__7894 = j4699;
var G__7895 = k4700;
var G__7896 = l4701;
var G__7897 = m4702;
var G__7898 = n4703;
var G__7899 = o4704;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899) : f.call(null,G__7885,G__7886,G__7887,G__7888,G__7889,G__7890,G__7891,G__7892,G__7893,G__7894,G__7895,G__7896,G__7897,G__7898,G__7899));
}
} else {
var p4705 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705);
} else {
var G__7900 = a4690;
var G__7901 = b4691;
var G__7902 = c4692;
var G__7903 = d4693;
var G__7904 = e4694;
var G__7905 = f4695;
var G__7906 = g4696;
var G__7907 = h4697;
var G__7908 = i4698;
var G__7909 = j4699;
var G__7910 = k4700;
var G__7911 = l4701;
var G__7912 = m4702;
var G__7913 = n4703;
var G__7914 = o4704;
var G__7915 = p4705;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915) : f.call(null,G__7900,G__7901,G__7902,G__7903,G__7904,G__7905,G__7906,G__7907,G__7908,G__7909,G__7910,G__7911,G__7912,G__7913,G__7914,G__7915));
}
} else {
var q4706 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706);
} else {
var G__7916 = a4690;
var G__7917 = b4691;
var G__7918 = c4692;
var G__7919 = d4693;
var G__7920 = e4694;
var G__7921 = f4695;
var G__7922 = g4696;
var G__7923 = h4697;
var G__7924 = i4698;
var G__7925 = j4699;
var G__7926 = k4700;
var G__7927 = l4701;
var G__7928 = m4702;
var G__7929 = n4703;
var G__7930 = o4704;
var G__7931 = p4705;
var G__7932 = q4706;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930,G__7931,G__7932) : f.call(null,G__7916,G__7917,G__7918,G__7919,G__7920,G__7921,G__7922,G__7923,G__7924,G__7925,G__7926,G__7927,G__7928,G__7929,G__7930,G__7931,G__7932));
}
} else {
var r4707 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707);
} else {
var G__7933 = a4690;
var G__7934 = b4691;
var G__7935 = c4692;
var G__7936 = d4693;
var G__7937 = e4694;
var G__7938 = f4695;
var G__7939 = g4696;
var G__7940 = h4697;
var G__7941 = i4698;
var G__7942 = j4699;
var G__7943 = k4700;
var G__7944 = l4701;
var G__7945 = m4702;
var G__7946 = n4703;
var G__7947 = o4704;
var G__7948 = p4705;
var G__7949 = q4706;
var G__7950 = r4707;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941,G__7942,G__7943,G__7944,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950) : f.call(null,G__7933,G__7934,G__7935,G__7936,G__7937,G__7938,G__7939,G__7940,G__7941,G__7942,G__7943,G__7944,G__7945,G__7946,G__7947,G__7948,G__7949,G__7950));
}
} else {
var s4708 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707,s4708);
} else {
var G__7951 = a4690;
var G__7952 = b4691;
var G__7953 = c4692;
var G__7954 = d4693;
var G__7955 = e4694;
var G__7956 = f4695;
var G__7957 = g4696;
var G__7958 = h4697;
var G__7959 = i4698;
var G__7960 = j4699;
var G__7961 = k4700;
var G__7962 = l4701;
var G__7963 = m4702;
var G__7964 = n4703;
var G__7965 = o4704;
var G__7966 = p4705;
var G__7967 = q4706;
var G__7968 = r4707;
var G__7969 = s4708;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969) : f.call(null,G__7951,G__7952,G__7953,G__7954,G__7955,G__7956,G__7957,G__7958,G__7959,G__7960,G__7961,G__7962,G__7963,G__7964,G__7965,G__7966,G__7967,G__7968,G__7969));
}
} else {
var t4709 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707,s4708,t4709);
} else {
var G__7970 = a4690;
var G__7971 = b4691;
var G__7972 = c4692;
var G__7973 = d4693;
var G__7974 = e4694;
var G__7975 = f4695;
var G__7976 = g4696;
var G__7977 = h4697;
var G__7978 = i4698;
var G__7979 = j4699;
var G__7980 = k4700;
var G__7981 = l4701;
var G__7982 = m4702;
var G__7983 = n4703;
var G__7984 = o4704;
var G__7985 = p4705;
var G__7986 = q4706;
var G__7987 = r4707;
var G__7988 = s4708;
var G__7989 = t4709;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989) : f.call(null,G__7970,G__7971,G__7972,G__7973,G__7974,G__7975,G__7976,G__7977,G__7978,G__7979,G__7980,G__7981,G__7982,G__7983,G__7984,G__7985,G__7986,G__7987,G__7988,G__7989));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__7990__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__7990 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__7991__i = 0, G__7991__a = new Array(arguments.length -  5);
while (G__7991__i < G__7991__a.length) {G__7991__a[G__7991__i] = arguments[G__7991__i + 5]; ++G__7991__i;}
  args = new cljs.core.IndexedSeq(G__7991__a,0);
} 
return G__7990__delegate.call(this,f,a,b,c,d,args);};
G__7990.cljs$lang$maxFixedArity = 5;
G__7990.cljs$lang$applyTo = (function (arglist__7992){
var f = cljs.core.first(arglist__7992);
arglist__7992 = cljs.core.next(arglist__7992);
var a = cljs.core.first(arglist__7992);
arglist__7992 = cljs.core.next(arglist__7992);
var b = cljs.core.first(arglist__7992);
arglist__7992 = cljs.core.next(arglist__7992);
var c = cljs.core.first(arglist__7992);
arglist__7992 = cljs.core.next(arglist__7992);
var d = cljs.core.first(arglist__7992);
var args = cljs.core.rest(arglist__7992);
return G__7990__delegate(f,a,b,c,d,args);
});
G__7990.cljs$core$IFn$_invoke$arity$variadic = G__7990__delegate;
return G__7990;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__7993 = null;
if (arguments.length > 5) {
var G__7994__i = 0, G__7994__a = new Array(arguments.length -  5);
while (G__7994__i < G__7994__a.length) {G__7994__a[G__7994__i] = arguments[G__7994__i + 5]; ++G__7994__i;}
G__7993 = new cljs.core.IndexedSeq(G__7994__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__7993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__8010 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8010) : f.call(null,G__8010));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__8011 = cljs.core.meta(obj);
var G__8012 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8011,G__8012) : f.call(null,G__8011,G__8012));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__8013 = cljs.core.meta(obj);
var G__8014 = a;
var G__8015 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8013,G__8014,G__8015) : f.call(null,G__8013,G__8014,G__8015));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__8016 = cljs.core.meta(obj);
var G__8017 = a;
var G__8018 = b;
var G__8019 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8016,G__8017,G__8018,G__8019) : f.call(null,G__8016,G__8017,G__8018,G__8019));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__8020 = cljs.core.meta(obj);
var G__8021 = a;
var G__8022 = b;
var G__8023 = c;
var G__8024 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8020,G__8021,G__8022,G__8023,G__8024) : f.call(null,G__8020,G__8021,G__8022,G__8023,G__8024));
})());
});
var vary_meta__7 = (function() { 
var G__8025__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__8025 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__8026__i = 0, G__8026__a = new Array(arguments.length -  6);
while (G__8026__i < G__8026__a.length) {G__8026__a[G__8026__i] = arguments[G__8026__i + 6]; ++G__8026__i;}
  args = new cljs.core.IndexedSeq(G__8026__a,0);
} 
return G__8025__delegate.call(this,obj,f,a,b,c,d,args);};
G__8025.cljs$lang$maxFixedArity = 6;
G__8025.cljs$lang$applyTo = (function (arglist__8027){
var obj = cljs.core.first(arglist__8027);
arglist__8027 = cljs.core.next(arglist__8027);
var f = cljs.core.first(arglist__8027);
arglist__8027 = cljs.core.next(arglist__8027);
var a = cljs.core.first(arglist__8027);
arglist__8027 = cljs.core.next(arglist__8027);
var b = cljs.core.first(arglist__8027);
arglist__8027 = cljs.core.next(arglist__8027);
var c = cljs.core.first(arglist__8027);
arglist__8027 = cljs.core.next(arglist__8027);
var d = cljs.core.first(arglist__8027);
var args = cljs.core.rest(arglist__8027);
return G__8025__delegate(obj,f,a,b,c,d,args);
});
G__8025.cljs$core$IFn$_invoke$arity$variadic = G__8025__delegate;
return G__8025;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__8028 = null;
if (arguments.length > 6) {
var G__8029__i = 0, G__8029__a = new Array(arguments.length -  6);
while (G__8029__i < G__8029__a.length) {G__8029__a[G__8029__i] = arguments[G__8029__i + 6]; ++G__8029__i;}
G__8028 = new cljs.core.IndexedSeq(G__8029__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__8028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__8030__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__8030 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__8031__i = 0, G__8031__a = new Array(arguments.length -  2);
while (G__8031__i < G__8031__a.length) {G__8031__a[G__8031__i] = arguments[G__8031__i + 2]; ++G__8031__i;}
  more = new cljs.core.IndexedSeq(G__8031__a,0);
} 
return G__8030__delegate.call(this,x,y,more);};
G__8030.cljs$lang$maxFixedArity = 2;
G__8030.cljs$lang$applyTo = (function (arglist__8032){
var x = cljs.core.first(arglist__8032);
arglist__8032 = cljs.core.next(arglist__8032);
var y = cljs.core.first(arglist__8032);
var more = cljs.core.rest(arglist__8032);
return G__8030__delegate(x,y,more);
});
G__8030.cljs$core$IFn$_invoke$arity$variadic = G__8030__delegate;
return G__8030;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__8033 = null;
if (arguments.length > 2) {
var G__8034__i = 0, G__8034__a = new Array(arguments.length -  2);
while (G__8034__i < G__8034__a.length) {G__8034__a[G__8034__i] = arguments[G__8034__i + 2]; ++G__8034__i;}
G__8033 = new cljs.core.IndexedSeq(G__8034__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t8038 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t8038 = (function (nil_iter,meta8039){
this.nil_iter = nil_iter;
this.meta8039 = meta8039;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t8038.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t8038.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t8038.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t8038.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_8040){
var self__ = this;
var _8040__$1 = this;
return self__.meta8039;
});

cljs.core.t8038.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_8040,meta8039__$1){
var self__ = this;
var _8040__$1 = this;
return (new cljs.core.t8038(self__.nil_iter,meta8039__$1));
});

cljs.core.t8038.cljs$lang$type = true;

cljs.core.t8038.cljs$lang$ctorStr = "cljs.core/t8038";

cljs.core.t8038.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/t8038");
});

cljs.core.__GT_t8038 = (function __GT_t8038(nil_iter__$1,meta8039){
return (new cljs.core.t8038(nil_iter__$1,meta8039));
});

}

return (new cljs.core.t8038(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/worace/code/birds-cljs/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3747__auto__ = !((lt.stepper == null));
if(and__3747__auto__){
return self__.iter.hasNext();
} else {
return and__3747__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__8041 = lt;
var G__8042 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8041,G__8042) : self__.xform.call(null,G__8041,G__8042));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8043 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8043) : self__.xform.call(null,G__8043));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__8045 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8045) : xform.call(null,G__8045));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__8047 = cljs.core.next(iters__$1);
iters__$1 = G__8047;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4646__auto___8048 = self__.iters.length;
var i_8049 = (0);
while(true){
if((i_8049 < n__4646__auto___8048)){
(self__.nexts[i_8049] = (self__.iters[i_8049]).next());

var G__8050 = (i_8049 + (1));
i_8049 = G__8050;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3747__auto__ = !((lt.stepper == null));
if(and__3747__auto__){
return this$.hasNext();
} else {
return and__3747__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__8046 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8046) : self__.xform.call(null,G__8046));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__8055 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8055) : xform.call(null,G__8055));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__8056_8060 = cljs.core.seq(colls);
var chunk__8057_8061 = null;
var count__8058_8062 = (0);
var i__8059_8063 = (0);
while(true){
if((i__8059_8063 < count__8058_8062)){
var coll_8064 = chunk__8057_8061.cljs$core$IIndexed$_nth$arity$2(null,i__8059_8063);
iters.push(cljs.core.iter(coll_8064));

var G__8065 = seq__8056_8060;
var G__8066 = chunk__8057_8061;
var G__8067 = count__8058_8062;
var G__8068 = (i__8059_8063 + (1));
seq__8056_8060 = G__8065;
chunk__8057_8061 = G__8066;
count__8058_8062 = G__8067;
i__8059_8063 = G__8068;
continue;
} else {
var temp__4126__auto___8069 = cljs.core.seq(seq__8056_8060);
if(temp__4126__auto___8069){
var seq__8056_8070__$1 = temp__4126__auto___8069;
if(cljs.core.chunked_seq_QMARK_(seq__8056_8070__$1)){
var c__4546__auto___8071 = cljs.core.chunk_first(seq__8056_8070__$1);
var G__8072 = cljs.core.chunk_rest(seq__8056_8070__$1);
var G__8073 = c__4546__auto___8071;
var G__8074 = cljs.core.count(c__4546__auto___8071);
var G__8075 = (0);
seq__8056_8060 = G__8072;
chunk__8057_8061 = G__8073;
count__8058_8062 = G__8074;
i__8059_8063 = G__8075;
continue;
} else {
var coll_8076 = cljs.core.first(seq__8056_8070__$1);
iters.push(cljs.core.iter(coll_8076));

var G__8077 = cljs.core.next(seq__8056_8070__$1);
var G__8078 = null;
var G__8079 = (0);
var G__8080 = (0);
seq__8056_8060 = G__8077;
chunk__8057_8061 = G__8078;
count__8058_8062 = G__8079;
i__8059_8063 = G__8080;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3759__auto__ = cljs.core.seq(coll);
if(or__3759__auto__){
return or__3759__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__8081__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__8081 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8082__i = 0, G__8082__a = new Array(arguments.length -  2);
while (G__8082__i < G__8082__a.length) {G__8082__a[G__8082__i] = arguments[G__8082__i + 2]; ++G__8082__i;}
  colls = new cljs.core.IndexedSeq(G__8082__a,0);
} 
return G__8081__delegate.call(this,xform,coll,colls);};
G__8081.cljs$lang$maxFixedArity = 2;
G__8081.cljs$lang$applyTo = (function (arglist__8083){
var xform = cljs.core.first(arglist__8083);
arglist__8083 = cljs.core.next(arglist__8083);
var coll = cljs.core.first(arglist__8083);
var colls = cljs.core.rest(arglist__8083);
return G__8081__delegate(xform,coll,colls);
});
G__8081.cljs$core$IFn$_invoke$arity$variadic = G__8081__delegate;
return G__8081;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__8084 = null;
if (arguments.length > 2) {
var G__8085__i = 0, G__8085__a = new Array(arguments.length -  2);
while (G__8085__i < G__8085__a.length) {G__8085__a[G__8085__i] = arguments[G__8085__i + 2]; ++G__8085__i;}
G__8084 = new cljs.core.IndexedSeq(G__8085__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__8084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__8087 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8087) : pred.call(null,G__8087));
})())){
var G__8088 = pred;
var G__8089 = cljs.core.next(coll);
pred = G__8088;
coll = G__8089;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3759__auto__ = (function (){var G__8093 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8093) : pred.call(null,G__8093));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__8094 = pred;
var G__8095 = cljs.core.next(coll);
pred = G__8094;
coll = G__8095;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__8102 = null;
var G__8102__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__8102__1 = (function (x){
return cljs.core.not((function (){var G__8099 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8099) : f.call(null,G__8099));
})());
});
var G__8102__2 = (function (x,y){
return cljs.core.not((function (){var G__8100 = x;
var G__8101 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8100,G__8101) : f.call(null,G__8100,G__8101));
})());
});
var G__8102__3 = (function() { 
var G__8103__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__8103 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__8104__i = 0, G__8104__a = new Array(arguments.length -  2);
while (G__8104__i < G__8104__a.length) {G__8104__a[G__8104__i] = arguments[G__8104__i + 2]; ++G__8104__i;}
  zs = new cljs.core.IndexedSeq(G__8104__a,0);
} 
return G__8103__delegate.call(this,x,y,zs);};
G__8103.cljs$lang$maxFixedArity = 2;
G__8103.cljs$lang$applyTo = (function (arglist__8105){
var x = cljs.core.first(arglist__8105);
arglist__8105 = cljs.core.next(arglist__8105);
var y = cljs.core.first(arglist__8105);
var zs = cljs.core.rest(arglist__8105);
return G__8103__delegate(x,y,zs);
});
G__8103.cljs$core$IFn$_invoke$arity$variadic = G__8103__delegate;
return G__8103;
})()
;
G__8102 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__8102__0.call(this);
case 1:
return G__8102__1.call(this,x);
case 2:
return G__8102__2.call(this,x,y);
default:
var G__8106 = null;
if (arguments.length > 2) {
var G__8107__i = 0, G__8107__a = new Array(arguments.length -  2);
while (G__8107__i < G__8107__a.length) {G__8107__a[G__8107__i] = arguments[G__8107__i + 2]; ++G__8107__i;}
G__8106 = new cljs.core.IndexedSeq(G__8107__a,0);
}
return G__8102__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__8106);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8102.cljs$lang$maxFixedArity = 2;
G__8102.cljs$lang$applyTo = G__8102__3.cljs$lang$applyTo;
G__8102.cljs$core$IFn$_invoke$arity$0 = G__8102__0;
G__8102.cljs$core$IFn$_invoke$arity$1 = G__8102__1;
G__8102.cljs$core$IFn$_invoke$arity$2 = G__8102__2;
G__8102.cljs$core$IFn$_invoke$arity$variadic = G__8102__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8102;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__8108__delegate = function (args){
return x;
};
var G__8108 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8109__i = 0, G__8109__a = new Array(arguments.length -  0);
while (G__8109__i < G__8109__a.length) {G__8109__a[G__8109__i] = arguments[G__8109__i + 0]; ++G__8109__i;}
  args = new cljs.core.IndexedSeq(G__8109__a,0);
} 
return G__8108__delegate.call(this,args);};
G__8108.cljs$lang$maxFixedArity = 0;
G__8108.cljs$lang$applyTo = (function (arglist__8110){
var args = cljs.core.seq(arglist__8110);
return G__8108__delegate(args);
});
G__8108.cljs$core$IFn$_invoke$arity$variadic = G__8108__delegate;
return G__8108;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__8165 = null;
var G__8165__0 = (function (){
var G__8138 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8138) : f.call(null,G__8138));
});
var G__8165__1 = (function (x){
var G__8139 = (function (){var G__8140 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8140) : g.call(null,G__8140));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8139) : f.call(null,G__8139));
});
var G__8165__2 = (function (x,y){
var G__8141 = (function (){var G__8142 = x;
var G__8143 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8142,G__8143) : g.call(null,G__8142,G__8143));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8141) : f.call(null,G__8141));
});
var G__8165__3 = (function (x,y,z){
var G__8144 = (function (){var G__8145 = x;
var G__8146 = y;
var G__8147 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8145,G__8146,G__8147) : g.call(null,G__8145,G__8146,G__8147));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8144) : f.call(null,G__8144));
});
var G__8165__4 = (function() { 
var G__8166__delegate = function (x,y,z,args){
var G__8148 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8148) : f.call(null,G__8148));
};
var G__8166 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8167__i = 0, G__8167__a = new Array(arguments.length -  3);
while (G__8167__i < G__8167__a.length) {G__8167__a[G__8167__i] = arguments[G__8167__i + 3]; ++G__8167__i;}
  args = new cljs.core.IndexedSeq(G__8167__a,0);
} 
return G__8166__delegate.call(this,x,y,z,args);};
G__8166.cljs$lang$maxFixedArity = 3;
G__8166.cljs$lang$applyTo = (function (arglist__8168){
var x = cljs.core.first(arglist__8168);
arglist__8168 = cljs.core.next(arglist__8168);
var y = cljs.core.first(arglist__8168);
arglist__8168 = cljs.core.next(arglist__8168);
var z = cljs.core.first(arglist__8168);
var args = cljs.core.rest(arglist__8168);
return G__8166__delegate(x,y,z,args);
});
G__8166.cljs$core$IFn$_invoke$arity$variadic = G__8166__delegate;
return G__8166;
})()
;
G__8165 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8165__0.call(this);
case 1:
return G__8165__1.call(this,x);
case 2:
return G__8165__2.call(this,x,y);
case 3:
return G__8165__3.call(this,x,y,z);
default:
var G__8169 = null;
if (arguments.length > 3) {
var G__8170__i = 0, G__8170__a = new Array(arguments.length -  3);
while (G__8170__i < G__8170__a.length) {G__8170__a[G__8170__i] = arguments[G__8170__i + 3]; ++G__8170__i;}
G__8169 = new cljs.core.IndexedSeq(G__8170__a,0);
}
return G__8165__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8165.cljs$lang$maxFixedArity = 3;
G__8165.cljs$lang$applyTo = G__8165__4.cljs$lang$applyTo;
G__8165.cljs$core$IFn$_invoke$arity$0 = G__8165__0;
G__8165.cljs$core$IFn$_invoke$arity$1 = G__8165__1;
G__8165.cljs$core$IFn$_invoke$arity$2 = G__8165__2;
G__8165.cljs$core$IFn$_invoke$arity$3 = G__8165__3;
G__8165.cljs$core$IFn$_invoke$arity$variadic = G__8165__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8165;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__8171 = null;
var G__8171__0 = (function (){
var G__8149 = (function (){var G__8150 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8150) : g.call(null,G__8150));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8149) : f.call(null,G__8149));
});
var G__8171__1 = (function (x){
var G__8151 = (function (){var G__8152 = (function (){var G__8153 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8153) : h.call(null,G__8153));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8152) : g.call(null,G__8152));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8151) : f.call(null,G__8151));
});
var G__8171__2 = (function (x,y){
var G__8154 = (function (){var G__8155 = (function (){var G__8156 = x;
var G__8157 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8156,G__8157) : h.call(null,G__8156,G__8157));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8155) : g.call(null,G__8155));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8154) : f.call(null,G__8154));
});
var G__8171__3 = (function (x,y,z){
var G__8158 = (function (){var G__8159 = (function (){var G__8160 = x;
var G__8161 = y;
var G__8162 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8160,G__8161,G__8162) : h.call(null,G__8160,G__8161,G__8162));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8159) : g.call(null,G__8159));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8158) : f.call(null,G__8158));
});
var G__8171__4 = (function() { 
var G__8172__delegate = function (x,y,z,args){
var G__8163 = (function (){var G__8164 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8164) : g.call(null,G__8164));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8163) : f.call(null,G__8163));
};
var G__8172 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8173__i = 0, G__8173__a = new Array(arguments.length -  3);
while (G__8173__i < G__8173__a.length) {G__8173__a[G__8173__i] = arguments[G__8173__i + 3]; ++G__8173__i;}
  args = new cljs.core.IndexedSeq(G__8173__a,0);
} 
return G__8172__delegate.call(this,x,y,z,args);};
G__8172.cljs$lang$maxFixedArity = 3;
G__8172.cljs$lang$applyTo = (function (arglist__8174){
var x = cljs.core.first(arglist__8174);
arglist__8174 = cljs.core.next(arglist__8174);
var y = cljs.core.first(arglist__8174);
arglist__8174 = cljs.core.next(arglist__8174);
var z = cljs.core.first(arglist__8174);
var args = cljs.core.rest(arglist__8174);
return G__8172__delegate(x,y,z,args);
});
G__8172.cljs$core$IFn$_invoke$arity$variadic = G__8172__delegate;
return G__8172;
})()
;
G__8171 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8171__0.call(this);
case 1:
return G__8171__1.call(this,x);
case 2:
return G__8171__2.call(this,x,y);
case 3:
return G__8171__3.call(this,x,y,z);
default:
var G__8175 = null;
if (arguments.length > 3) {
var G__8176__i = 0, G__8176__a = new Array(arguments.length -  3);
while (G__8176__i < G__8176__a.length) {G__8176__a[G__8176__i] = arguments[G__8176__i + 3]; ++G__8176__i;}
G__8175 = new cljs.core.IndexedSeq(G__8176__a,0);
}
return G__8171__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8171.cljs$lang$maxFixedArity = 3;
G__8171.cljs$lang$applyTo = G__8171__4.cljs$lang$applyTo;
G__8171.cljs$core$IFn$_invoke$arity$0 = G__8171__0;
G__8171.cljs$core$IFn$_invoke$arity$1 = G__8171__1;
G__8171.cljs$core$IFn$_invoke$arity$2 = G__8171__2;
G__8171.cljs$core$IFn$_invoke$arity$3 = G__8171__3;
G__8171.cljs$core$IFn$_invoke$arity$variadic = G__8171__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8171;
})()
});
var comp__4 = (function() { 
var G__8177__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__8178__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__8179 = cljs.core.first(fs__$2).call(null,ret);
var G__8180 = cljs.core.next(fs__$2);
ret = G__8179;
fs__$2 = G__8180;
continue;
} else {
return ret;
}
break;
}
};
var G__8178 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8181__i = 0, G__8181__a = new Array(arguments.length -  0);
while (G__8181__i < G__8181__a.length) {G__8181__a[G__8181__i] = arguments[G__8181__i + 0]; ++G__8181__i;}
  args = new cljs.core.IndexedSeq(G__8181__a,0);
} 
return G__8178__delegate.call(this,args);};
G__8178.cljs$lang$maxFixedArity = 0;
G__8178.cljs$lang$applyTo = (function (arglist__8182){
var args = cljs.core.seq(arglist__8182);
return G__8178__delegate(args);
});
G__8178.cljs$core$IFn$_invoke$arity$variadic = G__8178__delegate;
return G__8178;
})()
;
;})(fs__$1))
};
var G__8177 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__8183__i = 0, G__8183__a = new Array(arguments.length -  3);
while (G__8183__i < G__8183__a.length) {G__8183__a[G__8183__i] = arguments[G__8183__i + 3]; ++G__8183__i;}
  fs = new cljs.core.IndexedSeq(G__8183__a,0);
} 
return G__8177__delegate.call(this,f1,f2,f3,fs);};
G__8177.cljs$lang$maxFixedArity = 3;
G__8177.cljs$lang$applyTo = (function (arglist__8184){
var f1 = cljs.core.first(arglist__8184);
arglist__8184 = cljs.core.next(arglist__8184);
var f2 = cljs.core.first(arglist__8184);
arglist__8184 = cljs.core.next(arglist__8184);
var f3 = cljs.core.first(arglist__8184);
var fs = cljs.core.rest(arglist__8184);
return G__8177__delegate(f1,f2,f3,fs);
});
G__8177.cljs$core$IFn$_invoke$arity$variadic = G__8177__delegate;
return G__8177;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__8185 = null;
if (arguments.length > 3) {
var G__8186__i = 0, G__8186__a = new Array(arguments.length -  3);
while (G__8186__i < G__8186__a.length) {G__8186__a[G__8186__i] = arguments[G__8186__i + 3]; ++G__8186__i;}
G__8185 = new cljs.core.IndexedSeq(G__8186__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__8185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__8271 = null;
var G__8271__0 = (function (){
var G__8229 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8229) : f.call(null,G__8229));
});
var G__8271__1 = (function (x){
var G__8230 = arg1;
var G__8231 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8230,G__8231) : f.call(null,G__8230,G__8231));
});
var G__8271__2 = (function (x,y){
var G__8232 = arg1;
var G__8233 = x;
var G__8234 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8232,G__8233,G__8234) : f.call(null,G__8232,G__8233,G__8234));
});
var G__8271__3 = (function (x,y,z){
var G__8235 = arg1;
var G__8236 = x;
var G__8237 = y;
var G__8238 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8235,G__8236,G__8237,G__8238) : f.call(null,G__8235,G__8236,G__8237,G__8238));
});
var G__8271__4 = (function() { 
var G__8272__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__8272 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8273__i = 0, G__8273__a = new Array(arguments.length -  3);
while (G__8273__i < G__8273__a.length) {G__8273__a[G__8273__i] = arguments[G__8273__i + 3]; ++G__8273__i;}
  args = new cljs.core.IndexedSeq(G__8273__a,0);
} 
return G__8272__delegate.call(this,x,y,z,args);};
G__8272.cljs$lang$maxFixedArity = 3;
G__8272.cljs$lang$applyTo = (function (arglist__8274){
var x = cljs.core.first(arglist__8274);
arglist__8274 = cljs.core.next(arglist__8274);
var y = cljs.core.first(arglist__8274);
arglist__8274 = cljs.core.next(arglist__8274);
var z = cljs.core.first(arglist__8274);
var args = cljs.core.rest(arglist__8274);
return G__8272__delegate(x,y,z,args);
});
G__8272.cljs$core$IFn$_invoke$arity$variadic = G__8272__delegate;
return G__8272;
})()
;
G__8271 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8271__0.call(this);
case 1:
return G__8271__1.call(this,x);
case 2:
return G__8271__2.call(this,x,y);
case 3:
return G__8271__3.call(this,x,y,z);
default:
var G__8275 = null;
if (arguments.length > 3) {
var G__8276__i = 0, G__8276__a = new Array(arguments.length -  3);
while (G__8276__i < G__8276__a.length) {G__8276__a[G__8276__i] = arguments[G__8276__i + 3]; ++G__8276__i;}
G__8275 = new cljs.core.IndexedSeq(G__8276__a,0);
}
return G__8271__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8275);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8271.cljs$lang$maxFixedArity = 3;
G__8271.cljs$lang$applyTo = G__8271__4.cljs$lang$applyTo;
G__8271.cljs$core$IFn$_invoke$arity$0 = G__8271__0;
G__8271.cljs$core$IFn$_invoke$arity$1 = G__8271__1;
G__8271.cljs$core$IFn$_invoke$arity$2 = G__8271__2;
G__8271.cljs$core$IFn$_invoke$arity$3 = G__8271__3;
G__8271.cljs$core$IFn$_invoke$arity$variadic = G__8271__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8271;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__8277 = null;
var G__8277__0 = (function (){
var G__8239 = arg1;
var G__8240 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8239,G__8240) : f.call(null,G__8239,G__8240));
});
var G__8277__1 = (function (x){
var G__8241 = arg1;
var G__8242 = arg2;
var G__8243 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8241,G__8242,G__8243) : f.call(null,G__8241,G__8242,G__8243));
});
var G__8277__2 = (function (x,y){
var G__8244 = arg1;
var G__8245 = arg2;
var G__8246 = x;
var G__8247 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8244,G__8245,G__8246,G__8247) : f.call(null,G__8244,G__8245,G__8246,G__8247));
});
var G__8277__3 = (function (x,y,z){
var G__8248 = arg1;
var G__8249 = arg2;
var G__8250 = x;
var G__8251 = y;
var G__8252 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8248,G__8249,G__8250,G__8251,G__8252) : f.call(null,G__8248,G__8249,G__8250,G__8251,G__8252));
});
var G__8277__4 = (function() { 
var G__8278__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__8278 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8279__i = 0, G__8279__a = new Array(arguments.length -  3);
while (G__8279__i < G__8279__a.length) {G__8279__a[G__8279__i] = arguments[G__8279__i + 3]; ++G__8279__i;}
  args = new cljs.core.IndexedSeq(G__8279__a,0);
} 
return G__8278__delegate.call(this,x,y,z,args);};
G__8278.cljs$lang$maxFixedArity = 3;
G__8278.cljs$lang$applyTo = (function (arglist__8280){
var x = cljs.core.first(arglist__8280);
arglist__8280 = cljs.core.next(arglist__8280);
var y = cljs.core.first(arglist__8280);
arglist__8280 = cljs.core.next(arglist__8280);
var z = cljs.core.first(arglist__8280);
var args = cljs.core.rest(arglist__8280);
return G__8278__delegate(x,y,z,args);
});
G__8278.cljs$core$IFn$_invoke$arity$variadic = G__8278__delegate;
return G__8278;
})()
;
G__8277 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8277__0.call(this);
case 1:
return G__8277__1.call(this,x);
case 2:
return G__8277__2.call(this,x,y);
case 3:
return G__8277__3.call(this,x,y,z);
default:
var G__8281 = null;
if (arguments.length > 3) {
var G__8282__i = 0, G__8282__a = new Array(arguments.length -  3);
while (G__8282__i < G__8282__a.length) {G__8282__a[G__8282__i] = arguments[G__8282__i + 3]; ++G__8282__i;}
G__8281 = new cljs.core.IndexedSeq(G__8282__a,0);
}
return G__8277__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8277.cljs$lang$maxFixedArity = 3;
G__8277.cljs$lang$applyTo = G__8277__4.cljs$lang$applyTo;
G__8277.cljs$core$IFn$_invoke$arity$0 = G__8277__0;
G__8277.cljs$core$IFn$_invoke$arity$1 = G__8277__1;
G__8277.cljs$core$IFn$_invoke$arity$2 = G__8277__2;
G__8277.cljs$core$IFn$_invoke$arity$3 = G__8277__3;
G__8277.cljs$core$IFn$_invoke$arity$variadic = G__8277__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8277;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__8283 = null;
var G__8283__0 = (function (){
var G__8253 = arg1;
var G__8254 = arg2;
var G__8255 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8253,G__8254,G__8255) : f.call(null,G__8253,G__8254,G__8255));
});
var G__8283__1 = (function (x){
var G__8256 = arg1;
var G__8257 = arg2;
var G__8258 = arg3;
var G__8259 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8256,G__8257,G__8258,G__8259) : f.call(null,G__8256,G__8257,G__8258,G__8259));
});
var G__8283__2 = (function (x,y){
var G__8260 = arg1;
var G__8261 = arg2;
var G__8262 = arg3;
var G__8263 = x;
var G__8264 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8260,G__8261,G__8262,G__8263,G__8264) : f.call(null,G__8260,G__8261,G__8262,G__8263,G__8264));
});
var G__8283__3 = (function (x,y,z){
var G__8265 = arg1;
var G__8266 = arg2;
var G__8267 = arg3;
var G__8268 = x;
var G__8269 = y;
var G__8270 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8265,G__8266,G__8267,G__8268,G__8269,G__8270) : f.call(null,G__8265,G__8266,G__8267,G__8268,G__8269,G__8270));
});
var G__8283__4 = (function() { 
var G__8284__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__8284 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8285__i = 0, G__8285__a = new Array(arguments.length -  3);
while (G__8285__i < G__8285__a.length) {G__8285__a[G__8285__i] = arguments[G__8285__i + 3]; ++G__8285__i;}
  args = new cljs.core.IndexedSeq(G__8285__a,0);
} 
return G__8284__delegate.call(this,x,y,z,args);};
G__8284.cljs$lang$maxFixedArity = 3;
G__8284.cljs$lang$applyTo = (function (arglist__8286){
var x = cljs.core.first(arglist__8286);
arglist__8286 = cljs.core.next(arglist__8286);
var y = cljs.core.first(arglist__8286);
arglist__8286 = cljs.core.next(arglist__8286);
var z = cljs.core.first(arglist__8286);
var args = cljs.core.rest(arglist__8286);
return G__8284__delegate(x,y,z,args);
});
G__8284.cljs$core$IFn$_invoke$arity$variadic = G__8284__delegate;
return G__8284;
})()
;
G__8283 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__8283__0.call(this);
case 1:
return G__8283__1.call(this,x);
case 2:
return G__8283__2.call(this,x,y);
case 3:
return G__8283__3.call(this,x,y,z);
default:
var G__8287 = null;
if (arguments.length > 3) {
var G__8288__i = 0, G__8288__a = new Array(arguments.length -  3);
while (G__8288__i < G__8288__a.length) {G__8288__a[G__8288__i] = arguments[G__8288__i + 3]; ++G__8288__i;}
G__8287 = new cljs.core.IndexedSeq(G__8288__a,0);
}
return G__8283__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8283.cljs$lang$maxFixedArity = 3;
G__8283.cljs$lang$applyTo = G__8283__4.cljs$lang$applyTo;
G__8283.cljs$core$IFn$_invoke$arity$0 = G__8283__0;
G__8283.cljs$core$IFn$_invoke$arity$1 = G__8283__1;
G__8283.cljs$core$IFn$_invoke$arity$2 = G__8283__2;
G__8283.cljs$core$IFn$_invoke$arity$3 = G__8283__3;
G__8283.cljs$core$IFn$_invoke$arity$variadic = G__8283__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8283;
})()
});
var partial__5 = (function() { 
var G__8289__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__8290__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__8290 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8291__i = 0, G__8291__a = new Array(arguments.length -  0);
while (G__8291__i < G__8291__a.length) {G__8291__a[G__8291__i] = arguments[G__8291__i + 0]; ++G__8291__i;}
  args = new cljs.core.IndexedSeq(G__8291__a,0);
} 
return G__8290__delegate.call(this,args);};
G__8290.cljs$lang$maxFixedArity = 0;
G__8290.cljs$lang$applyTo = (function (arglist__8292){
var args = cljs.core.seq(arglist__8292);
return G__8290__delegate(args);
});
G__8290.cljs$core$IFn$_invoke$arity$variadic = G__8290__delegate;
return G__8290;
})()
;
};
var G__8289 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__8293__i = 0, G__8293__a = new Array(arguments.length -  4);
while (G__8293__i < G__8293__a.length) {G__8293__a[G__8293__i] = arguments[G__8293__i + 4]; ++G__8293__i;}
  more = new cljs.core.IndexedSeq(G__8293__a,0);
} 
return G__8289__delegate.call(this,f,arg1,arg2,arg3,more);};
G__8289.cljs$lang$maxFixedArity = 4;
G__8289.cljs$lang$applyTo = (function (arglist__8294){
var f = cljs.core.first(arglist__8294);
arglist__8294 = cljs.core.next(arglist__8294);
var arg1 = cljs.core.first(arglist__8294);
arglist__8294 = cljs.core.next(arglist__8294);
var arg2 = cljs.core.first(arglist__8294);
arglist__8294 = cljs.core.next(arglist__8294);
var arg3 = cljs.core.first(arglist__8294);
var more = cljs.core.rest(arglist__8294);
return G__8289__delegate(f,arg1,arg2,arg3,more);
});
G__8289.cljs$core$IFn$_invoke$arity$variadic = G__8289__delegate;
return G__8289;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__8295 = null;
if (arguments.length > 4) {
var G__8296__i = 0, G__8296__a = new Array(arguments.length -  4);
while (G__8296__i < G__8296__a.length) {G__8296__a[G__8296__i] = arguments[G__8296__i + 4]; ++G__8296__i;}
G__8295 = new cljs.core.IndexedSeq(G__8296__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__8295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__8329 = null;
var G__8329__1 = (function (a){
var G__8313 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8313) : f.call(null,G__8313));
});
var G__8329__2 = (function (a,b){
var G__8314 = (((a == null))?x:a);
var G__8315 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8314,G__8315) : f.call(null,G__8314,G__8315));
});
var G__8329__3 = (function (a,b,c){
var G__8316 = (((a == null))?x:a);
var G__8317 = b;
var G__8318 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8316,G__8317,G__8318) : f.call(null,G__8316,G__8317,G__8318));
});
var G__8329__4 = (function() { 
var G__8330__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__8330 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8331__i = 0, G__8331__a = new Array(arguments.length -  3);
while (G__8331__i < G__8331__a.length) {G__8331__a[G__8331__i] = arguments[G__8331__i + 3]; ++G__8331__i;}
  ds = new cljs.core.IndexedSeq(G__8331__a,0);
} 
return G__8330__delegate.call(this,a,b,c,ds);};
G__8330.cljs$lang$maxFixedArity = 3;
G__8330.cljs$lang$applyTo = (function (arglist__8332){
var a = cljs.core.first(arglist__8332);
arglist__8332 = cljs.core.next(arglist__8332);
var b = cljs.core.first(arglist__8332);
arglist__8332 = cljs.core.next(arglist__8332);
var c = cljs.core.first(arglist__8332);
var ds = cljs.core.rest(arglist__8332);
return G__8330__delegate(a,b,c,ds);
});
G__8330.cljs$core$IFn$_invoke$arity$variadic = G__8330__delegate;
return G__8330;
})()
;
G__8329 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__8329__1.call(this,a);
case 2:
return G__8329__2.call(this,a,b);
case 3:
return G__8329__3.call(this,a,b,c);
default:
var G__8333 = null;
if (arguments.length > 3) {
var G__8334__i = 0, G__8334__a = new Array(arguments.length -  3);
while (G__8334__i < G__8334__a.length) {G__8334__a[G__8334__i] = arguments[G__8334__i + 3]; ++G__8334__i;}
G__8333 = new cljs.core.IndexedSeq(G__8334__a,0);
}
return G__8329__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8333);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8329.cljs$lang$maxFixedArity = 3;
G__8329.cljs$lang$applyTo = G__8329__4.cljs$lang$applyTo;
G__8329.cljs$core$IFn$_invoke$arity$1 = G__8329__1;
G__8329.cljs$core$IFn$_invoke$arity$2 = G__8329__2;
G__8329.cljs$core$IFn$_invoke$arity$3 = G__8329__3;
G__8329.cljs$core$IFn$_invoke$arity$variadic = G__8329__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8329;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__8335 = null;
var G__8335__2 = (function (a,b){
var G__8319 = (((a == null))?x:a);
var G__8320 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8319,G__8320) : f.call(null,G__8319,G__8320));
});
var G__8335__3 = (function (a,b,c){
var G__8321 = (((a == null))?x:a);
var G__8322 = (((b == null))?y:b);
var G__8323 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8321,G__8322,G__8323) : f.call(null,G__8321,G__8322,G__8323));
});
var G__8335__4 = (function() { 
var G__8336__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__8336 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8337__i = 0, G__8337__a = new Array(arguments.length -  3);
while (G__8337__i < G__8337__a.length) {G__8337__a[G__8337__i] = arguments[G__8337__i + 3]; ++G__8337__i;}
  ds = new cljs.core.IndexedSeq(G__8337__a,0);
} 
return G__8336__delegate.call(this,a,b,c,ds);};
G__8336.cljs$lang$maxFixedArity = 3;
G__8336.cljs$lang$applyTo = (function (arglist__8338){
var a = cljs.core.first(arglist__8338);
arglist__8338 = cljs.core.next(arglist__8338);
var b = cljs.core.first(arglist__8338);
arglist__8338 = cljs.core.next(arglist__8338);
var c = cljs.core.first(arglist__8338);
var ds = cljs.core.rest(arglist__8338);
return G__8336__delegate(a,b,c,ds);
});
G__8336.cljs$core$IFn$_invoke$arity$variadic = G__8336__delegate;
return G__8336;
})()
;
G__8335 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8335__2.call(this,a,b);
case 3:
return G__8335__3.call(this,a,b,c);
default:
var G__8339 = null;
if (arguments.length > 3) {
var G__8340__i = 0, G__8340__a = new Array(arguments.length -  3);
while (G__8340__i < G__8340__a.length) {G__8340__a[G__8340__i] = arguments[G__8340__i + 3]; ++G__8340__i;}
G__8339 = new cljs.core.IndexedSeq(G__8340__a,0);
}
return G__8335__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8335.cljs$lang$maxFixedArity = 3;
G__8335.cljs$lang$applyTo = G__8335__4.cljs$lang$applyTo;
G__8335.cljs$core$IFn$_invoke$arity$2 = G__8335__2;
G__8335.cljs$core$IFn$_invoke$arity$3 = G__8335__3;
G__8335.cljs$core$IFn$_invoke$arity$variadic = G__8335__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8335;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__8341 = null;
var G__8341__2 = (function (a,b){
var G__8324 = (((a == null))?x:a);
var G__8325 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8324,G__8325) : f.call(null,G__8324,G__8325));
});
var G__8341__3 = (function (a,b,c){
var G__8326 = (((a == null))?x:a);
var G__8327 = (((b == null))?y:b);
var G__8328 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8326,G__8327,G__8328) : f.call(null,G__8326,G__8327,G__8328));
});
var G__8341__4 = (function() { 
var G__8342__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__8342 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__8343__i = 0, G__8343__a = new Array(arguments.length -  3);
while (G__8343__i < G__8343__a.length) {G__8343__a[G__8343__i] = arguments[G__8343__i + 3]; ++G__8343__i;}
  ds = new cljs.core.IndexedSeq(G__8343__a,0);
} 
return G__8342__delegate.call(this,a,b,c,ds);};
G__8342.cljs$lang$maxFixedArity = 3;
G__8342.cljs$lang$applyTo = (function (arglist__8344){
var a = cljs.core.first(arglist__8344);
arglist__8344 = cljs.core.next(arglist__8344);
var b = cljs.core.first(arglist__8344);
arglist__8344 = cljs.core.next(arglist__8344);
var c = cljs.core.first(arglist__8344);
var ds = cljs.core.rest(arglist__8344);
return G__8342__delegate(a,b,c,ds);
});
G__8342.cljs$core$IFn$_invoke$arity$variadic = G__8342__delegate;
return G__8342;
})()
;
G__8341 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__8341__2.call(this,a,b);
case 3:
return G__8341__3.call(this,a,b,c);
default:
var G__8345 = null;
if (arguments.length > 3) {
var G__8346__i = 0, G__8346__a = new Array(arguments.length -  3);
while (G__8346__i < G__8346__a.length) {G__8346__a[G__8346__i] = arguments[G__8346__i + 3]; ++G__8346__i;}
G__8345 = new cljs.core.IndexedSeq(G__8346__a,0);
}
return G__8341__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__8345);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8341.cljs$lang$maxFixedArity = 3;
G__8341.cljs$lang$applyTo = G__8341__4.cljs$lang$applyTo;
G__8341.cljs$core$IFn$_invoke$arity$2 = G__8341__2;
G__8341.cljs$core$IFn$_invoke$arity$3 = G__8341__3;
G__8341.cljs$core$IFn$_invoke$arity$variadic = G__8341__4.cljs$core$IFn$_invoke$arity$variadic;
return G__8341;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__8377 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8377) : cljs.core.volatile_BANG_.call(null,G__8377));
})();
return ((function (i){
return (function() {
var G__8407 = null;
var G__8407__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8407__1 = (function (result){
var G__8378 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8378) : rf.call(null,G__8378));
});
var G__8407__2 = (function (result,input){
var G__8379 = result;
var G__8380 = (function (){var G__8381 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__8382 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8381,G__8382) : f.call(null,G__8381,G__8382));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8379,G__8380) : rf.call(null,G__8379,G__8380));
});
G__8407 = function(result,input){
switch(arguments.length){
case 0:
return G__8407__0.call(this);
case 1:
return G__8407__1.call(this,result);
case 2:
return G__8407__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8407.cljs$core$IFn$_invoke$arity$0 = G__8407__0;
G__8407.cljs$core$IFn$_invoke$arity$1 = G__8407__1;
G__8407.cljs$core$IFn$_invoke$arity$2 = G__8407__2;
return G__8407;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___8408 = size;
var i_8409 = (0);
while(true){
if((i_8409 < n__4646__auto___8408)){
cljs.core.chunk_append(b,(function (){var G__8403 = (idx + i_8409);
var G__8404 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8409);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8403,G__8404) : f.call(null,G__8403,G__8404));
})());

var G__8410 = (i_8409 + (1));
i_8409 = G__8410;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8405 = idx;
var G__8406 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8405,G__8406) : f.call(null,G__8405,G__8406));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__8429 = null;
var G__8429__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8429__1 = (function (result){
var G__8423 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8423) : rf.call(null,G__8423));
});
var G__8429__2 = (function (result,input){
var v = (function (){var G__8424 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8424) : f.call(null,G__8424));
})();
if((v == null)){
return result;
} else {
var G__8425 = result;
var G__8426 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8425,G__8426) : rf.call(null,G__8425,G__8426));
}
});
G__8429 = function(result,input){
switch(arguments.length){
case 0:
return G__8429__0.call(this);
case 1:
return G__8429__1.call(this,result);
case 2:
return G__8429__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8429.cljs$core$IFn$_invoke$arity$0 = G__8429__0;
G__8429.cljs$core$IFn$_invoke$arity$1 = G__8429__1;
G__8429.cljs$core$IFn$_invoke$arity$2 = G__8429__2;
return G__8429;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___8430 = size;
var i_8431 = (0);
while(true){
if((i_8431 < n__4646__auto___8430)){
var x_8432 = (function (){var G__8427 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8431);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8427) : f.call(null,G__8427));
})();
if((x_8432 == null)){
} else {
cljs.core.chunk_append(b,x_8432);
}

var G__8433 = (i_8431 + (1));
i_8431 = G__8433;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8428 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8428) : f.call(null,G__8428));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__8434 = this$__$1;
return goog.getUid(G__8434);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__8435 = cljs.core.seq(self__.watches);
var chunk__8436 = null;
var count__8437 = (0);
var i__8438 = (0);
while(true){
if((i__8438 < count__8437)){
var vec__8439 = chunk__8436.cljs$core$IIndexed$_nth$arity$2(null,i__8438);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8439,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8439,(1),null);
var G__8440_8449 = key;
var G__8441_8450 = this$__$1;
var G__8442_8451 = oldval;
var G__8443_8452 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8440_8449,G__8441_8450,G__8442_8451,G__8443_8452) : f.call(null,G__8440_8449,G__8441_8450,G__8442_8451,G__8443_8452));

var G__8453 = seq__8435;
var G__8454 = chunk__8436;
var G__8455 = count__8437;
var G__8456 = (i__8438 + (1));
seq__8435 = G__8453;
chunk__8436 = G__8454;
count__8437 = G__8455;
i__8438 = G__8456;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__8435);
if(temp__4126__auto__){
var seq__8435__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8435__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__8435__$1);
var G__8457 = cljs.core.chunk_rest(seq__8435__$1);
var G__8458 = c__4546__auto__;
var G__8459 = cljs.core.count(c__4546__auto__);
var G__8460 = (0);
seq__8435 = G__8457;
chunk__8436 = G__8458;
count__8437 = G__8459;
i__8438 = G__8460;
continue;
} else {
var vec__8444 = cljs.core.first(seq__8435__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8444,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8444,(1),null);
var G__8445_8461 = key;
var G__8446_8462 = this$__$1;
var G__8447_8463 = oldval;
var G__8448_8464 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8445_8461,G__8446_8462,G__8447_8463,G__8448_8464) : f.call(null,G__8445_8461,G__8446_8462,G__8447_8463,G__8448_8464));

var G__8465 = cljs.core.next(seq__8435__$1);
var G__8466 = null;
var G__8467 = (0);
var G__8468 = (0);
seq__8435 = G__8465;
chunk__8436 = G__8466;
count__8437 = G__8467;
i__8438 = G__8468;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__8472__delegate = function (x,p__8469){
var map__8471 = p__8469;
var map__8471__$1 = ((cljs.core.seq_QMARK_(map__8471))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__8471):map__8471);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8471__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8471__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__8472 = function (x,var_args){
var p__8469 = null;
if (arguments.length > 1) {
var G__8473__i = 0, G__8473__a = new Array(arguments.length -  1);
while (G__8473__i < G__8473__a.length) {G__8473__a[G__8473__i] = arguments[G__8473__i + 1]; ++G__8473__i;}
  p__8469 = new cljs.core.IndexedSeq(G__8473__a,0);
} 
return G__8472__delegate.call(this,x,p__8469);};
G__8472.cljs$lang$maxFixedArity = 1;
G__8472.cljs$lang$applyTo = (function (arglist__8474){
var x = cljs.core.first(arglist__8474);
var p__8469 = cljs.core.rest(arglist__8474);
return G__8472__delegate(x,p__8469);
});
G__8472.cljs$core$IFn$_invoke$arity$variadic = G__8472__delegate;
return G__8472;
})()
;
atom = function(x,var_args){
var p__8469 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__8475 = null;
if (arguments.length > 1) {
var G__8476__i = 0, G__8476__a = new Array(arguments.length -  1);
while (G__8476__i < G__8476__a.length) {G__8476__a[G__8476__i] = arguments[G__8476__i + 1]; ++G__8476__i;}
G__8475 = new cljs.core.IndexedSeq(G__8476__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__8475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__8479 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8479) : validate.call(null,G__8479));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__8480 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8480) : cljs.core.pr_str.call(null,G__8480));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8487 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8487) : f.call(null,G__8487));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8488 = a.state;
var G__8489 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8488,G__8489) : f.call(null,G__8488,G__8489));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__8490 = a.state;
var G__8491 = x;
var G__8492 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8490,G__8491,G__8492) : f.call(null,G__8490,G__8491,G__8492));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__8493__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__8493 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__8494__i = 0, G__8494__a = new Array(arguments.length -  4);
while (G__8494__i < G__8494__a.length) {G__8494__a[G__8494__i] = arguments[G__8494__i + 4]; ++G__8494__i;}
  more = new cljs.core.IndexedSeq(G__8494__a,0);
} 
return G__8493__delegate.call(this,a,f,x,y,more);};
G__8493.cljs$lang$maxFixedArity = 4;
G__8493.cljs$lang$applyTo = (function (arglist__8495){
var a = cljs.core.first(arglist__8495);
arglist__8495 = cljs.core.next(arglist__8495);
var f = cljs.core.first(arglist__8495);
arglist__8495 = cljs.core.next(arglist__8495);
var x = cljs.core.first(arglist__8495);
arglist__8495 = cljs.core.next(arglist__8495);
var y = cljs.core.first(arglist__8495);
var more = cljs.core.rest(arglist__8495);
return G__8493__delegate(a,f,x,y,more);
});
G__8493.cljs$core$IFn$_invoke$arity$variadic = G__8493__delegate;
return G__8493;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__8496 = null;
if (arguments.length > 4) {
var G__8497__i = 0, G__8497__a = new Array(arguments.length -  4);
while (G__8497__i < G__8497__a.length) {G__8497__a[G__8497__i] = arguments[G__8497__i + 4]; ++G__8497__i;}
G__8496 = new cljs.core.IndexedSeq(G__8497__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__8496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__8564 = null;
var G__8564__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8564__1 = (function (result){
var G__8531 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8531) : rf.call(null,G__8531));
});
var G__8564__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__8532 = i;
var G__8533 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8532,G__8533) : f.call(null,G__8532,G__8533));
})();
if((v == null)){
return result;
} else {
var G__8534 = result;
var G__8535 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8534,G__8535) : rf.call(null,G__8534,G__8535));
}
});
G__8564 = function(result,input){
switch(arguments.length){
case 0:
return G__8564__0.call(this);
case 1:
return G__8564__1.call(this,result);
case 2:
return G__8564__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8564.cljs$core$IFn$_invoke$arity$0 = G__8564__0;
G__8564.cljs$core$IFn$_invoke$arity$1 = G__8564__1;
G__8564.cljs$core$IFn$_invoke$arity$2 = G__8564__2;
return G__8564;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___8565 = size;
var i_8566 = (0);
while(true){
if((i_8566 < n__4646__auto___8565)){
var x_8567 = (function (){var G__8560 = (idx + i_8566);
var G__8561 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8566);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8560,G__8561) : f.call(null,G__8560,G__8561));
})();
if((x_8567 == null)){
} else {
cljs.core.chunk_append(b,x_8567);
}

var G__8568 = (i_8566 + (1));
i_8566 = G__8568;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__8562 = idx;
var G__8563 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8562,G__8563) : f.call(null,G__8562,G__8563));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__8782 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8782) : p.call(null,G__8782));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8784 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8784) : p.call(null,G__8784));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__8785 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8785) : p.call(null,G__8785));
} else {
return and__3747__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8787 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8787) : p.call(null,G__8787));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8789 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8789) : p.call(null,G__8789));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__8790 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8790) : p.call(null,G__8790));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__8959__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__8959 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8960__i = 0, G__8960__a = new Array(arguments.length -  3);
while (G__8960__i < G__8960__a.length) {G__8960__a[G__8960__i] = arguments[G__8960__i + 3]; ++G__8960__i;}
  args = new cljs.core.IndexedSeq(G__8960__a,0);
} 
return G__8959__delegate.call(this,x,y,z,args);};
G__8959.cljs$lang$maxFixedArity = 3;
G__8959.cljs$lang$applyTo = (function (arglist__8961){
var x = cljs.core.first(arglist__8961);
arglist__8961 = cljs.core.next(arglist__8961);
var y = cljs.core.first(arglist__8961);
arglist__8961 = cljs.core.next(arglist__8961);
var z = cljs.core.first(arglist__8961);
var args = cljs.core.rest(arglist__8961);
return G__8959__delegate(x,y,z,args);
});
G__8959.cljs$core$IFn$_invoke$arity$variadic = G__8959__delegate;
return G__8959;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__8962 = null;
if (arguments.length > 3) {
var G__8963__i = 0, G__8963__a = new Array(arguments.length -  3);
while (G__8963__i < G__8963__a.length) {G__8963__a[G__8963__i] = arguments[G__8963__i + 3]; ++G__8963__i;}
G__8962 = new cljs.core.IndexedSeq(G__8963__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8962);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8822 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8822) : p1.call(null,G__8822));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__8823 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8823) : p2.call(null,G__8823));
} else {
return and__3747__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8825 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8825) : p1.call(null,G__8825));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8827 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8827) : p1.call(null,G__8827));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__8829 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8829) : p2.call(null,G__8829));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var G__8830 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8830) : p2.call(null,G__8830));
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8832 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8832) : p1.call(null,G__8832));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8834 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8834) : p1.call(null,G__8834));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__8836 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8836) : p1.call(null,G__8836));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__8838 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8838) : p2.call(null,G__8838));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__8840 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8840) : p2.call(null,G__8840));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var G__8841 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8841) : p2.call(null,G__8841));
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__8964__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8569_SHARP_){
var and__3747__auto__ = (function (){var G__8846 = p1__8569_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8846) : p1.call(null,G__8846));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__8847 = p1__8569_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8847) : p2.call(null,G__8847));
} else {
return and__3747__auto__;
}
}),args)));
};
var G__8964 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8965__i = 0, G__8965__a = new Array(arguments.length -  3);
while (G__8965__i < G__8965__a.length) {G__8965__a[G__8965__i] = arguments[G__8965__i + 3]; ++G__8965__i;}
  args = new cljs.core.IndexedSeq(G__8965__a,0);
} 
return G__8964__delegate.call(this,x,y,z,args);};
G__8964.cljs$lang$maxFixedArity = 3;
G__8964.cljs$lang$applyTo = (function (arglist__8966){
var x = cljs.core.first(arglist__8966);
arglist__8966 = cljs.core.next(arglist__8966);
var y = cljs.core.first(arglist__8966);
arglist__8966 = cljs.core.next(arglist__8966);
var z = cljs.core.first(arglist__8966);
var args = cljs.core.rest(arglist__8966);
return G__8964__delegate(x,y,z,args);
});
G__8964.cljs$core$IFn$_invoke$arity$variadic = G__8964__delegate;
return G__8964;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__8967 = null;
if (arguments.length > 3) {
var G__8968__i = 0, G__8968__a = new Array(arguments.length -  3);
while (G__8968__i < G__8968__a.length) {G__8968__a[G__8968__i] = arguments[G__8968__i + 3]; ++G__8968__i;}
G__8967 = new cljs.core.IndexedSeq(G__8968__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8893 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8893) : p1.call(null,G__8893));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8895 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8895) : p2.call(null,G__8895));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__8896 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8896) : p3.call(null,G__8896));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8898 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8898) : p1.call(null,G__8898));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8900 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8900) : p2.call(null,G__8900));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__8902 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8902) : p3.call(null,G__8902));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__8904 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8904) : p1.call(null,G__8904));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__8906 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8906) : p2.call(null,G__8906));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var G__8907 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8907) : p3.call(null,G__8907));
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__8909 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8909) : p1.call(null,G__8909));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8911 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8911) : p2.call(null,G__8911));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__8913 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8913) : p3.call(null,G__8913));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__8915 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8915) : p1.call(null,G__8915));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__8917 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8917) : p2.call(null,G__8917));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var and__3747__auto____$5 = (function (){var G__8919 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8919) : p3.call(null,G__8919));
})();
if(cljs.core.truth_(and__3747__auto____$5)){
var and__3747__auto____$6 = (function (){var G__8921 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8921) : p1.call(null,G__8921));
})();
if(cljs.core.truth_(and__3747__auto____$6)){
var and__3747__auto____$7 = (function (){var G__8923 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8923) : p2.call(null,G__8923));
})();
if(cljs.core.truth_(and__3747__auto____$7)){
var G__8924 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8924) : p3.call(null,G__8924));
} else {
return and__3747__auto____$7;
}
} else {
return and__3747__auto____$6;
}
} else {
return and__3747__auto____$5;
}
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__8969__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__8570_SHARP_){
var and__3747__auto__ = (function (){var G__8931 = p1__8570_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8931) : p1.call(null,G__8931));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8933 = p1__8570_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8933) : p2.call(null,G__8933));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__8934 = p1__8570_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8934) : p3.call(null,G__8934));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
}),args)));
};
var G__8969 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8970__i = 0, G__8970__a = new Array(arguments.length -  3);
while (G__8970__i < G__8970__a.length) {G__8970__a[G__8970__i] = arguments[G__8970__i + 3]; ++G__8970__i;}
  args = new cljs.core.IndexedSeq(G__8970__a,0);
} 
return G__8969__delegate.call(this,x,y,z,args);};
G__8969.cljs$lang$maxFixedArity = 3;
G__8969.cljs$lang$applyTo = (function (arglist__8971){
var x = cljs.core.first(arglist__8971);
arglist__8971 = cljs.core.next(arglist__8971);
var y = cljs.core.first(arglist__8971);
arglist__8971 = cljs.core.next(arglist__8971);
var z = cljs.core.first(arglist__8971);
var args = cljs.core.rest(arglist__8971);
return G__8969__delegate(x,y,z,args);
});
G__8969.cljs$core$IFn$_invoke$arity$variadic = G__8969__delegate;
return G__8969;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__8972 = null;
if (arguments.length > 3) {
var G__8973__i = 0, G__8973__a = new Array(arguments.length -  3);
while (G__8973__i < G__8973__a.length) {G__8973__a[G__8973__i] = arguments[G__8973__i + 3]; ++G__8973__i;}
G__8972 = new cljs.core.IndexedSeq(G__8973__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__8974__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8571_SHARP_){
var G__8950 = x;
return (p1__8571_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8571_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8950) : p1__8571_SHARP_.call(null,G__8950));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8572_SHARP_){
var and__3747__auto__ = (function (){var G__8952 = x;
return (p1__8572_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8572_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8952) : p1__8572_SHARP_.call(null,G__8952));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__8953 = y;
return (p1__8572_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8572_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8953) : p1__8572_SHARP_.call(null,G__8953));
} else {
return and__3747__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8573_SHARP_){
var and__3747__auto__ = (function (){var G__8955 = x;
return (p1__8573_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8573_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8955) : p1__8573_SHARP_.call(null,G__8955));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__8957 = y;
return (p1__8573_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8573_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8957) : p1__8573_SHARP_.call(null,G__8957));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__8958 = z;
return (p1__8573_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8573_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8958) : p1__8573_SHARP_.call(null,G__8958));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__8975__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__8574_SHARP_){
return cljs.core.every_QMARK_(p1__8574_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__8975 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8976__i = 0, G__8976__a = new Array(arguments.length -  3);
while (G__8976__i < G__8976__a.length) {G__8976__a[G__8976__i] = arguments[G__8976__i + 3]; ++G__8976__i;}
  args = new cljs.core.IndexedSeq(G__8976__a,0);
} 
return G__8975__delegate.call(this,x,y,z,args);};
G__8975.cljs$lang$maxFixedArity = 3;
G__8975.cljs$lang$applyTo = (function (arglist__8977){
var x = cljs.core.first(arglist__8977);
arglist__8977 = cljs.core.next(arglist__8977);
var y = cljs.core.first(arglist__8977);
arglist__8977 = cljs.core.next(arglist__8977);
var z = cljs.core.first(arglist__8977);
var args = cljs.core.rest(arglist__8977);
return G__8975__delegate(x,y,z,args);
});
G__8975.cljs$core$IFn$_invoke$arity$variadic = G__8975__delegate;
return G__8975;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__8978 = null;
if (arguments.length > 3) {
var G__8979__i = 0, G__8979__a = new Array(arguments.length -  3);
while (G__8979__i < G__8979__a.length) {G__8979__a[G__8979__i] = arguments[G__8979__i + 3]; ++G__8979__i;}
G__8978 = new cljs.core.IndexedSeq(G__8979__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__8974 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8980__i = 0, G__8980__a = new Array(arguments.length -  3);
while (G__8980__i < G__8980__a.length) {G__8980__a[G__8980__i] = arguments[G__8980__i + 3]; ++G__8980__i;}
  ps = new cljs.core.IndexedSeq(G__8980__a,0);
} 
return G__8974__delegate.call(this,p1,p2,p3,ps);};
G__8974.cljs$lang$maxFixedArity = 3;
G__8974.cljs$lang$applyTo = (function (arglist__8981){
var p1 = cljs.core.first(arglist__8981);
arglist__8981 = cljs.core.next(arglist__8981);
var p2 = cljs.core.first(arglist__8981);
arglist__8981 = cljs.core.next(arglist__8981);
var p3 = cljs.core.first(arglist__8981);
var ps = cljs.core.rest(arglist__8981);
return G__8974__delegate(p1,p2,p3,ps);
});
G__8974.cljs$core$IFn$_invoke$arity$variadic = G__8974__delegate;
return G__8974;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__8982 = null;
if (arguments.length > 3) {
var G__8983__i = 0, G__8983__a = new Array(arguments.length -  3);
while (G__8983__i < G__8983__a.length) {G__8983__a[G__8983__i] = arguments[G__8983__i + 3]; ++G__8983__i;}
G__8982 = new cljs.core.IndexedSeq(G__8983__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8982);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__9189 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9189) : p.call(null,G__9189));
});
var sp1__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__9191 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9191) : p.call(null,G__9191));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__9192 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9192) : p.call(null,G__9192));
}
});
var sp1__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__9194 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9194) : p.call(null,G__9194));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9196 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9196) : p.call(null,G__9196));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__9197 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9197) : p.call(null,G__9197));
}
}
});
var sp1__4 = (function() { 
var G__9358__delegate = function (x,y,z,args){
var or__3759__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__9358 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9359__i = 0, G__9359__a = new Array(arguments.length -  3);
while (G__9359__i < G__9359__a.length) {G__9359__a[G__9359__i] = arguments[G__9359__i + 3]; ++G__9359__i;}
  args = new cljs.core.IndexedSeq(G__9359__a,0);
} 
return G__9358__delegate.call(this,x,y,z,args);};
G__9358.cljs$lang$maxFixedArity = 3;
G__9358.cljs$lang$applyTo = (function (arglist__9360){
var x = cljs.core.first(arglist__9360);
arglist__9360 = cljs.core.next(arglist__9360);
var y = cljs.core.first(arglist__9360);
arglist__9360 = cljs.core.next(arglist__9360);
var z = cljs.core.first(arglist__9360);
var args = cljs.core.rest(arglist__9360);
return G__9358__delegate(x,y,z,args);
});
G__9358.cljs$core$IFn$_invoke$arity$variadic = G__9358__delegate;
return G__9358;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__9361 = null;
if (arguments.length > 3) {
var G__9362__i = 0, G__9362__a = new Array(arguments.length -  3);
while (G__9362__i < G__9362__a.length) {G__9362__a[G__9362__i] = arguments[G__9362__i + 3]; ++G__9362__i;}
G__9361 = new cljs.core.IndexedSeq(G__9362__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3759__auto__ = (function (){var G__9229 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9229) : p1.call(null,G__9229));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__9230 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9230) : p2.call(null,G__9230));
}
});
var sp2__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__9232 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9232) : p1.call(null,G__9232));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9234 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9234) : p1.call(null,G__9234));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__9236 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9236) : p2.call(null,G__9236));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var G__9237 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9237) : p2.call(null,G__9237));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__9239 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9239) : p1.call(null,G__9239));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9241 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9241) : p1.call(null,G__9241));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__9243 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9243) : p1.call(null,G__9243));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__9245 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9245) : p2.call(null,G__9245));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__9247 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9247) : p2.call(null,G__9247));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var G__9248 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9248) : p2.call(null,G__9248));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__9363__delegate = function (x,y,z,args){
var or__3759__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__){
return (function (p1__8984_SHARP_){
var or__3759__auto____$1 = (function (){var G__9250 = p1__8984_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9250) : p1.call(null,G__9250));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__9251 = p1__8984_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9251) : p2.call(null,G__9251));
}
});})(or__3759__auto__))
,args);
}
};
var G__9363 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9364__i = 0, G__9364__a = new Array(arguments.length -  3);
while (G__9364__i < G__9364__a.length) {G__9364__a[G__9364__i] = arguments[G__9364__i + 3]; ++G__9364__i;}
  args = new cljs.core.IndexedSeq(G__9364__a,0);
} 
return G__9363__delegate.call(this,x,y,z,args);};
G__9363.cljs$lang$maxFixedArity = 3;
G__9363.cljs$lang$applyTo = (function (arglist__9365){
var x = cljs.core.first(arglist__9365);
arglist__9365 = cljs.core.next(arglist__9365);
var y = cljs.core.first(arglist__9365);
arglist__9365 = cljs.core.next(arglist__9365);
var z = cljs.core.first(arglist__9365);
var args = cljs.core.rest(arglist__9365);
return G__9363__delegate(x,y,z,args);
});
G__9363.cljs$core$IFn$_invoke$arity$variadic = G__9363__delegate;
return G__9363;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__9366 = null;
if (arguments.length > 3) {
var G__9367__i = 0, G__9367__a = new Array(arguments.length -  3);
while (G__9367__i < G__9367__a.length) {G__9367__a[G__9367__i] = arguments[G__9367__i + 3]; ++G__9367__i;}
G__9366 = new cljs.core.IndexedSeq(G__9367__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9366);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3759__auto__ = (function (){var G__9297 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9297) : p1.call(null,G__9297));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9299 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9299) : p2.call(null,G__9299));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__9300 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9300) : p3.call(null,G__9300));
}
}
});
var sp3__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__9302 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9302) : p1.call(null,G__9302));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9304 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9304) : p2.call(null,G__9304));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__9306 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9306) : p3.call(null,G__9306));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__9308 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9308) : p1.call(null,G__9308));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__9310 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9310) : p2.call(null,G__9310));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var G__9311 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9311) : p3.call(null,G__9311));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__9313 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9313) : p1.call(null,G__9313));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9315 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9315) : p2.call(null,G__9315));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__9317 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9317) : p3.call(null,G__9317));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__9319 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9319) : p1.call(null,G__9319));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__9321 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9321) : p2.call(null,G__9321));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var or__3759__auto____$5 = (function (){var G__9323 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9323) : p3.call(null,G__9323));
})();
if(cljs.core.truth_(or__3759__auto____$5)){
return or__3759__auto____$5;
} else {
var or__3759__auto____$6 = (function (){var G__9325 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9325) : p1.call(null,G__9325));
})();
if(cljs.core.truth_(or__3759__auto____$6)){
return or__3759__auto____$6;
} else {
var or__3759__auto____$7 = (function (){var G__9327 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9327) : p2.call(null,G__9327));
})();
if(cljs.core.truth_(or__3759__auto____$7)){
return or__3759__auto____$7;
} else {
var G__9328 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9328) : p3.call(null,G__9328));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__9368__delegate = function (x,y,z,args){
var or__3759__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__){
return (function (p1__8985_SHARP_){
var or__3759__auto____$1 = (function (){var G__9330 = p1__8985_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9330) : p1.call(null,G__9330));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__9332 = p1__8985_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9332) : p2.call(null,G__9332));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var G__9333 = p1__8985_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9333) : p3.call(null,G__9333));
}
}
});})(or__3759__auto__))
,args);
}
};
var G__9368 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9369__i = 0, G__9369__a = new Array(arguments.length -  3);
while (G__9369__i < G__9369__a.length) {G__9369__a[G__9369__i] = arguments[G__9369__i + 3]; ++G__9369__i;}
  args = new cljs.core.IndexedSeq(G__9369__a,0);
} 
return G__9368__delegate.call(this,x,y,z,args);};
G__9368.cljs$lang$maxFixedArity = 3;
G__9368.cljs$lang$applyTo = (function (arglist__9370){
var x = cljs.core.first(arglist__9370);
arglist__9370 = cljs.core.next(arglist__9370);
var y = cljs.core.first(arglist__9370);
arglist__9370 = cljs.core.next(arglist__9370);
var z = cljs.core.first(arglist__9370);
var args = cljs.core.rest(arglist__9370);
return G__9368__delegate(x,y,z,args);
});
G__9368.cljs$core$IFn$_invoke$arity$variadic = G__9368__delegate;
return G__9368;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__9371 = null;
if (arguments.length > 3) {
var G__9372__i = 0, G__9372__a = new Array(arguments.length -  3);
while (G__9372__i < G__9372__a.length) {G__9372__a[G__9372__i] = arguments[G__9372__i + 3]; ++G__9372__i;}
G__9371 = new cljs.core.IndexedSeq(G__9372__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__9373__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__8986_SHARP_){
var G__9349 = x;
return (p1__8986_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8986_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9349) : p1__8986_SHARP_.call(null,G__9349));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__8987_SHARP_){
var or__3759__auto__ = (function (){var G__9351 = x;
return (p1__8987_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8987_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9351) : p1__8987_SHARP_.call(null,G__9351));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__9352 = y;
return (p1__8987_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8987_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9352) : p1__8987_SHARP_.call(null,G__9352));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__8988_SHARP_){
var or__3759__auto__ = (function (){var G__9354 = x;
return (p1__8988_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8988_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9354) : p1__8988_SHARP_.call(null,G__9354));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__9356 = y;
return (p1__8988_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8988_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9356) : p1__8988_SHARP_.call(null,G__9356));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__9357 = z;
return (p1__8988_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8988_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9357) : p1__8988_SHARP_.call(null,G__9357));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__9374__delegate = function (x,y,z,args){
var or__3759__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__,ps__$1){
return (function (p1__8989_SHARP_){
return cljs.core.some(p1__8989_SHARP_,args);
});})(or__3759__auto__,ps__$1))
,ps__$1);
}
};
var G__9374 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9375__i = 0, G__9375__a = new Array(arguments.length -  3);
while (G__9375__i < G__9375__a.length) {G__9375__a[G__9375__i] = arguments[G__9375__i + 3]; ++G__9375__i;}
  args = new cljs.core.IndexedSeq(G__9375__a,0);
} 
return G__9374__delegate.call(this,x,y,z,args);};
G__9374.cljs$lang$maxFixedArity = 3;
G__9374.cljs$lang$applyTo = (function (arglist__9376){
var x = cljs.core.first(arglist__9376);
arglist__9376 = cljs.core.next(arglist__9376);
var y = cljs.core.first(arglist__9376);
arglist__9376 = cljs.core.next(arglist__9376);
var z = cljs.core.first(arglist__9376);
var args = cljs.core.rest(arglist__9376);
return G__9374__delegate(x,y,z,args);
});
G__9374.cljs$core$IFn$_invoke$arity$variadic = G__9374__delegate;
return G__9374;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__9377 = null;
if (arguments.length > 3) {
var G__9378__i = 0, G__9378__a = new Array(arguments.length -  3);
while (G__9378__i < G__9378__a.length) {G__9378__a[G__9378__i] = arguments[G__9378__i + 3]; ++G__9378__i;}
G__9377 = new cljs.core.IndexedSeq(G__9378__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__9373 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__9379__i = 0, G__9379__a = new Array(arguments.length -  3);
while (G__9379__i < G__9379__a.length) {G__9379__a[G__9379__i] = arguments[G__9379__i + 3]; ++G__9379__i;}
  ps = new cljs.core.IndexedSeq(G__9379__a,0);
} 
return G__9373__delegate.call(this,p1,p2,p3,ps);};
G__9373.cljs$lang$maxFixedArity = 3;
G__9373.cljs$lang$applyTo = (function (arglist__9380){
var p1 = cljs.core.first(arglist__9380);
arglist__9380 = cljs.core.next(arglist__9380);
var p2 = cljs.core.first(arglist__9380);
arglist__9380 = cljs.core.next(arglist__9380);
var p3 = cljs.core.first(arglist__9380);
var ps = cljs.core.rest(arglist__9380);
return G__9373__delegate(p1,p2,p3,ps);
});
G__9373.cljs$core$IFn$_invoke$arity$variadic = G__9373__delegate;
return G__9373;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__9381 = null;
if (arguments.length > 3) {
var G__9382__i = 0, G__9382__a = new Array(arguments.length -  3);
while (G__9382__i < G__9382__a.length) {G__9382__a[G__9382__i] = arguments[G__9382__i + 3]; ++G__9382__i;}
G__9381 = new cljs.core.IndexedSeq(G__9382__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__9381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__9437 = null;
var G__9437__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9437__1 = (function (result){
var G__9423 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9423) : rf.call(null,G__9423));
});
var G__9437__2 = (function (result,input){
var G__9424 = result;
var G__9425 = (function (){var G__9426 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9426) : f.call(null,G__9426));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9424,G__9425) : rf.call(null,G__9424,G__9425));
});
var G__9437__3 = (function() { 
var G__9438__delegate = function (result,input,inputs){
var G__9427 = result;
var G__9428 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9427,G__9428) : rf.call(null,G__9427,G__9428));
};
var G__9438 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__9439__i = 0, G__9439__a = new Array(arguments.length -  2);
while (G__9439__i < G__9439__a.length) {G__9439__a[G__9439__i] = arguments[G__9439__i + 2]; ++G__9439__i;}
  inputs = new cljs.core.IndexedSeq(G__9439__a,0);
} 
return G__9438__delegate.call(this,result,input,inputs);};
G__9438.cljs$lang$maxFixedArity = 2;
G__9438.cljs$lang$applyTo = (function (arglist__9440){
var result = cljs.core.first(arglist__9440);
arglist__9440 = cljs.core.next(arglist__9440);
var input = cljs.core.first(arglist__9440);
var inputs = cljs.core.rest(arglist__9440);
return G__9438__delegate(result,input,inputs);
});
G__9438.cljs$core$IFn$_invoke$arity$variadic = G__9438__delegate;
return G__9438;
})()
;
G__9437 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__9437__0.call(this);
case 1:
return G__9437__1.call(this,result);
case 2:
return G__9437__2.call(this,result,input);
default:
var G__9441 = null;
if (arguments.length > 2) {
var G__9442__i = 0, G__9442__a = new Array(arguments.length -  2);
while (G__9442__i < G__9442__a.length) {G__9442__a[G__9442__i] = arguments[G__9442__i + 2]; ++G__9442__i;}
G__9441 = new cljs.core.IndexedSeq(G__9442__a,0);
}
return G__9437__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__9441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9437.cljs$lang$maxFixedArity = 2;
G__9437.cljs$lang$applyTo = G__9437__3.cljs$lang$applyTo;
G__9437.cljs$core$IFn$_invoke$arity$0 = G__9437__0;
G__9437.cljs$core$IFn$_invoke$arity$1 = G__9437__1;
G__9437.cljs$core$IFn$_invoke$arity$2 = G__9437__2;
G__9437.cljs$core$IFn$_invoke$arity$variadic = G__9437__3.cljs$core$IFn$_invoke$arity$variadic;
return G__9437;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___9443 = size;
var i_9444 = (0);
while(true){
if((i_9444 < n__4646__auto___9443)){
cljs.core.chunk_append(b,(function (){var G__9429 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9444);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9429) : f.call(null,G__9429));
})());

var G__9445 = (i_9444 + (1));
i_9444 = G__9445;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__9430 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9430) : f.call(null,G__9430));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__9431 = cljs.core.first(s1);
var G__9432 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9431,G__9432) : f.call(null,G__9431,G__9432));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__9433 = cljs.core.first(s1);
var G__9434 = cljs.core.first(s2);
var G__9435 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9433,G__9434,G__9435) : f.call(null,G__9433,G__9434,G__9435));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__9446__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__9383_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__9383_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__9446 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9447__i = 0, G__9447__a = new Array(arguments.length -  4);
while (G__9447__i < G__9447__a.length) {G__9447__a[G__9447__i] = arguments[G__9447__i + 4]; ++G__9447__i;}
  colls = new cljs.core.IndexedSeq(G__9447__a,0);
} 
return G__9446__delegate.call(this,f,c1,c2,c3,colls);};
G__9446.cljs$lang$maxFixedArity = 4;
G__9446.cljs$lang$applyTo = (function (arglist__9448){
var f = cljs.core.first(arglist__9448);
arglist__9448 = cljs.core.next(arglist__9448);
var c1 = cljs.core.first(arglist__9448);
arglist__9448 = cljs.core.next(arglist__9448);
var c2 = cljs.core.first(arglist__9448);
arglist__9448 = cljs.core.next(arglist__9448);
var c3 = cljs.core.first(arglist__9448);
var colls = cljs.core.rest(arglist__9448);
return G__9446__delegate(f,c1,c2,c3,colls);
});
G__9446.cljs$core$IFn$_invoke$arity$variadic = G__9446__delegate;
return G__9446;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__9449 = null;
if (arguments.length > 4) {
var G__9450__i = 0, G__9450__a = new Array(arguments.length -  4);
while (G__9450__i < G__9450__a.length) {G__9450__a[G__9450__i] = arguments[G__9450__i + 4]; ++G__9450__i;}
G__9449 = new cljs.core.IndexedSeq(G__9450__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9459 = null;
var G__9459__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9459__1 = (function (result){
var G__9456 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9456) : rf.call(null,G__9456));
});
var G__9459__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__9457 = result;
var G__9458 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9457,G__9458) : rf.call(null,G__9457,G__9458));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__9459 = function(result,input){
switch(arguments.length){
case 0:
return G__9459__0.call(this);
case 1:
return G__9459__1.call(this,result);
case 2:
return G__9459__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9459.cljs$core$IFn$_invoke$arity$0 = G__9459__0;
G__9459.cljs$core$IFn$_invoke$arity$1 = G__9459__1;
G__9459.cljs$core$IFn$_invoke$arity$2 = G__9459__2;
return G__9459;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__9466 = null;
var G__9466__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9466__1 = (function (result){
var G__9463 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9463) : rf.call(null,G__9463));
});
var G__9466__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__9464 = result;
var G__9465 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9464,G__9465) : rf.call(null,G__9464,G__9465));
}
});
G__9466 = function(result,input){
switch(arguments.length){
case 0:
return G__9466__0.call(this);
case 1:
return G__9466__1.call(this,result);
case 2:
return G__9466__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9466.cljs$core$IFn$_invoke$arity$0 = G__9466__0;
G__9466.cljs$core$IFn$_invoke$arity$1 = G__9466__1;
G__9466.cljs$core$IFn$_invoke$arity$2 = G__9466__2;
return G__9466;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__9467 = (n__$1 - (1));
var G__9468 = cljs.core.rest(s);
n__$1 = G__9467;
coll__$1 = G__9468;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__9471 = cljs.core.next(s);
var G__9472 = cljs.core.next(lead);
s = G__9471;
lead = G__9472;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__9485 = null;
var G__9485__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9485__1 = (function (result){
var G__9479 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9479) : rf.call(null,G__9479));
});
var G__9485__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3747__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3747__auto__)){
var G__9480 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9480) : pred.call(null,G__9480));
} else {
return and__3747__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__9481 = result;
var G__9482 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9481,G__9482) : rf.call(null,G__9481,G__9482));
}
});
G__9485 = function(result,input){
switch(arguments.length){
case 0:
return G__9485__0.call(this);
case 1:
return G__9485__1.call(this,result);
case 2:
return G__9485__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9485.cljs$core$IFn$_invoke$arity$0 = G__9485__0;
G__9485.cljs$core$IFn$_invoke$arity$1 = G__9485__1;
G__9485.cljs$core$IFn$_invoke$arity$2 = G__9485__2;
return G__9485;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3747__auto__ = s;
if(and__3747__auto__){
var G__9484 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9484) : pred__$1.call(null,G__9484));
} else {
return and__3747__auto__;
}
})())){
var G__9486 = pred__$1;
var G__9487 = cljs.core.rest(s);
pred__$1 = G__9486;
coll__$1 = G__9487;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__9496 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9496) : f.call(null,G__9496));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__9499__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__9499 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__9500__i = 0, G__9500__a = new Array(arguments.length -  2);
while (G__9500__i < G__9500__a.length) {G__9500__a[G__9500__i] = arguments[G__9500__i + 2]; ++G__9500__i;}
  colls = new cljs.core.IndexedSeq(G__9500__a,0);
} 
return G__9499__delegate.call(this,c1,c2,colls);};
G__9499.cljs$lang$maxFixedArity = 2;
G__9499.cljs$lang$applyTo = (function (arglist__9501){
var c1 = cljs.core.first(arglist__9501);
arglist__9501 = cljs.core.next(arglist__9501);
var c2 = cljs.core.first(arglist__9501);
var colls = cljs.core.rest(arglist__9501);
return G__9499__delegate(c1,c2,colls);
});
G__9499.cljs$core$IFn$_invoke$arity$variadic = G__9499__delegate;
return G__9499;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__9502 = null;
if (arguments.length > 2) {
var G__9503__i = 0, G__9503__a = new Array(arguments.length -  2);
while (G__9503__i < G__9503__a.length) {G__9503__a[G__9503__i] = arguments[G__9503__i + 2]; ++G__9503__i;}
G__9502 = new cljs.core.IndexedSeq(G__9503__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__9502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__9518 = null;
var G__9518__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9518__1 = (function (result){
var G__9511 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9511) : rf.call(null,G__9511));
});
var G__9518__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__9512 = result;
var G__9513 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9512,G__9513) : rf.call(null,G__9512,G__9513));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__9514 = sepr;
var G__9515 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9514,G__9515) : rf.call(null,G__9514,G__9515));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__9516 = result;
var G__9517 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9516,G__9517) : rf.call(null,G__9516,G__9517));
}
});
G__9518 = function(result,input){
switch(arguments.length){
case 0:
return G__9518__0.call(this);
case 1:
return G__9518__1.call(this,result);
case 2:
return G__9518__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9518.cljs$core$IFn$_invoke$arity$0 = G__9518__0;
G__9518.cljs$core$IFn$_invoke$arity$1 = G__9518__1;
G__9518.cljs$core$IFn$_invoke$arity$2 = G__9518__2;
return G__9518;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__9527__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__9527 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__9528__i = 0, G__9528__a = new Array(arguments.length -  1);
while (G__9528__i < G__9528__a.length) {G__9528__a[G__9528__i] = arguments[G__9528__i + 1]; ++G__9528__i;}
  colls = new cljs.core.IndexedSeq(G__9528__a,0);
} 
return G__9527__delegate.call(this,f,colls);};
G__9527.cljs$lang$maxFixedArity = 1;
G__9527.cljs$lang$applyTo = (function (arglist__9529){
var f = cljs.core.first(arglist__9529);
var colls = cljs.core.rest(arglist__9529);
return G__9527__delegate(f,colls);
});
G__9527.cljs$core$IFn$_invoke$arity$variadic = G__9527__delegate;
return G__9527;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__9530 = null;
if (arguments.length > 1) {
var G__9531__i = 0, G__9531__a = new Array(arguments.length -  1);
while (G__9531__i < G__9531__a.length) {G__9531__a[G__9531__i] = arguments[G__9531__i + 1]; ++G__9531__i;}
G__9530 = new cljs.core.IndexedSeq(G__9531__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__9550 = null;
var G__9550__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9550__1 = (function (result){
var G__9544 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9544) : rf.call(null,G__9544));
});
var G__9550__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9545 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9545) : pred.call(null,G__9545));
})())){
var G__9546 = result;
var G__9547 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9546,G__9547) : rf.call(null,G__9546,G__9547));
} else {
return result;
}
});
G__9550 = function(result,input){
switch(arguments.length){
case 0:
return G__9550__0.call(this);
case 1:
return G__9550__1.call(this,result);
case 2:
return G__9550__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9550.cljs$core$IFn$_invoke$arity$0 = G__9550__0;
G__9550.cljs$core$IFn$_invoke$arity$1 = G__9550__1;
G__9550.cljs$core$IFn$_invoke$arity$2 = G__9550__2;
return G__9550;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___9551 = size;
var i_9552 = (0);
while(true){
if((i_9552 < n__4646__auto___9551)){
if(cljs.core.truth_((function (){var G__9548 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9552);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9548) : pred.call(null,G__9548));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_9552));
} else {
}

var G__9553 = (i_9552 + (1));
i_9552 = G__9553;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__9549 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9549) : pred.call(null,G__9549));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__9560 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9560) : branch_QMARK_.call(null,G__9560));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__9561 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9561) : children.call(null,G__9561));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__9562_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__9562_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__9565 = to;
if(G__9565){
var bit__4433__auto__ = (G__9565.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4433__auto__) || (G__9565.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__9566 = to;
if(G__9566){
var bit__4433__auto__ = (G__9566.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4433__auto__) || (G__9566.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__9568 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9568) : f.call(null,G__9568));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__9569__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__9569 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__9570__i = 0, G__9570__a = new Array(arguments.length -  4);
while (G__9570__i < G__9570__a.length) {G__9570__a[G__9570__i] = arguments[G__9570__i + 4]; ++G__9570__i;}
  colls = new cljs.core.IndexedSeq(G__9570__a,0);
} 
return G__9569__delegate.call(this,f,c1,c2,c3,colls);};
G__9569.cljs$lang$maxFixedArity = 4;
G__9569.cljs$lang$applyTo = (function (arglist__9571){
var f = cljs.core.first(arglist__9571);
arglist__9571 = cljs.core.next(arglist__9571);
var c1 = cljs.core.first(arglist__9571);
arglist__9571 = cljs.core.next(arglist__9571);
var c2 = cljs.core.first(arglist__9571);
arglist__9571 = cljs.core.next(arglist__9571);
var c3 = cljs.core.first(arglist__9571);
var colls = cljs.core.rest(arglist__9571);
return G__9569__delegate(f,c1,c2,c3,colls);
});
G__9569.cljs$core$IFn$_invoke$arity$variadic = G__9569__delegate;
return G__9569;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__9572 = null;
if (arguments.length > 4) {
var G__9573__i = 0, G__9573__a = new Array(arguments.length -  4);
while (G__9573__i < G__9573__a.length) {G__9573__a[G__9573__i] = arguments[G__9573__i + 4]; ++G__9573__i;}
G__9572 = new cljs.core.IndexedSeq(G__9573__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__9572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__9575 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9575) : pred.call(null,G__9575));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__9590 = m__$1;
if(G__9590){
var bit__4440__auto__ = (G__9590.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4440__auto__) || (G__9590.cljs$core$ILookup$)){
return true;
} else {
if((!G__9590.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9590);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__9590);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__9591 = sentinel;
var G__9592 = m__$2;
var G__9593 = cljs.core.next(ks__$1);
sentinel = G__9591;
m__$1 = G__9592;
ks__$1 = G__9593;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__9594,v){
var vec__9599 = p__9594;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9599,(0),null);
var ks = cljs.core.nthnext(vec__9599,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__9600,f){
var vec__9638 = p__9600;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9638,(0),null);
var ks = cljs.core.nthnext(vec__9638,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9639 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9639) : f.call(null,G__9639));
})());
}
});
var update_in__4 = (function (m,p__9601,f,a){
var vec__9640 = p__9601;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9640,(0),null);
var ks = cljs.core.nthnext(vec__9640,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9641 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9642 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9641,G__9642) : f.call(null,G__9641,G__9642));
})());
}
});
var update_in__5 = (function (m,p__9602,f,a,b){
var vec__9643 = p__9602;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9643,(0),null);
var ks = cljs.core.nthnext(vec__9643,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9644 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9645 = a;
var G__9646 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9644,G__9645,G__9646) : f.call(null,G__9644,G__9645,G__9646));
})());
}
});
var update_in__6 = (function (m,p__9603,f,a,b,c){
var vec__9647 = p__9603;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9647,(0),null);
var ks = cljs.core.nthnext(vec__9647,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9648 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9649 = a;
var G__9650 = b;
var G__9651 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9648,G__9649,G__9650,G__9651) : f.call(null,G__9648,G__9649,G__9650,G__9651));
})());
}
});
var update_in__7 = (function() { 
var G__9653__delegate = function (m,p__9604,f,a,b,c,args){
var vec__9652 = p__9604;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9652,(0),null);
var ks = cljs.core.nthnext(vec__9652,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__9653 = function (m,p__9604,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__9654__i = 0, G__9654__a = new Array(arguments.length -  6);
while (G__9654__i < G__9654__a.length) {G__9654__a[G__9654__i] = arguments[G__9654__i + 6]; ++G__9654__i;}
  args = new cljs.core.IndexedSeq(G__9654__a,0);
} 
return G__9653__delegate.call(this,m,p__9604,f,a,b,c,args);};
G__9653.cljs$lang$maxFixedArity = 6;
G__9653.cljs$lang$applyTo = (function (arglist__9655){
var m = cljs.core.first(arglist__9655);
arglist__9655 = cljs.core.next(arglist__9655);
var p__9604 = cljs.core.first(arglist__9655);
arglist__9655 = cljs.core.next(arglist__9655);
var f = cljs.core.first(arglist__9655);
arglist__9655 = cljs.core.next(arglist__9655);
var a = cljs.core.first(arglist__9655);
arglist__9655 = cljs.core.next(arglist__9655);
var b = cljs.core.first(arglist__9655);
arglist__9655 = cljs.core.next(arglist__9655);
var c = cljs.core.first(arglist__9655);
var args = cljs.core.rest(arglist__9655);
return G__9653__delegate(m,p__9604,f,a,b,c,args);
});
G__9653.cljs$core$IFn$_invoke$arity$variadic = G__9653__delegate;
return G__9653;
})()
;
update_in = function(m,p__9604,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__9604,f);
case 4:
return update_in__4.call(this,m,p__9604,f,a);
case 5:
return update_in__5.call(this,m,p__9604,f,a,b);
case 6:
return update_in__6.call(this,m,p__9604,f,a,b,c);
default:
var G__9656 = null;
if (arguments.length > 6) {
var G__9657__i = 0, G__9657__a = new Array(arguments.length -  6);
while (G__9657__i < G__9657__a.length) {G__9657__a[G__9657__i] = arguments[G__9657__i + 6]; ++G__9657__i;}
G__9656 = new cljs.core.IndexedSeq(G__9657__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__9604,f,a,b,c, G__9656);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9668 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9668) : f.call(null,G__9668));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9669 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9670 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9669,G__9670) : f.call(null,G__9669,G__9670));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9671 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9672 = x;
var G__9673 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9671,G__9672,G__9673) : f.call(null,G__9671,G__9672,G__9673));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9674 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9675 = x;
var G__9676 = y;
var G__9677 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9674,G__9675,G__9676,G__9677) : f.call(null,G__9674,G__9675,G__9676,G__9677));
})());
});
var update__7 = (function() { 
var G__9678__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__9678 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__9679__i = 0, G__9679__a = new Array(arguments.length -  6);
while (G__9679__i < G__9679__a.length) {G__9679__a[G__9679__i] = arguments[G__9679__i + 6]; ++G__9679__i;}
  more = new cljs.core.IndexedSeq(G__9679__a,0);
} 
return G__9678__delegate.call(this,m,k,f,x,y,z,more);};
G__9678.cljs$lang$maxFixedArity = 6;
G__9678.cljs$lang$applyTo = (function (arglist__9680){
var m = cljs.core.first(arglist__9680);
arglist__9680 = cljs.core.next(arglist__9680);
var k = cljs.core.first(arglist__9680);
arglist__9680 = cljs.core.next(arglist__9680);
var f = cljs.core.first(arglist__9680);
arglist__9680 = cljs.core.next(arglist__9680);
var x = cljs.core.first(arglist__9680);
arglist__9680 = cljs.core.next(arglist__9680);
var y = cljs.core.first(arglist__9680);
arglist__9680 = cljs.core.next(arglist__9680);
var z = cljs.core.first(arglist__9680);
var more = cljs.core.rest(arglist__9680);
return G__9678__delegate(m,k,f,x,y,z,more);
});
G__9678.cljs$core$IFn$_invoke$arity$variadic = G__9678__delegate;
return G__9678;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__9681 = null;
if (arguments.length > 6) {
var G__9682__i = 0, G__9682__a = new Array(arguments.length -  6);
while (G__9682__i < G__9682__a.length) {G__9682__a[G__9682__i] = arguments[G__9682__i + 6]; ++G__9682__i;}
G__9681 = new cljs.core.IndexedSeq(G__9682__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__9681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__9683 = (ll - (5));
var G__9684 = r;
ll = G__9683;
ret = G__9684;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9689 = cljs.core.pv_aget(node,(0));
var G__9690 = (level - (5));
node = G__9689;
level = G__9690;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__9691 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__9692 = (level - (5));
node = G__9691;
level = G__9692;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9702 = init__$2;
var G__9703 = (j + i);
var G__9704 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9702,G__9703,G__9704) : f.call(null,G__9702,G__9703,G__9704));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9715 = (j + (1));
var G__9716 = init__$3;
j = G__9715;
init__$2 = G__9716;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9705 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9705) : cljs.core.deref.call(null,G__9705));
} else {
var G__9717 = (i + len);
var G__9718 = init__$2;
i = G__9717;
init__$1 = G__9718;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__9706 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9706) : cljs.core.tv_editable_root.call(null,G__9706));
})(),(function (){var G__9707 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9707) : cljs.core.tv_editable_tail.call(null,G__9707));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__9708 = init__$2;
var G__9709 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9708,G__9709) : f.call(null,G__9708,G__9709));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__9719 = (j + (1));
var G__9720 = init__$3;
j = G__9719;
init__$2 = G__9720;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9710 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9710) : cljs.core.deref.call(null,G__9710));
} else {
var G__9721 = (i + len);
var G__9722 = init__$2;
i = G__9721;
init__$1 = G__9722;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__9711 = coll__$1;
var G__9712 = cljs.core.first_array_for_longvec(coll__$1);
var G__9713 = (0);
var G__9714 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9711,G__9712,G__9713,G__9714) : cljs.core.chunked_seq.call(null,G__9711,G__9712,G__9713,G__9714));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4646__auto___9723 = len;
var i_9724 = (0);
while(true){
if((i_9724 < n__4646__auto___9723)){
(new_tail[i_9724] = (self__.tail[i_9724]));

var G__9725 = (i_9724 + (1));
i_9724 = G__9725;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__9726 = null;
var G__9726__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9726__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9726 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9726__2.call(this,self__,k);
case 3:
return G__9726__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9726.cljs$core$IFn$_invoke$arity$2 = G__9726__2;
G__9726.cljs$core$IFn$_invoke$arity$3 = G__9726__3;
return G__9726;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args9701){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9701)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__9727 = (i + (1));
var G__9728 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__9727;
out = G__9728;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9729__i = 0, G__9729__a = new Array(arguments.length -  0);
while (G__9729__i < G__9729__a.length) {G__9729__a[G__9729__i] = arguments[G__9729__i + 0]; ++G__9729__i;}
  args = new cljs.core.IndexedSeq(G__9729__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__9730){
var args = cljs.core.seq(arglist__9730);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9731 = self__.vec;
var G__9732 = self__.node;
var G__9733 = self__.i;
var G__9734 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9731,G__9732,G__9733,G__9734) : cljs.core.chunked_seq.call(null,G__9731,G__9732,G__9733,G__9734));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__9735 = self__.vec;
var G__9736 = (self__.i + self__.off);
var G__9737 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9735,G__9736,G__9737) : cljs.core.subvec.call(null,G__9735,G__9736,G__9737));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__9738 = self__.vec;
var G__9739 = (self__.i + self__.off);
var G__9740 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9738,G__9739,G__9740) : cljs.core.subvec.call(null,G__9738,G__9739,G__9740));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__9741 = self__.vec;
var G__9742 = self__.node;
var G__9743 = self__.i;
var G__9744 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9741,G__9742,G__9743,G__9744) : cljs.core.chunked_seq.call(null,G__9741,G__9742,G__9743,G__9744));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9745 = self__.vec;
var G__9746 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9747 = end;
var G__9748 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9745,G__9746,G__9747,G__9748) : cljs.core.chunked_seq.call(null,G__9745,G__9746,G__9747,G__9748));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__9749 = self__.vec;
var G__9750 = self__.node;
var G__9751 = self__.i;
var G__9752 = self__.off;
var G__9753 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9749,G__9750,G__9751,G__9752,G__9753) : cljs.core.chunked_seq.call(null,G__9749,G__9750,G__9751,G__9752,G__9753));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__9754 = self__.vec;
var G__9755 = cljs.core.unchecked_array_for(self__.vec,end);
var G__9756 = end;
var G__9757 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9754,G__9755,G__9756,G__9757) : cljs.core.chunked_seq.call(null,G__9754,G__9755,G__9756,G__9757));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__9759 = self__.meta;
var G__9760 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__9761 = self__.start;
var G__9762 = (function (){var x__4076__auto__ = self__.end;
var y__4077__auto__ = (v_pos + (1));
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
})();
var G__9763 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9759,G__9760,G__9761,G__9762,G__9763) : cljs.core.build_subvec.call(null,G__9759,G__9760,G__9761,G__9762,G__9763));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__9764 = self__.meta;
var G__9765 = self__.v;
var G__9766 = self__.start;
var G__9767 = (self__.end - (1));
var G__9768 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9764,G__9765,G__9766,G__9767,G__9768) : cljs.core.build_subvec.call(null,G__9764,G__9765,G__9766,G__9767,G__9768));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__9770 = meta__$1;
var G__9771 = self__.v;
var G__9772 = self__.start;
var G__9773 = self__.end;
var G__9774 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9770,G__9771,G__9772,G__9773,G__9774) : cljs.core.build_subvec.call(null,G__9770,G__9771,G__9772,G__9773,G__9774));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__9775 = self__.meta;
var G__9776 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__9777 = self__.start;
var G__9778 = (self__.end + (1));
var G__9779 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9775,G__9776,G__9777,G__9778,G__9779) : cljs.core.build_subvec.call(null,G__9775,G__9776,G__9777,G__9778,G__9779));
});

cljs.core.Subvec.prototype.call = (function() {
var G__9780 = null;
var G__9780__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__9780__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__9780 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9780__2.call(this,self__,k);
case 3:
return G__9780__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9780.cljs$core$IFn$_invoke$arity$2 = G__9780__2;
G__9780.cljs$core$IFn$_invoke$arity$3 = G__9780__3;
return G__9780;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args9758){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9758)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__9781 = meta;
var G__9782 = v.v;
var G__9783 = (v.start + start);
var G__9784 = (v.start + end);
var G__9785 = __hash;
meta = G__9781;
v = G__9782;
start = G__9783;
end = G__9784;
__hash = G__9785;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj9792 = {};
return obj9792;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__9800 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__9801 = (level - (5));
node = G__9800;
level = G__9801;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__9805 = null;
var G__9805__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9805__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9805 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9805__2.call(this,self__,k);
case 3:
return G__9805__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9805.cljs$core$IFn$_invoke$arity$2 = G__9805__2;
G__9805.cljs$core$IFn$_invoke$arity$3 = G__9805__3;
return G__9805;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args9802){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9802)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3759__auto__ = self__.front;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3759__auto__ = self__.rear;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__9806 = (i + incr);
i = G__9806;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__9807 = (i + (1));
var G__9808 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__9807;
out = G__9808;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj9812 = {};
return obj9812;
})();
var l = ks.length;
var i_9813 = (0);
while(true){
if((i_9813 < l)){
var k_9814 = (ks[i_9813]);
(new_obj[k_9814] = (obj[k_9814]));

var G__9815 = (i_9813 + (1));
i_9813 = G__9815;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__9819 = k;
return goog.isString(G__9819);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__9820 = init__$1;
var G__9821 = k;
var G__9822 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9820,G__9821,G__9822) : f.call(null,G__9820,G__9821,G__9822));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9823 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9823) : cljs.core.deref.call(null,G__9823));
} else {
var G__9829 = cljs.core.rest(keys__$1);
var G__9830 = init__$2;
keys__$1 = G__9829;
init__$1 = G__9830;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__9825 = k;
return goog.isString(G__9825);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__9826 = k;
return goog.isString(G__9826);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__9828 = k;
return goog.isString(G__9828);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__9816_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__9816_SHARP_,(self__.strobj[p1__9816_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__9831 = null;
var G__9831__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9831__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9831 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9831__2.call(this,self__,k);
case 3:
return G__9831__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9831.cljs$core$IFn$_invoke$arity$2 = G__9831__2;
G__9831.cljs$core$IFn$_invoke$arity$3 = G__9831__3;
return G__9831;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args9817){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9817)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj9833 = {};
return obj9833;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__9834 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9834,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9834,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__9835 = (i + (2));
i = G__9835;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__9836 = (i + (2));
i = G__9836;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__9837 = (i + (2));
i = G__9837;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__9838 = (i + (2));
i = G__9838;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__9839 = (i + (2));
i = G__9839;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3759__auto__ = (function (){var G__9843 = k;
return goog.isString(G__9843);
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_9844 = (0);
while(true){
if((i_9844 < l)){
(narr[i_9844] = (arr[i_9844]));

var G__9845 = (i_9844 + (1));
i_9844 = G__9845;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9847 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9847) : cljs.core.keys.call(null,G__9847));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9848 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9848) : cljs.core.vals.call(null,G__9848));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9849 = cljs.core.seq(coll);
var chunk__9850 = null;
var count__9851 = (0);
var i__9852 = (0);
while(true){
if((i__9852 < count__9851)){
var vec__9853 = chunk__9850.cljs$core$IIndexed$_nth$arity$2(null,i__9852);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9853,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9853,(1),null);
var G__9854_9867 = v;
var G__9855_9868 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9854_9867,G__9855_9868) : f.call(null,G__9854_9867,G__9855_9868));

var G__9869 = seq__9849;
var G__9870 = chunk__9850;
var G__9871 = count__9851;
var G__9872 = (i__9852 + (1));
seq__9849 = G__9869;
chunk__9850 = G__9870;
count__9851 = G__9871;
i__9852 = G__9872;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9849);
if(temp__4126__auto__){
var seq__9849__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9849__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__9849__$1);
var G__9873 = cljs.core.chunk_rest(seq__9849__$1);
var G__9874 = c__4546__auto__;
var G__9875 = cljs.core.count(c__4546__auto__);
var G__9876 = (0);
seq__9849 = G__9873;
chunk__9850 = G__9874;
count__9851 = G__9875;
i__9852 = G__9876;
continue;
} else {
var vec__9856 = cljs.core.first(seq__9849__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9856,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9856,(1),null);
var G__9857_9877 = v;
var G__9858_9878 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9857_9877,G__9858_9878) : f.call(null,G__9857_9877,G__9858_9878));

var G__9879 = cljs.core.next(seq__9849__$1);
var G__9880 = null;
var G__9881 = (0);
var G__9882 = (0);
seq__9849 = G__9879;
chunk__9850 = G__9880;
count__9851 = G__9881;
i__9852 = G__9882;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__9859 = init__$1;
var G__9860 = (self__.arr[i]);
var G__9861 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9859,G__9860,G__9861) : f.call(null,G__9859,G__9860,G__9861));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9862 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9862) : cljs.core.deref.call(null,G__9862));
} else {
var G__9883 = (i + (2));
var G__9884 = init__$2;
i = G__9883;
init__$1 = G__9884;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__9863 = other;
if(G__9863){
var bit__4433__auto__ = (G__9863.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4433__auto__) || (G__9863.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__9885 = (i + (2));
i = G__9885;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj9865 = {};
return obj9865;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__9886 = (s + (2));
var G__9887 = d;
s = G__9886;
d = G__9887;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__9888 = (s + (2));
var G__9889 = (d + (2));
s = G__9888;
d = G__9889;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__9866 = cljs.core.aclone(self__.arr);
(G__9866[(idx + (1))] = v);

return G__9866;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9890 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9891 = cljs.core.next(es);
ret = G__9890;
es = G__9891;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__9892 = null;
var G__9892__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9892__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9892 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9892__2.call(this,self__,k);
case 3:
return G__9892__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9892.cljs$core$IFn$_invoke$arity$2 = G__9892__2;
G__9892.cljs$core$IFn$_invoke$arity$3 = G__9892__3;
return G__9892;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args9846){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9846)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9893 = (i + (2));
var G__9894 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__9893;
ret = G__9894;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__9895_9903 = self__.arr;
G__9895_9903.pop();

G__9895_9903.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__9896 = self__.len;
var G__9897 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9896,G__9897) : cljs.core.array__GT_transient_hash_map.call(null,G__9896,G__9897));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__9898 = o;
if(G__9898){
var bit__4440__auto__ = (G__9898.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4440__auto__) || (G__9898.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__9898.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9898);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__9898);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__9899 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9899) : cljs.core.key.call(null,G__9899));
})(),(function (){var G__9900 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9900) : cljs.core.val.call(null,G__9900));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__9904 = cljs.core.next(es);
var G__9905 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__9901 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9901) : cljs.core.key.call(null,G__9901));
})(),(function (){var G__9902 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9902) : cljs.core.val.call(null,G__9902));
})());
es = G__9904;
tcoll__$2 = G__9905;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__9906 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__9907 = (i + (2));
out = G__9906;
i = G__9907;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__9910 = cljs.core.aclone(arr);
(G__9910[i] = a);

return G__9910;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__9911 = cljs.core.aclone(arr);
(G__9911[i] = a);

(G__9911[j] = b);

return G__9911;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__9916 = init__$1;
var G__9917 = k;
var G__9918 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9916,G__9917,G__9918) : f.call(null,G__9916,G__9917,G__9918));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9919 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9919) : cljs.core.deref.call(null,G__9919));
} else {
var G__9920 = (i + (2));
var G__9921 = init__$2;
i = G__9920;
init__$1 = G__9921;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9922 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9922) : cljs.core.create_inode_seq.call(null,G__9922));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9936 = (0);
var j_9937 = (0);
while(true){
if((i_9936 < (32))){
if((((self__.bitmap >>> i_9936) & (1)) === (0))){
var G__9938 = (i_9936 + (1));
var G__9939 = j_9937;
i_9936 = G__9938;
j_9937 = G__9939;
continue;
} else {
(nodes[i_9936] = ((!(((self__.arr[j_9937]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_9937])),(self__.arr[j_9937]),(self__.arr[(j_9937 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9937 + (1))])));

var G__9940 = (i_9936 + (1));
var G__9941 = (j_9937 + (2));
i_9936 = G__9940;
j_9937 = G__9941;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9923 = edit__$1;
var G__9924 = (shift + (5));
var G__9925 = key_or_nil;
var G__9926 = val_or_node;
var G__9927 = hash;
var G__9928 = key;
var G__9929 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9923,G__9924,G__9925,G__9926,G__9927,G__9928,G__9929) : cljs.core.create_node.call(null,G__9923,G__9924,G__9925,G__9926,G__9927,G__9928,G__9929));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_9942 = (0);
var j_9943 = (0);
while(true){
if((i_9942 < (32))){
if((((self__.bitmap >>> i_9942) & (1)) === (0))){
var G__9944 = (i_9942 + (1));
var G__9945 = j_9943;
i_9942 = G__9944;
j_9943 = G__9945;
continue;
} else {
(nodes[i_9942] = ((!(((self__.arr[j_9943]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_9943])),(self__.arr[j_9943]),(self__.arr[(j_9943 + (1))]),added_leaf_QMARK_):(self__.arr[(j_9943 + (1))])));

var G__9946 = (i_9942 + (1));
var G__9947 = (j_9943 + (2));
i_9942 = G__9946;
j_9943 = G__9947;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__9930 = (shift + (5));
var G__9931 = key_or_nil;
var G__9932 = val_or_node;
var G__9933 = hash;
var G__9934 = key;
var G__9935 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9930,G__9931,G__9932,G__9933,G__9934,G__9935) : cljs.core.create_node.call(null,G__9930,G__9931,G__9932,G__9933,G__9934,G__9935));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__9948 = (i + (1));
var G__9949 = (j + (2));
var G__9950 = (bitmap | ((1) << i));
i = G__9948;
j = G__9949;
bitmap = G__9950;
continue;
} else {
var G__9951 = (i + (1));
var G__9952 = j;
var G__9953 = bitmap;
i = G__9951;
j = G__9952;
bitmap = G__9953;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9954 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9954) : cljs.core.create_array_node_seq.call(null,G__9954));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__9955 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9955) : cljs.core.deref.call(null,G__9955));
} else {
var G__9956 = (i + (1));
var G__9957 = init__$2;
i = G__9956;
init__$1 = G__9957;
continue;
}
} else {
var G__9958 = (i + (1));
var G__9959 = init__$1;
i = G__9958;
init__$1 = G__9959;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__9960 = (i + (2));
i = G__9960;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__9961 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9961) : cljs.core.create_inode_seq.call(null,G__9961));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__9962 = self__.nodes;
var G__9963 = (self__.i + (2));
var G__9964 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9962,G__9963,G__9964) : cljs.core.create_inode_seq.call(null,G__9962,G__9963,G__9964));
} else {
var G__9965 = self__.nodes;
var G__9966 = self__.i;
var G__9967 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9965,G__9966,G__9967) : cljs.core.create_inode_seq.call(null,G__9965,G__9966,G__9967));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__9971 = (j + (2));
j = G__9971;
continue;
}
} else {
var G__9972 = (j + (2));
j = G__9972;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__9973 = null;
var G__9974 = self__.nodes;
var G__9975 = self__.i;
var G__9976 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9973,G__9974,G__9975,G__9976) : cljs.core.create_array_node_seq.call(null,G__9973,G__9974,G__9975,G__9976));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__9981 = (j + (1));
j = G__9981;
continue;
}
} else {
var G__9982 = (j + (1));
j = G__9982;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9984 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9984) : cljs.core.keys.call(null,G__9984));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9985 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9985) : cljs.core.vals.call(null,G__9985));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9986 = cljs.core.seq(coll);
var chunk__9987 = null;
var count__9988 = (0);
var i__9989 = (0);
while(true){
if((i__9989 < count__9988)){
var vec__9990 = chunk__9987.cljs$core$IIndexed$_nth$arity$2(null,i__9989);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9990,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9990,(1),null);
var G__9991_10002 = v;
var G__9992_10003 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9991_10002,G__9992_10003) : f.call(null,G__9991_10002,G__9992_10003));

var G__10004 = seq__9986;
var G__10005 = chunk__9987;
var G__10006 = count__9988;
var G__10007 = (i__9989 + (1));
seq__9986 = G__10004;
chunk__9987 = G__10005;
count__9988 = G__10006;
i__9989 = G__10007;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__9986);
if(temp__4126__auto__){
var seq__9986__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9986__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__9986__$1);
var G__10008 = cljs.core.chunk_rest(seq__9986__$1);
var G__10009 = c__4546__auto__;
var G__10010 = cljs.core.count(c__4546__auto__);
var G__10011 = (0);
seq__9986 = G__10008;
chunk__9987 = G__10009;
count__9988 = G__10010;
i__9989 = G__10011;
continue;
} else {
var vec__9993 = cljs.core.first(seq__9986__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9993,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9993,(1),null);
var G__9994_10012 = v;
var G__9995_10013 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9994_10012,G__9995_10013) : f.call(null,G__9994_10012,G__9995_10013));

var G__10014 = cljs.core.next(seq__9986__$1);
var G__10015 = null;
var G__10016 = (0);
var G__10017 = (0);
seq__9986 = G__10014;
chunk__9987 = G__10015;
count__9988 = G__10016;
i__9989 = G__10017;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__9996 = init;
var G__9997 = null;
var G__9998 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9996,G__9997,G__9998) : f.call(null,G__9996,G__9997,G__9998));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__9999 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9999) : cljs.core.deref.call(null,G__9999));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj10001 = {};
return obj10001;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10018 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10019 = cljs.core.next(es);
ret = G__10018;
es = G__10019;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__10020 = null;
var G__10020__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10020__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10020 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10020__2.call(this,self__,k);
case 3:
return G__10020__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10020.cljs$core$IFn$_invoke$arity$2 = G__10020__2;
G__10020.cljs$core$IFn$_invoke$arity$3 = G__10020__3;
return G__10020;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args9983){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9983)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10021 = (i + (2));
var G__10022 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__10021;
ret = G__10022;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__10023 = (i + (1));
var G__10024 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__10023;
out = G__10024;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__10025 = o;
if(G__10025){
var bit__4440__auto__ = (G__10025.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4440__auto__) || (G__10025.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__10025.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10025);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__10025);
}
})()){
return tcoll.assoc_BANG_((function (){var G__10026 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10026) : cljs.core.key.call(null,G__10026));
})(),(function (){var G__10027 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10027) : cljs.core.val.call(null,G__10027));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__10030 = cljs.core.next(es);
var G__10031 = tcoll__$1.assoc_BANG_((function (){var G__10028 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10028) : cljs.core.key.call(null,G__10028));
})(),(function (){var G__10029 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__10029) : cljs.core.val.call(null,G__10029));
})());
es = G__10030;
tcoll__$1 = G__10031;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__10032 = ((ascending_QMARK_)?t.left:t.right);
var G__10033 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__10032;
stack__$1 = G__10033;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__10046 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10046) : cljs.core.deref.call(null,G__10046));
} else {
var init__$2 = (function (){var G__10047 = init__$1;
var G__10048 = node.key;
var G__10049 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10047,G__10048,G__10049) : f.call(null,G__10047,G__10048,G__10049));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__10050 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10050) : cljs.core.deref.call(null,G__10050));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__10051 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10051) : cljs.core.deref.call(null,G__10051));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__10053 = null;
var G__10053__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10053__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10053 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10053__2.call(this,self__,k);
case 3:
return G__10053__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10053.cljs$core$IFn$_invoke$arity$2 = G__10053__2;
G__10053.cljs$core$IFn$_invoke$arity$3 = G__10053__3;
return G__10053;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args10052){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10052)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__10055 = null;
var G__10055__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10055__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10055 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10055__2.call(this,self__,k);
case 3:
return G__10055__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10055.cljs$core$IFn$_invoke$arity$2 = G__10055__2;
G__10055.cljs$core$IFn$_invoke$arity$3 = G__10055__3;
return G__10055;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args10054){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10054)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__10068 = k;
var G__10069 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10068,G__10069) : comp.call(null,G__10068,G__10069));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__10088 = k;
var G__10089 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10088,G__10089) : comp.call(null,G__10088,G__10089));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__10100 = k;
var G__10101 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10100,G__10101) : comp.call(null,G__10100,G__10101));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10103 = cljs.core.seq(coll);
var chunk__10104 = null;
var count__10105 = (0);
var i__10106 = (0);
while(true){
if((i__10106 < count__10105)){
var vec__10107 = chunk__10104.cljs$core$IIndexed$_nth$arity$2(null,i__10106);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10107,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10107,(1),null);
var G__10108_10120 = v;
var G__10109_10121 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10108_10120,G__10109_10121) : f.call(null,G__10108_10120,G__10109_10121));

var G__10122 = seq__10103;
var G__10123 = chunk__10104;
var G__10124 = count__10105;
var G__10125 = (i__10106 + (1));
seq__10103 = G__10122;
chunk__10104 = G__10123;
count__10105 = G__10124;
i__10106 = G__10125;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10103);
if(temp__4126__auto__){
var seq__10103__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10103__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__10103__$1);
var G__10126 = cljs.core.chunk_rest(seq__10103__$1);
var G__10127 = c__4546__auto__;
var G__10128 = cljs.core.count(c__4546__auto__);
var G__10129 = (0);
seq__10103 = G__10126;
chunk__10104 = G__10127;
count__10105 = G__10128;
i__10106 = G__10129;
continue;
} else {
var vec__10110 = cljs.core.first(seq__10103__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10110,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10110,(1),null);
var G__10111_10130 = v;
var G__10112_10131 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10111_10130,G__10112_10131) : f.call(null,G__10111_10130,G__10112_10131));

var G__10132 = cljs.core.next(seq__10103__$1);
var G__10133 = null;
var G__10134 = (0);
var G__10135 = (0);
seq__10103 = G__10132;
chunk__10104 = G__10133;
count__10105 = G__10134;
i__10106 = G__10135;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10113 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__10113) : cljs.core.keys.call(null,G__10113));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__10114 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__10114) : cljs.core.vals.call(null,G__10114));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10115 = k;
var G__10116 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10115,G__10116) : self__.comp.call(null,G__10115,G__10116));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__10136 = t.left;
t = G__10136;
continue;
} else {
var G__10137 = t.right;
t = G__10137;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__10138 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__10139 = cljs.core.next(es);
ret = G__10138;
es = G__10139;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__10140 = null;
var G__10140__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10140__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10140 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10140__2.call(this,self__,k);
case 3:
return G__10140__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10140.cljs$core$IFn$_invoke$arity$2 = G__10140__2;
G__10140.cljs$core$IFn$_invoke$arity$3 = G__10140__3;
return G__10140;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args10102){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10102)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__10117 = k;
var G__10118 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10117,G__10118) : self__.comp.call(null,G__10117,G__10118));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__10141 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10142 = t.left;
stack = G__10141;
t = G__10142;
continue;
} else {
var G__10143 = stack;
var G__10144 = t.right;
stack = G__10143;
t = G__10144;
continue;
}
} else {
if((c > (0))){
var G__10145 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__10146 = t.right;
stack = G__10145;
t = G__10146;
continue;
} else {
var G__10147 = stack;
var G__10148 = t.left;
stack = G__10147;
t = G__10148;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__10119 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__10119) : cljs.core.key.call(null,G__10119));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__10149 = cljs.core.nnext(in$);
var G__10150 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10149;
out = G__10150;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10151__i = 0, G__10151__a = new Array(arguments.length -  0);
while (G__10151__i < G__10151__a.length) {G__10151__a[G__10151__i] = arguments[G__10151__i + 0]; ++G__10151__i;}
  keyvals = new cljs.core.IndexedSeq(G__10151__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__10152){
var keyvals = cljs.core.seq(arglist__10152);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10153__i = 0, G__10153__a = new Array(arguments.length -  0);
while (G__10153__i < G__10153__a.length) {G__10153__a[G__10153__i] = arguments[G__10153__i + 0]; ++G__10153__i;}
  keyvals = new cljs.core.IndexedSeq(G__10153__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__10154){
var keyvals = cljs.core.seq(arglist__10154);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj10158 = {};
return obj10158;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__10159 = cljs.core.nnext(kvs);
kvs = G__10159;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10160__i = 0, G__10160__a = new Array(arguments.length -  0);
while (G__10160__i < G__10160__a.length) {G__10160__a[G__10160__i] = arguments[G__10160__i + 0]; ++G__10160__i;}
  keyvals = new cljs.core.IndexedSeq(G__10160__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__10161){
var keyvals = cljs.core.seq(arglist__10161);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__10162 = cljs.core.nnext(in$);
var G__10163 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10162;
out = G__10163;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__10164__i = 0, G__10164__a = new Array(arguments.length -  0);
while (G__10164__i < G__10164__a.length) {G__10164__a[G__10164__i] = arguments[G__10164__i + 0]; ++G__10164__i;}
  keyvals = new cljs.core.IndexedSeq(G__10164__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__10165){
var keyvals = cljs.core.seq(arglist__10165);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__10166 = cljs.core.nnext(in$);
var G__10167 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__10166;
out = G__10167;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__10168__i = 0, G__10168__a = new Array(arguments.length -  1);
while (G__10168__i < G__10168__a.length) {G__10168__a[G__10168__i] = arguments[G__10168__i + 1]; ++G__10168__i;}
  keyvals = new cljs.core.IndexedSeq(G__10168__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__10169){
var comparator = cljs.core.first(arglist__10169);
var keyvals = cljs.core.rest(arglist__10169);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10170 = self__.mseq;
if(G__10170){
var bit__4440__auto__ = (G__10170.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__10170.cljs$core$INext$)){
return true;
} else {
if((!G__10170.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10170);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10170);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10171 = self__.mseq;
if(G__10171){
var bit__4440__auto__ = (G__10171.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__10171.cljs$core$INext$)){
return true;
} else {
if((!G__10171.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10171);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10172 = self__.mseq;
if(G__10172){
var bit__4440__auto__ = (G__10172.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__10172.cljs$core$INext$)){
return true;
} else {
if((!G__10172.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10172);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10172);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__10173 = self__.mseq;
if(G__10173){
var bit__4440__auto__ = (G__10173.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__10173.cljs$core$INext$)){
return true;
} else {
if((!G__10173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__10173);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10174_SHARP_,p2__10175_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3759__auto__ = p1__10174_SHARP_;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__10175_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__10176__i = 0, G__10176__a = new Array(arguments.length -  0);
while (G__10176__i < G__10176__a.length) {G__10176__a[G__10176__i] = arguments[G__10176__i + 0]; ++G__10176__i;}
  maps = new cljs.core.IndexedSeq(G__10176__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__10177){
var maps = cljs.core.seq(arglist__10177);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10180 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__10181 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10180,G__10181) : f.call(null,G__10180,G__10181));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3759__auto__ = m1;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__10182__i = 0, G__10182__a = new Array(arguments.length -  1);
while (G__10182__i < G__10182__a.length) {G__10182__a[G__10182__i] = arguments[G__10182__i + 1]; ++G__10182__i;}
  maps = new cljs.core.IndexedSeq(G__10182__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__10183){
var f = cljs.core.first(arglist__10183);
var maps = cljs.core.rest(arglist__10183);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__10184 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__10185 = cljs.core.next(keys);
ret = G__10184;
keys = G__10185;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10188 = cljs.core.seq(coll);
var chunk__10189 = null;
var count__10190 = (0);
var i__10191 = (0);
while(true){
if((i__10191 < count__10190)){
var vec__10192 = chunk__10189.cljs$core$IIndexed$_nth$arity$2(null,i__10191);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10192,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10192,(1),null);
var G__10193_10198 = v;
var G__10194_10199 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10193_10198,G__10194_10199) : f.call(null,G__10193_10198,G__10194_10199));

var G__10200 = seq__10188;
var G__10201 = chunk__10189;
var G__10202 = count__10190;
var G__10203 = (i__10191 + (1));
seq__10188 = G__10200;
chunk__10189 = G__10201;
count__10190 = G__10202;
i__10191 = G__10203;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10188);
if(temp__4126__auto__){
var seq__10188__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10188__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__10188__$1);
var G__10204 = cljs.core.chunk_rest(seq__10188__$1);
var G__10205 = c__4546__auto__;
var G__10206 = cljs.core.count(c__4546__auto__);
var G__10207 = (0);
seq__10188 = G__10204;
chunk__10189 = G__10205;
count__10190 = G__10206;
i__10191 = G__10207;
continue;
} else {
var vec__10195 = cljs.core.first(seq__10188__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10195,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10195,(1),null);
var G__10196_10208 = v;
var G__10197_10209 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10196_10208,G__10197_10209) : f.call(null,G__10196_10208,G__10197_10209));

var G__10210 = cljs.core.next(seq__10188__$1);
var G__10211 = null;
var G__10212 = (0);
var G__10213 = (0);
seq__10188 = G__10210;
chunk__10189 = G__10211;
count__10190 = G__10212;
i__10191 = G__10213;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10186_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10186_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__10214 = null;
var G__10214__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10214__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10214 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10214__2.call(this,self__,k);
case 3:
return G__10214__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10214.cljs$core$IFn$_invoke$arity$2 = G__10214__2;
G__10214.cljs$core$IFn$_invoke$arity$3 = G__10214__3;
return G__10214;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args10187){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10187)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__10215 = (i + (1));
var G__10216 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__10215;
out = G__10216;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__10217 = (i + (1));
var G__10218 = cljs.core._conj_BANG_(out,(items[i]));
i = G__10217;
out = G__10218;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__10220 = null;
var G__10220__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__10220__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__10220 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10220__2.call(this,self__,k);
case 3:
return G__10220__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10220.cljs$core$IFn$_invoke$arity$2 = G__10220__2;
G__10220.cljs$core$IFn$_invoke$arity$3 = G__10220__3;
return G__10220;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args10219){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10219)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__10223 = cljs.core.seq(coll);
var chunk__10224 = null;
var count__10225 = (0);
var i__10226 = (0);
while(true){
if((i__10226 < count__10225)){
var vec__10227 = chunk__10224.cljs$core$IIndexed$_nth$arity$2(null,i__10226);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10227,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10227,(1),null);
var G__10228_10233 = v;
var G__10229_10234 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10228_10233,G__10229_10234) : f.call(null,G__10228_10233,G__10229_10234));

var G__10235 = seq__10223;
var G__10236 = chunk__10224;
var G__10237 = count__10225;
var G__10238 = (i__10226 + (1));
seq__10223 = G__10235;
chunk__10224 = G__10236;
count__10225 = G__10237;
i__10226 = G__10238;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10223);
if(temp__4126__auto__){
var seq__10223__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10223__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__10223__$1);
var G__10239 = cljs.core.chunk_rest(seq__10223__$1);
var G__10240 = c__4546__auto__;
var G__10241 = cljs.core.count(c__4546__auto__);
var G__10242 = (0);
seq__10223 = G__10239;
chunk__10224 = G__10240;
count__10225 = G__10241;
i__10226 = G__10242;
continue;
} else {
var vec__10230 = cljs.core.first(seq__10223__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10230,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10230,(1),null);
var G__10231_10243 = v;
var G__10232_10244 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10231_10243,G__10232_10244) : f.call(null,G__10231_10243,G__10232_10244));

var G__10245 = cljs.core.next(seq__10223__$1);
var G__10246 = null;
var G__10247 = (0);
var G__10248 = (0);
seq__10223 = G__10245;
chunk__10224 = G__10246;
count__10225 = G__10247;
i__10226 = G__10248;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__10221_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__10221_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__10249 = null;
var G__10249__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__10249__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__10249 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__10249__2.call(this,self__,k);
case 3:
return G__10249__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10249.cljs$core$IFn$_invoke$arity$2 = G__10249__2;
G__10249.cljs$core$IFn$_invoke$arity$3 = G__10249__3;
return G__10249;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args10222){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10222)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4640__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4640__auto__.length)){
var G__10250 = (i + (1));
var G__10251 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__10250;
res = G__10251;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__10252 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__10253 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__10252;
out = G__10253;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__10254__delegate = function (keys){
return cljs.core.set(keys);
};
var G__10254 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10255__i = 0, G__10255__a = new Array(arguments.length -  0);
while (G__10255__i < G__10255__a.length) {G__10255__a[G__10255__i] = arguments[G__10255__i + 0]; ++G__10255__i;}
  keys = new cljs.core.IndexedSeq(G__10255__a,0);
} 
return G__10254__delegate.call(this,keys);};
G__10254.cljs$lang$maxFixedArity = 0;
G__10254.cljs$lang$applyTo = (function (arglist__10256){
var keys = cljs.core.seq(arglist__10256);
return G__10254__delegate(keys);
});
G__10254.cljs$core$IFn$_invoke$arity$variadic = G__10254__delegate;
return G__10254;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__10257 = null;
if (arguments.length > 0) {
var G__10258__i = 0, G__10258__a = new Array(arguments.length -  0);
while (G__10258__i < G__10258__a.length) {G__10258__a[G__10258__i] = arguments[G__10258__i + 0]; ++G__10258__i;}
G__10257 = new cljs.core.IndexedSeq(G__10258__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__10257);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__10259__i = 0, G__10259__a = new Array(arguments.length -  0);
while (G__10259__i < G__10259__a.length) {G__10259__a[G__10259__i] = arguments[G__10259__i + 0]; ++G__10259__i;}
  keys = new cljs.core.IndexedSeq(G__10259__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__10260){
var keys = cljs.core.seq(arglist__10260);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__10261__i = 0, G__10261__a = new Array(arguments.length -  1);
while (G__10261__i < G__10261__a.length) {G__10261__a[G__10261__i] = arguments[G__10261__i + 1]; ++G__10261__i;}
  keys = new cljs.core.IndexedSeq(G__10261__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__10262){
var comparator = cljs.core.first(arglist__10262);
var keys = cljs.core.rest(arglist__10262);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10263_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10263_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__10263_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10264_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__10264_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__10264_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__10285 = null;
var G__10285__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10285__1 = (function (result){
var G__10275 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10275) : rf.call(null,G__10275));
});
var G__10285__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__10276 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10276) : cljs.core.deref.call(null,G__10276));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__10277 = result;
var G__10278 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10277,G__10278) : rf.call(null,G__10277,G__10278));
}
});
G__10285 = function(result,input){
switch(arguments.length){
case 0:
return G__10285__0.call(this);
case 1:
return G__10285__1.call(this,result);
case 2:
return G__10285__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10285.cljs$core$IFn$_invoke$arity$0 = G__10285__0;
G__10285.cljs$core$IFn$_invoke$arity$1 = G__10285__1;
G__10285.cljs$core$IFn$_invoke$arity$2 = G__10285__2;
return G__10285;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__10283,seen__$1){
while(true){
var vec__10284 = p__10283;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10284,(0),null);
var xs__$1 = vec__10284;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__10286 = cljs.core.rest(s);
var G__10287 = seen__$1;
p__10283 = G__10286;
seen__$1 = G__10287;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__10288 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__10289 = cljs.core.next(s__$1);
ret = G__10288;
s__$1 = G__10289;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__10291 = x;
if(G__10291){
var bit__4433__auto__ = (G__10291.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4433__auto__) || (G__10291.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__10292 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__10293 = cljs.core.next(ks);
var G__10294 = cljs.core.next(vs);
map = G__10292;
ks = G__10293;
vs = G__10294;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__10305 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10305) : k.call(null,G__10305));
})() > (function (){var G__10306 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10306) : k.call(null,G__10306));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__10307__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10295_SHARP_,p2__10296_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10295_SHARP_,p2__10296_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10307 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10308__i = 0, G__10308__a = new Array(arguments.length -  3);
while (G__10308__i < G__10308__a.length) {G__10308__a[G__10308__i] = arguments[G__10308__i + 3]; ++G__10308__i;}
  more = new cljs.core.IndexedSeq(G__10308__a,0);
} 
return G__10307__delegate.call(this,k,x,y,more);};
G__10307.cljs$lang$maxFixedArity = 3;
G__10307.cljs$lang$applyTo = (function (arglist__10309){
var k = cljs.core.first(arglist__10309);
arglist__10309 = cljs.core.next(arglist__10309);
var x = cljs.core.first(arglist__10309);
arglist__10309 = cljs.core.next(arglist__10309);
var y = cljs.core.first(arglist__10309);
var more = cljs.core.rest(arglist__10309);
return G__10307__delegate(k,x,y,more);
});
G__10307.cljs$core$IFn$_invoke$arity$variadic = G__10307__delegate;
return G__10307;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__10310 = null;
if (arguments.length > 3) {
var G__10311__i = 0, G__10311__a = new Array(arguments.length -  3);
while (G__10311__i < G__10311__a.length) {G__10311__a[G__10311__i] = arguments[G__10311__i + 3]; ++G__10311__i;}
G__10310 = new cljs.core.IndexedSeq(G__10311__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__10322 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10322) : k.call(null,G__10322));
})() < (function (){var G__10323 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10323) : k.call(null,G__10323));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__10324__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10312_SHARP_,p2__10313_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10312_SHARP_,p2__10313_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__10324 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__10325__i = 0, G__10325__a = new Array(arguments.length -  3);
while (G__10325__i < G__10325__a.length) {G__10325__a[G__10325__i] = arguments[G__10325__i + 3]; ++G__10325__i;}
  more = new cljs.core.IndexedSeq(G__10325__a,0);
} 
return G__10324__delegate.call(this,k,x,y,more);};
G__10324.cljs$lang$maxFixedArity = 3;
G__10324.cljs$lang$applyTo = (function (arglist__10326){
var k = cljs.core.first(arglist__10326);
arglist__10326 = cljs.core.next(arglist__10326);
var x = cljs.core.first(arglist__10326);
arglist__10326 = cljs.core.next(arglist__10326);
var y = cljs.core.first(arglist__10326);
var more = cljs.core.rest(arglist__10326);
return G__10324__delegate(k,x,y,more);
});
G__10324.cljs$core$IFn$_invoke$arity$variadic = G__10324__delegate;
return G__10324;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__10327 = null;
if (arguments.length > 3) {
var G__10328__i = 0, G__10328__a = new Array(arguments.length -  3);
while (G__10328__i < G__10328__a.length) {G__10328__a[G__10328__i] = arguments[G__10328__i + 3]; ++G__10328__i;}
G__10327 = new cljs.core.IndexedSeq(G__10328__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__10327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__10345 = null;
var G__10345__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10345__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10340 = result;
var G__10341 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10340,G__10341) : rf.call(null,G__10340,G__10341));
})());
})());
var G__10342 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10342) : rf.call(null,G__10342));
});
var G__10345__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__10343 = result;
var G__10344 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10343,G__10344) : rf.call(null,G__10343,G__10344));
} else {
return result;
}
});
G__10345 = function(result,input){
switch(arguments.length){
case 0:
return G__10345__0.call(this);
case 1:
return G__10345__1.call(this,result);
case 2:
return G__10345__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10345.cljs$core$IFn$_invoke$arity$0 = G__10345__0;
G__10345.cljs$core$IFn$_invoke$arity$1 = G__10345__1;
G__10345.cljs$core$IFn$_invoke$arity$2 = G__10345__2;
return G__10345;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__10358 = null;
var G__10358__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10358__1 = (function (result){
var G__10353 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10353) : rf.call(null,G__10353));
});
var G__10358__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__10354 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10354) : pred.call(null,G__10354));
})())){
var G__10355 = result;
var G__10356 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10355,G__10356) : rf.call(null,G__10355,G__10356));
} else {
return cljs.core.reduced(result);
}
});
G__10358 = function(result,input){
switch(arguments.length){
case 0:
return G__10358__0.call(this);
case 1:
return G__10358__1.call(this,result);
case 2:
return G__10358__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10358.cljs$core$IFn$_invoke$arity$0 = G__10358__0;
G__10358.cljs$core$IFn$_invoke$arity$1 = G__10358__1;
G__10358.cljs$core$IFn$_invoke$arity$2 = G__10358__2;
return G__10358;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__10357 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10357) : pred.call(null,G__10357));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__10363 = (function (){var G__10365 = cljs.core._entry_key(sc,e);
var G__10366 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10365,G__10366) : comp.call(null,G__10365,G__10366));
})();
var G__10364 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10363,G__10364) : test.call(null,G__10363,G__10364));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10370 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10370,(0),null);
var s = vec__10370;
if(cljs.core.truth_((function (){var G__10371 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10371) : include.call(null,G__10371));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10372 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10372,(0),null);
var s = vec__10372;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10376 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10376,(0),null);
var s = vec__10376;
if(cljs.core.truth_((function (){var G__10377 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10377) : include.call(null,G__10377));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__10378 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10378,(0),null);
var s = vec__10378;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__10379 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10379) : Math.ceil.call(null,G__10379));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__10380 = ret;
var G__10381 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10380,G__10381) : f.call(null,G__10380,G__10381));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__10382 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10382) : cljs.core.deref.call(null,G__10382));
} else {
var G__10383 = (i + self__.step);
var G__10384 = ret__$1;
i = G__10383;
ret = G__10384;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__10402 = null;
var G__10402__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10402__1 = (function (result){
var G__10399 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10399) : rf.call(null,G__10399));
});
var G__10402__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__10400 = result;
var G__10401 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10400,G__10401) : rf.call(null,G__10400,G__10401));
} else {
return result;
}
});
G__10402 = function(result,input){
switch(arguments.length){
case 0:
return G__10402__0.call(this);
case 1:
return G__10402__1.call(this,result);
case 2:
return G__10402__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10402.cljs$core$IFn$_invoke$arity$0 = G__10402__0;
G__10402.cljs$core$IFn$_invoke$arity$1 = G__10402__1;
G__10402.cljs$core$IFn$_invoke$arity$2 = G__10402__2;
return G__10402;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__10424 = null;
var G__10424__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10424__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__10415 = result;
var G__10416 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10415,G__10416) : rf.call(null,G__10415,G__10416));
})());
})());
var G__10417 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10417) : rf.call(null,G__10417));
});
var G__10424__2 = (function (result,input){
var pval = (function (){var G__10418 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10418) : cljs.core.deref.call(null,G__10418));
})();
var val = (function (){var G__10419 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10419) : f.call(null,G__10419));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__10420 = result;
var G__10421 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10420,G__10421) : rf.call(null,G__10420,G__10421));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__10424 = function(result,input){
switch(arguments.length){
case 0:
return G__10424__0.call(this);
case 1:
return G__10424__1.call(this,result);
case 2:
return G__10424__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10424.cljs$core$IFn$_invoke$arity$0 = G__10424__0;
G__10424.cljs$core$IFn$_invoke$arity$1 = G__10424__1;
G__10424.cljs$core$IFn$_invoke$arity$2 = G__10424__2;
return G__10424;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__10422 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10422) : f.call(null,G__10422));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__10403_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__10423 = p1__10403_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10423) : f.call(null,G__10423));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10433 = init;
var G__10434 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10433,G__10434) : f.call(null,G__10433,G__10434));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__10529 = null;
var G__10529__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__10529__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10487 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10487) : f.call(null,G__10487));
})()],null));
});
var G__10529__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10488 = x;
var G__10489 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10488,G__10489) : f.call(null,G__10488,G__10489));
})()],null));
});
var G__10529__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10490 = x;
var G__10491 = y;
var G__10492 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10490,G__10491,G__10492) : f.call(null,G__10490,G__10491,G__10492));
})()],null));
});
var G__10529__4 = (function() { 
var G__10530__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__10530 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10531__i = 0, G__10531__a = new Array(arguments.length -  3);
while (G__10531__i < G__10531__a.length) {G__10531__a[G__10531__i] = arguments[G__10531__i + 3]; ++G__10531__i;}
  args = new cljs.core.IndexedSeq(G__10531__a,0);
} 
return G__10530__delegate.call(this,x,y,z,args);};
G__10530.cljs$lang$maxFixedArity = 3;
G__10530.cljs$lang$applyTo = (function (arglist__10532){
var x = cljs.core.first(arglist__10532);
arglist__10532 = cljs.core.next(arglist__10532);
var y = cljs.core.first(arglist__10532);
arglist__10532 = cljs.core.next(arglist__10532);
var z = cljs.core.first(arglist__10532);
var args = cljs.core.rest(arglist__10532);
return G__10530__delegate(x,y,z,args);
});
G__10530.cljs$core$IFn$_invoke$arity$variadic = G__10530__delegate;
return G__10530;
})()
;
G__10529 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10529__0.call(this);
case 1:
return G__10529__1.call(this,x);
case 2:
return G__10529__2.call(this,x,y);
case 3:
return G__10529__3.call(this,x,y,z);
default:
var G__10533 = null;
if (arguments.length > 3) {
var G__10534__i = 0, G__10534__a = new Array(arguments.length -  3);
while (G__10534__i < G__10534__a.length) {G__10534__a[G__10534__i] = arguments[G__10534__i + 3]; ++G__10534__i;}
G__10533 = new cljs.core.IndexedSeq(G__10534__a,0);
}
return G__10529__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10529.cljs$lang$maxFixedArity = 3;
G__10529.cljs$lang$applyTo = G__10529__4.cljs$lang$applyTo;
G__10529.cljs$core$IFn$_invoke$arity$0 = G__10529__0;
G__10529.cljs$core$IFn$_invoke$arity$1 = G__10529__1;
G__10529.cljs$core$IFn$_invoke$arity$2 = G__10529__2;
G__10529.cljs$core$IFn$_invoke$arity$3 = G__10529__3;
G__10529.cljs$core$IFn$_invoke$arity$variadic = G__10529__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10529;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__10535 = null;
var G__10535__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__10535__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10493 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10493) : f.call(null,G__10493));
})(),(function (){var G__10494 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10494) : g.call(null,G__10494));
})()],null));
});
var G__10535__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10495 = x;
var G__10496 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10495,G__10496) : f.call(null,G__10495,G__10496));
})(),(function (){var G__10497 = x;
var G__10498 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10497,G__10498) : g.call(null,G__10497,G__10498));
})()],null));
});
var G__10535__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10499 = x;
var G__10500 = y;
var G__10501 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10499,G__10500,G__10501) : f.call(null,G__10499,G__10500,G__10501));
})(),(function (){var G__10502 = x;
var G__10503 = y;
var G__10504 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10502,G__10503,G__10504) : g.call(null,G__10502,G__10503,G__10504));
})()],null));
});
var G__10535__4 = (function() { 
var G__10536__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__10536 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10537__i = 0, G__10537__a = new Array(arguments.length -  3);
while (G__10537__i < G__10537__a.length) {G__10537__a[G__10537__i] = arguments[G__10537__i + 3]; ++G__10537__i;}
  args = new cljs.core.IndexedSeq(G__10537__a,0);
} 
return G__10536__delegate.call(this,x,y,z,args);};
G__10536.cljs$lang$maxFixedArity = 3;
G__10536.cljs$lang$applyTo = (function (arglist__10538){
var x = cljs.core.first(arglist__10538);
arglist__10538 = cljs.core.next(arglist__10538);
var y = cljs.core.first(arglist__10538);
arglist__10538 = cljs.core.next(arglist__10538);
var z = cljs.core.first(arglist__10538);
var args = cljs.core.rest(arglist__10538);
return G__10536__delegate(x,y,z,args);
});
G__10536.cljs$core$IFn$_invoke$arity$variadic = G__10536__delegate;
return G__10536;
})()
;
G__10535 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10535__0.call(this);
case 1:
return G__10535__1.call(this,x);
case 2:
return G__10535__2.call(this,x,y);
case 3:
return G__10535__3.call(this,x,y,z);
default:
var G__10539 = null;
if (arguments.length > 3) {
var G__10540__i = 0, G__10540__a = new Array(arguments.length -  3);
while (G__10540__i < G__10540__a.length) {G__10540__a[G__10540__i] = arguments[G__10540__i + 3]; ++G__10540__i;}
G__10539 = new cljs.core.IndexedSeq(G__10540__a,0);
}
return G__10535__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10535.cljs$lang$maxFixedArity = 3;
G__10535.cljs$lang$applyTo = G__10535__4.cljs$lang$applyTo;
G__10535.cljs$core$IFn$_invoke$arity$0 = G__10535__0;
G__10535.cljs$core$IFn$_invoke$arity$1 = G__10535__1;
G__10535.cljs$core$IFn$_invoke$arity$2 = G__10535__2;
G__10535.cljs$core$IFn$_invoke$arity$3 = G__10535__3;
G__10535.cljs$core$IFn$_invoke$arity$variadic = G__10535__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10535;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__10541 = null;
var G__10541__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__10541__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10505 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10505) : f.call(null,G__10505));
})(),(function (){var G__10506 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10506) : g.call(null,G__10506));
})(),(function (){var G__10507 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10507) : h.call(null,G__10507));
})()],null));
});
var G__10541__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10508 = x;
var G__10509 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10508,G__10509) : f.call(null,G__10508,G__10509));
})(),(function (){var G__10510 = x;
var G__10511 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10510,G__10511) : g.call(null,G__10510,G__10511));
})(),(function (){var G__10512 = x;
var G__10513 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10512,G__10513) : h.call(null,G__10512,G__10513));
})()],null));
});
var G__10541__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__10514 = x;
var G__10515 = y;
var G__10516 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10514,G__10515,G__10516) : f.call(null,G__10514,G__10515,G__10516));
})(),(function (){var G__10517 = x;
var G__10518 = y;
var G__10519 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10517,G__10518,G__10519) : g.call(null,G__10517,G__10518,G__10519));
})(),(function (){var G__10520 = x;
var G__10521 = y;
var G__10522 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10520,G__10521,G__10522) : h.call(null,G__10520,G__10521,G__10522));
})()],null));
});
var G__10541__4 = (function() { 
var G__10542__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__10542 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10543__i = 0, G__10543__a = new Array(arguments.length -  3);
while (G__10543__i < G__10543__a.length) {G__10543__a[G__10543__i] = arguments[G__10543__i + 3]; ++G__10543__i;}
  args = new cljs.core.IndexedSeq(G__10543__a,0);
} 
return G__10542__delegate.call(this,x,y,z,args);};
G__10542.cljs$lang$maxFixedArity = 3;
G__10542.cljs$lang$applyTo = (function (arglist__10544){
var x = cljs.core.first(arglist__10544);
arglist__10544 = cljs.core.next(arglist__10544);
var y = cljs.core.first(arglist__10544);
arglist__10544 = cljs.core.next(arglist__10544);
var z = cljs.core.first(arglist__10544);
var args = cljs.core.rest(arglist__10544);
return G__10542__delegate(x,y,z,args);
});
G__10542.cljs$core$IFn$_invoke$arity$variadic = G__10542__delegate;
return G__10542;
})()
;
G__10541 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10541__0.call(this);
case 1:
return G__10541__1.call(this,x);
case 2:
return G__10541__2.call(this,x,y);
case 3:
return G__10541__3.call(this,x,y,z);
default:
var G__10545 = null;
if (arguments.length > 3) {
var G__10546__i = 0, G__10546__a = new Array(arguments.length -  3);
while (G__10546__i < G__10546__a.length) {G__10546__a[G__10546__i] = arguments[G__10546__i + 3]; ++G__10546__i;}
G__10545 = new cljs.core.IndexedSeq(G__10546__a,0);
}
return G__10541__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10545);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10541.cljs$lang$maxFixedArity = 3;
G__10541.cljs$lang$applyTo = G__10541__4.cljs$lang$applyTo;
G__10541.cljs$core$IFn$_invoke$arity$0 = G__10541__0;
G__10541.cljs$core$IFn$_invoke$arity$1 = G__10541__1;
G__10541.cljs$core$IFn$_invoke$arity$2 = G__10541__2;
G__10541.cljs$core$IFn$_invoke$arity$3 = G__10541__3;
G__10541.cljs$core$IFn$_invoke$arity$variadic = G__10541__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10541;
})()
});
var juxt__4 = (function() { 
var G__10547__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__10548 = null;
var G__10548__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10435_SHARP_,p2__10436_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10435_SHARP_,(function (){return (p2__10436_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10436_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10436_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10548__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10437_SHARP_,p2__10438_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10437_SHARP_,(function (){var G__10523 = x;
return (p2__10438_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10438_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10523) : p2__10438_SHARP_.call(null,G__10523));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10548__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10439_SHARP_,p2__10440_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10439_SHARP_,(function (){var G__10524 = x;
var G__10525 = y;
return (p2__10440_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10440_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10524,G__10525) : p2__10440_SHARP_.call(null,G__10524,G__10525));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10548__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10441_SHARP_,p2__10442_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10441_SHARP_,(function (){var G__10526 = x;
var G__10527 = y;
var G__10528 = z;
return (p2__10442_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10442_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10526,G__10527,G__10528) : p2__10442_SHARP_.call(null,G__10526,G__10527,G__10528));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__10548__4 = (function() { 
var G__10549__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__10443_SHARP_,p2__10444_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10443_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10444_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__10549 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__10550__i = 0, G__10550__a = new Array(arguments.length -  3);
while (G__10550__i < G__10550__a.length) {G__10550__a[G__10550__i] = arguments[G__10550__i + 3]; ++G__10550__i;}
  args = new cljs.core.IndexedSeq(G__10550__a,0);
} 
return G__10549__delegate.call(this,x,y,z,args);};
G__10549.cljs$lang$maxFixedArity = 3;
G__10549.cljs$lang$applyTo = (function (arglist__10551){
var x = cljs.core.first(arglist__10551);
arglist__10551 = cljs.core.next(arglist__10551);
var y = cljs.core.first(arglist__10551);
arglist__10551 = cljs.core.next(arglist__10551);
var z = cljs.core.first(arglist__10551);
var args = cljs.core.rest(arglist__10551);
return G__10549__delegate(x,y,z,args);
});
G__10549.cljs$core$IFn$_invoke$arity$variadic = G__10549__delegate;
return G__10549;
})()
;
G__10548 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__10548__0.call(this);
case 1:
return G__10548__1.call(this,x);
case 2:
return G__10548__2.call(this,x,y);
case 3:
return G__10548__3.call(this,x,y,z);
default:
var G__10552 = null;
if (arguments.length > 3) {
var G__10553__i = 0, G__10553__a = new Array(arguments.length -  3);
while (G__10553__i < G__10553__a.length) {G__10553__a[G__10553__i] = arguments[G__10553__i + 3]; ++G__10553__i;}
G__10552 = new cljs.core.IndexedSeq(G__10553__a,0);
}
return G__10548__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__10552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10548.cljs$lang$maxFixedArity = 3;
G__10548.cljs$lang$applyTo = G__10548__4.cljs$lang$applyTo;
G__10548.cljs$core$IFn$_invoke$arity$0 = G__10548__0;
G__10548.cljs$core$IFn$_invoke$arity$1 = G__10548__1;
G__10548.cljs$core$IFn$_invoke$arity$2 = G__10548__2;
G__10548.cljs$core$IFn$_invoke$arity$3 = G__10548__3;
G__10548.cljs$core$IFn$_invoke$arity$variadic = G__10548__4.cljs$core$IFn$_invoke$arity$variadic;
return G__10548;
})()
;})(fs__$1))
};
var G__10547 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__10554__i = 0, G__10554__a = new Array(arguments.length -  3);
while (G__10554__i < G__10554__a.length) {G__10554__a[G__10554__i] = arguments[G__10554__i + 3]; ++G__10554__i;}
  fs = new cljs.core.IndexedSeq(G__10554__a,0);
} 
return G__10547__delegate.call(this,f,g,h,fs);};
G__10547.cljs$lang$maxFixedArity = 3;
G__10547.cljs$lang$applyTo = (function (arglist__10555){
var f = cljs.core.first(arglist__10555);
arglist__10555 = cljs.core.next(arglist__10555);
var g = cljs.core.first(arglist__10555);
arglist__10555 = cljs.core.next(arglist__10555);
var h = cljs.core.first(arglist__10555);
var fs = cljs.core.rest(arglist__10555);
return G__10547__delegate(f,g,h,fs);
});
G__10547.cljs$core$IFn$_invoke$arity$variadic = G__10547__delegate;
return G__10547;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__10556 = null;
if (arguments.length > 3) {
var G__10557__i = 0, G__10557__a = new Array(arguments.length -  3);
while (G__10557__i < G__10557__a.length) {G__10557__a[G__10557__i] = arguments[G__10557__i + 3]; ++G__10557__i;}
G__10556 = new cljs.core.IndexedSeq(G__10557__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__10556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__10558 = cljs.core.next(coll);
coll = G__10558;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__10559 = (n - (1));
var G__10560 = cljs.core.next(coll);
n = G__10559;
coll = G__10560;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__10564 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10564,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10564,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10564,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_10572 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__10573_10579 = cljs.core.first(coll);
var G__10574_10580 = writer;
var G__10575_10581 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10573_10579,G__10574_10580,G__10575_10581) : print_one.call(null,G__10573_10579,G__10574_10580,G__10575_10581));
} else {
}

var coll_10582__$1 = cljs.core.next(coll);
var n_10583 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_10582__$1) && (((n_10583 == null)) || (!((n_10583 === (0)))))){
cljs.core._write(writer,sep);

var G__10576_10584 = cljs.core.first(coll_10582__$1);
var G__10577_10585 = writer;
var G__10578_10586 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10576_10584,G__10577_10585,G__10578_10586) : print_one.call(null,G__10576_10584,G__10577_10585,G__10578_10586));

var G__10587 = cljs.core.next(coll_10582__$1);
var G__10588 = (n_10583 - (1));
coll_10582__$1 = G__10587;
n_10583 = G__10588;
continue;
} else {
if((cljs.core.seq(coll_10582__$1)) && ((n_10583 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10572;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__10593 = cljs.core.seq(ss);
var chunk__10594 = null;
var count__10595 = (0);
var i__10596 = (0);
while(true){
if((i__10596 < count__10595)){
var s = chunk__10594.cljs$core$IIndexed$_nth$arity$2(null,i__10596);
cljs.core._write(writer,s);

var G__10597 = seq__10593;
var G__10598 = chunk__10594;
var G__10599 = count__10595;
var G__10600 = (i__10596 + (1));
seq__10593 = G__10597;
chunk__10594 = G__10598;
count__10595 = G__10599;
i__10596 = G__10600;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10593);
if(temp__4126__auto__){
var seq__10593__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10593__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__10593__$1);
var G__10601 = cljs.core.chunk_rest(seq__10593__$1);
var G__10602 = c__4546__auto__;
var G__10603 = cljs.core.count(c__4546__auto__);
var G__10604 = (0);
seq__10593 = G__10601;
chunk__10594 = G__10602;
count__10595 = G__10603;
i__10596 = G__10604;
continue;
} else {
var s = cljs.core.first(seq__10593__$1);
cljs.core._write(writer,s);

var G__10605 = cljs.core.next(seq__10593__$1);
var G__10606 = null;
var G__10607 = (0);
var G__10608 = (0);
seq__10593 = G__10605;
chunk__10594 = G__10606;
count__10595 = G__10607;
i__10596 = G__10608;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__10609__i = 0, G__10609__a = new Array(arguments.length -  1);
while (G__10609__i < G__10609__a.length) {G__10609__a[G__10609__i] = arguments[G__10609__i + 1]; ++G__10609__i;}
  ss = new cljs.core.IndexedSeq(G__10609__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__10610){
var writer = cljs.core.first(arglist__10610);
var ss = cljs.core.rest(arglist__10610);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj10612 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj10612;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__10615 = "[\\\\\"\b\f\n\r\t]";
var G__10616 = "g";
return RegExp(G__10615,G__10616);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__10630 = obj;
if(G__10630){
var bit__4440__auto__ = (G__10630.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4440__auto__) || (G__10630.cljs$core$IMeta$)){
return true;
} else {
if((!G__10630.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10630);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__10630);
}
})();
if(and__3747__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__10631 = obj;
if(G__10631){
var bit__4433__auto__ = (G__10631.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4433__auto__) || (G__10631.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__10632 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__10633 = pr_writer;
var G__10634 = writer;
var G__10635 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10632,G__10633,G__10634,G__10635) : cljs.core.print_map.call(null,G__10632,G__10633,G__10634,G__10635));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__10636 = obj;
return goog.isString(G__10636);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__10638 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__10638;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__10637 = obj;
if(G__10637){
var bit__4440__auto__ = (G__10637.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4440__auto__) || (G__10637.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__10637.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10637);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__10637);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__10643 = cljs.core.seq(cljs.core.next(objs));
var chunk__10644 = null;
var count__10645 = (0);
var i__10646 = (0);
while(true){
if((i__10646 < count__10645)){
var obj = chunk__10644.cljs$core$IIndexed$_nth$arity$2(null,i__10646);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10647 = seq__10643;
var G__10648 = chunk__10644;
var G__10649 = count__10645;
var G__10650 = (i__10646 + (1));
seq__10643 = G__10647;
chunk__10644 = G__10648;
count__10645 = G__10649;
i__10646 = G__10650;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__10643);
if(temp__4126__auto__){
var seq__10643__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__10643__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__10643__$1);
var G__10651 = cljs.core.chunk_rest(seq__10643__$1);
var G__10652 = c__4546__auto__;
var G__10653 = cljs.core.count(c__4546__auto__);
var G__10654 = (0);
seq__10643 = G__10651;
chunk__10644 = G__10652;
count__10645 = G__10653;
i__10646 = G__10654;
continue;
} else {
var obj = cljs.core.first(seq__10643__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__10655 = cljs.core.next(seq__10643__$1);
var G__10656 = null;
var G__10657 = (0);
var G__10658 = (0);
seq__10643 = G__10655;
chunk__10644 = G__10656;
count__10645 = G__10657;
i__10646 = G__10658;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10659__i = 0, G__10659__a = new Array(arguments.length -  0);
while (G__10659__i < G__10659__a.length) {G__10659__a[G__10659__i] = arguments[G__10659__i + 0]; ++G__10659__i;}
  objs = new cljs.core.IndexedSeq(G__10659__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__10660){
var objs = cljs.core.seq(arglist__10660);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10661__i = 0, G__10661__a = new Array(arguments.length -  0);
while (G__10661__i < G__10661__a.length) {G__10661__a[G__10661__i] = arguments[G__10661__i + 0]; ++G__10661__i;}
  objs = new cljs.core.IndexedSeq(G__10661__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__10662){
var objs = cljs.core.seq(arglist__10662);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10663__i = 0, G__10663__a = new Array(arguments.length -  0);
while (G__10663__i < G__10663__a.length) {G__10663__a[G__10663__i] = arguments[G__10663__i + 0]; ++G__10663__i;}
  objs = new cljs.core.IndexedSeq(G__10663__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__10664){
var objs = cljs.core.seq(arglist__10664);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10665__i = 0, G__10665__a = new Array(arguments.length -  0);
while (G__10665__i < G__10665__a.length) {G__10665__a[G__10665__i] = arguments[G__10665__i + 0]; ++G__10665__i;}
  objs = new cljs.core.IndexedSeq(G__10665__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__10666){
var objs = cljs.core.seq(arglist__10666);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10667__i = 0, G__10667__a = new Array(arguments.length -  0);
while (G__10667__i < G__10667__a.length) {G__10667__a[G__10667__i] = arguments[G__10667__i + 0]; ++G__10667__i;}
  objs = new cljs.core.IndexedSeq(G__10667__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__10668){
var objs = cljs.core.seq(arglist__10668);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10669__i = 0, G__10669__a = new Array(arguments.length -  0);
while (G__10669__i < G__10669__a.length) {G__10669__a[G__10669__i] = arguments[G__10669__i + 0]; ++G__10669__i;}
  objs = new cljs.core.IndexedSeq(G__10669__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__10670){
var objs = cljs.core.seq(arglist__10670);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10671__i = 0, G__10671__a = new Array(arguments.length -  0);
while (G__10671__i < G__10671__a.length) {G__10671__a[G__10671__i] = arguments[G__10671__i + 0]; ++G__10671__i;}
  objs = new cljs.core.IndexedSeq(G__10671__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__10672){
var objs = cljs.core.seq(arglist__10672);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__10673__i = 0, G__10673__a = new Array(arguments.length -  0);
while (G__10673__i < G__10673__a.length) {G__10673__a[G__10673__i] = arguments[G__10673__i + 0]; ++G__10673__i;}
  objs = new cljs.core.IndexedSeq(G__10673__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__10674){
var objs = cljs.core.seq(arglist__10674);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__10681_10687 = cljs.core.key(e);
var G__10682_10688 = w;
var G__10683_10689 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10681_10687,G__10682_10688,G__10683_10689) : print_one.call(null,G__10681_10687,G__10682_10688,G__10683_10689));

cljs.core._write(w," ");

var G__10684 = cljs.core.val(e);
var G__10685 = w;
var G__10686 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10684,G__10685,G__10686) : print_one.call(null,G__10684,G__10685,G__10686));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__10690__i = 0, G__10690__a = new Array(arguments.length -  2);
while (G__10690__i < G__10690__a.length) {G__10690__a[G__10690__i] = arguments[G__10690__i + 2]; ++G__10690__i;}
  args = new cljs.core.IndexedSeq(G__10690__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__10691){
var iref = cljs.core.first(arglist__10691);
arglist__10691 = cljs.core.next(arglist__10691);
var f = cljs.core.first(arglist__10691);
var args = cljs.core.rest(arglist__10691);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__10694 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10694) : cljs.core.atom.call(null,G__10694));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__10696 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10696) : cljs.core.deref.call(null,G__10696));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__10697_SHARP_,p2__10698_SHARP_){
var ret = (function (){var G__10701 = p1__10697_SHARP_;
var G__10702 = p2__10698_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10701,G__10702) : rf.call(null,G__10701,G__10702));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__10705 = null;
var G__10705__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10705__1 = (function (result){
var G__10704 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10704) : rf.call(null,G__10704));
});
var G__10705__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__10705 = function(result,input){
switch(arguments.length){
case 0:
return G__10705__0.call(this);
case 1:
return G__10705__1.call(this,result);
case 2:
return G__10705__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10705.cljs$core$IFn$_invoke$arity$0 = G__10705__0;
G__10705.cljs$core$IFn$_invoke$arity$1 = G__10705__1;
G__10705.cljs$core$IFn$_invoke$arity$2 = G__10705__2;
return G__10705;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__10714 = null;
var G__10714__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__10714__1 = (function (result){
var G__10710 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10710) : rf.call(null,G__10710));
});
var G__10714__2 = (function (result,input){
var prior = (function (){var G__10711 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10711) : cljs.core.deref.call(null,G__10711));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__10712 = result;
var G__10713 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10712,G__10713) : rf.call(null,G__10712,G__10713));
}
});
G__10714 = function(result,input){
switch(arguments.length){
case 0:
return G__10714__0.call(this);
case 1:
return G__10714__1.call(this,result);
case 2:
return G__10714__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10714.cljs$core$IFn$_invoke$arity$0 = G__10714__0;
G__10714.cljs$core$IFn$_invoke$arity$1 = G__10714__1;
G__10714.cljs$core$IFn$_invoke$arity$2 = G__10714__2;
return G__10714;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10716_SHARP_,p2__10715_SHARP_){
var G__10718 = p2__10715_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10718) : proc.call(null,G__10718));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj10720 = {};
return obj10720;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._clj__GT_js[(function (){var G__10724 = x__4403__auto__;
return goog.typeOf(G__10724);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._key__GT_js[(function (){var G__10728 = x__4403__auto__;
return goog.typeOf(G__10728);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__10731 = k;
if(G__10731){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__10731.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10731.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10731);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10731);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__10732 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10732) : cljs.core.clj__GT_js.call(null,G__10732));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__10748 = x;
if(G__10748){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__10748.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__10748.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10748);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__10748);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj10750 = {};
return obj10750;
})();
var seq__10751_10761 = cljs.core.seq(x);
var chunk__10752_10762 = null;
var count__10753_10763 = (0);
var i__10754_10764 = (0);
while(true){
if((i__10754_10764 < count__10753_10763)){
var vec__10755_10765 = chunk__10752_10762.cljs$core$IIndexed$_nth$arity$2(null,i__10754_10764);
var k_10766 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10755_10765,(0),null);
var v_10767 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10755_10765,(1),null);
(m[cljs.core.key__GT_js(k_10766)] = clj__GT_js(v_10767));

var G__10768 = seq__10751_10761;
var G__10769 = chunk__10752_10762;
var G__10770 = count__10753_10763;
var G__10771 = (i__10754_10764 + (1));
seq__10751_10761 = G__10768;
chunk__10752_10762 = G__10769;
count__10753_10763 = G__10770;
i__10754_10764 = G__10771;
continue;
} else {
var temp__4126__auto___10772 = cljs.core.seq(seq__10751_10761);
if(temp__4126__auto___10772){
var seq__10751_10773__$1 = temp__4126__auto___10772;
if(cljs.core.chunked_seq_QMARK_(seq__10751_10773__$1)){
var c__4546__auto___10774 = cljs.core.chunk_first(seq__10751_10773__$1);
var G__10775 = cljs.core.chunk_rest(seq__10751_10773__$1);
var G__10776 = c__4546__auto___10774;
var G__10777 = cljs.core.count(c__4546__auto___10774);
var G__10778 = (0);
seq__10751_10761 = G__10775;
chunk__10752_10762 = G__10776;
count__10753_10763 = G__10777;
i__10754_10764 = G__10778;
continue;
} else {
var vec__10756_10779 = cljs.core.first(seq__10751_10773__$1);
var k_10780 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10756_10779,(0),null);
var v_10781 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10756_10779,(1),null);
(m[cljs.core.key__GT_js(k_10780)] = clj__GT_js(v_10781));

var G__10782 = cljs.core.next(seq__10751_10773__$1);
var G__10783 = null;
var G__10784 = (0);
var G__10785 = (0);
seq__10751_10761 = G__10782;
chunk__10752_10762 = G__10783;
count__10753_10763 = G__10784;
i__10754_10764 = G__10785;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__10757_10786 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__10758_10787 = null;
var count__10759_10788 = (0);
var i__10760_10789 = (0);
while(true){
if((i__10760_10789 < count__10759_10788)){
var x_10790__$1 = chunk__10758_10787.cljs$core$IIndexed$_nth$arity$2(null,i__10760_10789);
arr.push(x_10790__$1);

var G__10791 = seq__10757_10786;
var G__10792 = chunk__10758_10787;
var G__10793 = count__10759_10788;
var G__10794 = (i__10760_10789 + (1));
seq__10757_10786 = G__10791;
chunk__10758_10787 = G__10792;
count__10759_10788 = G__10793;
i__10760_10789 = G__10794;
continue;
} else {
var temp__4126__auto___10795 = cljs.core.seq(seq__10757_10786);
if(temp__4126__auto___10795){
var seq__10757_10796__$1 = temp__4126__auto___10795;
if(cljs.core.chunked_seq_QMARK_(seq__10757_10796__$1)){
var c__4546__auto___10797 = cljs.core.chunk_first(seq__10757_10796__$1);
var G__10798 = cljs.core.chunk_rest(seq__10757_10796__$1);
var G__10799 = c__4546__auto___10797;
var G__10800 = cljs.core.count(c__4546__auto___10797);
var G__10801 = (0);
seq__10757_10786 = G__10798;
chunk__10758_10787 = G__10799;
count__10759_10788 = G__10800;
i__10760_10789 = G__10801;
continue;
} else {
var x_10802__$1 = cljs.core.first(seq__10757_10796__$1);
arr.push(x_10802__$1);

var G__10803 = cljs.core.next(seq__10757_10796__$1);
var G__10804 = null;
var G__10805 = (0);
var G__10806 = (0);
seq__10757_10786 = G__10803;
chunk__10758_10787 = G__10804;
count__10759_10788 = G__10805;
i__10760_10789 = G__10806;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj10808 = {};
return obj10808;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._js__GT_clj[(function (){var G__10812 = x__4403__auto__;
return goog.typeOf(G__10812);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__10869__delegate = function (x,opts){
var map__10842 = opts;
var map__10842__$1 = ((cljs.core.seq_QMARK_(map__10842))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__10842):map__10842);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10842__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__10842,map__10842__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__10858 = x__$1;
if(G__10858){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__10858.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__10858.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10858);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__10858);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4515__auto__ = ((function (map__10842,map__10842__$1,keywordize_keys,keyfn){
return (function iter__10859(s__10860){
return (new cljs.core.LazySeq(null,((function (map__10842,map__10842__$1,keywordize_keys,keyfn){
return (function (){
var s__10860__$1 = s__10860;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__10860__$1);
if(temp__4126__auto__){
var s__10860__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__10860__$2)){
var c__4513__auto__ = cljs.core.chunk_first(s__10860__$2);
var size__4514__auto__ = cljs.core.count(c__4513__auto__);
var b__10862 = cljs.core.chunk_buffer(size__4514__auto__);
if((function (){var i__10861 = (0);
while(true){
if((i__10861 < size__4514__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4513__auto__,i__10861);
cljs.core.chunk_append(b__10862,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10867 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10867) : keyfn.call(null,G__10867));
})(),thisfn((x__$1[k]))], null));

var G__10870 = (i__10861 + (1));
i__10861 = G__10870;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__10862),iter__10859(cljs.core.chunk_rest(s__10860__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__10862),null);
}
} else {
var k = cljs.core.first(s__10860__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__10868 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10868) : keyfn.call(null,G__10868));
})(),thisfn((x__$1[k]))], null),iter__10859(cljs.core.rest(s__10860__$2)));
}
} else {
return null;
}
break;
}
});})(map__10842,map__10842__$1,keywordize_keys,keyfn))
,null,null));
});})(map__10842,map__10842__$1,keywordize_keys,keyfn))
;
return iter__4515__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__10842,map__10842__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__10869 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__10871__i = 0, G__10871__a = new Array(arguments.length -  1);
while (G__10871__i < G__10871__a.length) {G__10871__a[G__10871__i] = arguments[G__10871__i + 1]; ++G__10871__i;}
  opts = new cljs.core.IndexedSeq(G__10871__a,0);
} 
return G__10869__delegate.call(this,x,opts);};
G__10869.cljs$lang$maxFixedArity = 1;
G__10869.cljs$lang$applyTo = (function (arglist__10872){
var x = cljs.core.first(arglist__10872);
var opts = cljs.core.rest(arglist__10872);
return G__10869__delegate(x,opts);
});
G__10869.cljs$core$IFn$_invoke$arity$variadic = G__10869__delegate;
return G__10869;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__10873 = null;
if (arguments.length > 1) {
var G__10874__i = 0, G__10874__a = new Array(arguments.length -  1);
while (G__10874__i < G__10874__a.length) {G__10874__a[G__10874__i] = arguments[G__10874__i + 1]; ++G__10874__i;}
G__10873 = new cljs.core.IndexedSeq(G__10874__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__10873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__10877 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10877) : cljs.core.atom.call(null,G__10877));
})();
return ((function (mem){
return (function() { 
var G__10879__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__10878 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10878) : cljs.core.deref.call(null,G__10878));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__10879 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__10880__i = 0, G__10880__a = new Array(arguments.length -  0);
while (G__10880__i < G__10880__a.length) {G__10880__a[G__10880__i] = arguments[G__10880__i + 0]; ++G__10880__i;}
  args = new cljs.core.IndexedSeq(G__10880__a,0);
} 
return G__10879__delegate.call(this,args);};
G__10879.cljs$lang$maxFixedArity = 0;
G__10879.cljs$lang$applyTo = (function (arglist__10881){
var args = cljs.core.seq(arglist__10881);
return G__10879__delegate(args);
});
G__10879.cljs$core$IFn$_invoke$arity$variadic = G__10879__delegate;
return G__10879;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__10883 = ret;
f = G__10883;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__10884__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__10884 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10885__i = 0, G__10885__a = new Array(arguments.length -  1);
while (G__10885__i < G__10885__a.length) {G__10885__a[G__10885__i] = arguments[G__10885__i + 1]; ++G__10885__i;}
  args = new cljs.core.IndexedSeq(G__10885__a,0);
} 
return G__10884__delegate.call(this,f,args);};
G__10884.cljs$lang$maxFixedArity = 1;
G__10884.cljs$lang$applyTo = (function (arglist__10886){
var f = cljs.core.first(arglist__10886);
var args = cljs.core.rest(arglist__10886);
return G__10884__delegate(f,args);
});
G__10884.cljs$core$IFn$_invoke$arity$variadic = G__10884__delegate;
return G__10884;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__10887 = null;
if (arguments.length > 1) {
var G__10888__i = 0, G__10888__a = new Array(arguments.length -  1);
while (G__10888__i < G__10888__a.length) {G__10888__a[G__10888__i] = arguments[G__10888__i + 1]; ++G__10888__i;}
G__10887 = new cljs.core.IndexedSeq(G__10888__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__10887);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__10891 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10891) : Math.floor.call(null,G__10891));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__10893 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10893) : f.call(null,G__10893));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__10895 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10895) : cljs.core.atom.call(null,G__10895));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__10896__i = 0, G__10896__a = new Array(arguments.length -  1);
while (G__10896__i < G__10896__a.length) {G__10896__a[G__10896__i] = arguments[G__10896__i + 1]; ++G__10896__i;}
  args = new cljs.core.IndexedSeq(G__10896__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__10897){
var f = cljs.core.first(arglist__10897);
var args = cljs.core.rest(arglist__10897);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__10962 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10962) : cljs.core.deref.call(null,G__10962));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3759__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
var and__3747__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3747__auto__){
var and__3747__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3747__auto____$1){
var and__3747__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3747__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__10987 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__10985 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10985) : child.call(null,G__10985));
})(),(function (){var G__10986 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10986) : parent.call(null,G__10986));
})());
var G__10988 = (i + (1));
ret = G__10987;
i = G__10988;
continue;
}
break;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__10992 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10992) : cljs.core.deref.call(null,G__10992));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__10996 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10996) : cljs.core.deref.call(null,G__10996));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__11000 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11000) : cljs.core.deref.call(null,G__11000));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__11009 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__11009) : targets.call(null,G__11009));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__11010 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__11010) : sources.call(null,G__11010));
})()));
});})(tp,td,ta))
;
var or__3759__auto__ = ((cljs.core.contains_QMARK_((function (){var G__11014 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__11014) : tp.call(null,G__11014));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__11015 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11015) : ta.call(null,G__11015));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__11016 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__11016) : ta.call(null,G__11016));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__11023 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11023) : parentMap.call(null,G__11023));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__11024 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11024) : parentMap.call(null,G__11024));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__11017_SHARP_){
return cljs.core.cons(cljs.core.first(p1__11017_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11017_SHARP_),cljs.core.second(p1__11017_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__11025 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__11025) : parentMap.call(null,G__11025));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__11018_SHARP_,p2__11019_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11018_SHARP_,p2__11019_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__11028 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11028) : cljs.core.deref.call(null,G__11028));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__11029 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11029) : cljs.core.deref.call(null,G__11029));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__11045 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11045) : cljs.core.deref.call(null,G__11045));
})().call(null,x);
var or__3759__auto__ = (cljs.core.truth_((function (){var and__3747__auto__ = xprefs;
if(cljs.core.truth_(and__3747__auto__)){
var G__11047 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__11047) : xprefs.call(null,G__11047));
} else {
return and__3747__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__11048 = cljs.core.rest(ps);
ps = G__11048;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__11049 = cljs.core.rest(ps);
ps = G__11049;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3759__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11063){
var vec__11064 = p__11063;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11064,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11064,(1),null);
var e = vec__11064;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__11065 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11065) : cljs.core.deref.call(null,G__11065));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3759__auto__ = (be == null);
if(or__3759__auto__){
return or__3759__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__11066 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11066) : cljs.core.deref.call(null,G__11066));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11067 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11067) : cljs.core.deref.call(null,G__11067));
})(),(function (){var G__11068 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11068) : cljs.core.deref.call(null,G__11068));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj11070 = {};
return obj11070;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._reset[(function (){var G__11074 = x__4403__auto__;
return goog.typeOf(G__11074);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reset["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._add_method[(function (){var G__11078 = x__4403__auto__;
return goog.typeOf(G__11078);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._add_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._remove_method[(function (){var G__11082 = x__4403__auto__;
return goog.typeOf(G__11082);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._prefer_method[(function (){var G__11086 = x__4403__auto__;
return goog.typeOf(G__11086);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._get_method[(function (){var G__11090 = x__4403__auto__;
return goog.typeOf(G__11090);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._get_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._methods[(function (){var G__11094 = x__4403__auto__;
return goog.typeOf(G__11094);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._methods["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._prefers[(function (){var G__11098 = x__4403__auto__;
return goog.typeOf(G__11098);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._prefers["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11100 = this$__$1;
return goog.getUid(G__11100);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__11101 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11101) : cljs.core.deref.call(null,G__11101));
})(),(function (){var G__11102 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11102) : cljs.core.deref.call(null,G__11102));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__11103 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11103) : cljs.core.deref.call(null,G__11103));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__11104 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11104) : cljs.core.deref.call(null,G__11104));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11105 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11105) : cljs.core.deref.call(null,G__11105));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__11106 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11106) : cljs.core.deref.call(null,G__11106));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__11947 = null;
var G__11947__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__11947__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11107 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11107) : self__.dispatch_fn.call(null,G__11107));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11108 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11108) : target_fn.call(null,G__11108));
});
var G__11947__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11109 = a;
var G__11110 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11109,G__11110) : self__.dispatch_fn.call(null,G__11109,G__11110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11111 = a;
var G__11112 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11111,G__11112) : target_fn.call(null,G__11111,G__11112));
});
var G__11947__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11113 = a;
var G__11114 = b;
var G__11115 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11113,G__11114,G__11115) : self__.dispatch_fn.call(null,G__11113,G__11114,G__11115));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11116 = a;
var G__11117 = b;
var G__11118 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11116,G__11117,G__11118) : target_fn.call(null,G__11116,G__11117,G__11118));
});
var G__11947__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11119 = a;
var G__11120 = b;
var G__11121 = c;
var G__11122 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11119,G__11120,G__11121,G__11122) : self__.dispatch_fn.call(null,G__11119,G__11120,G__11121,G__11122));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11123 = a;
var G__11124 = b;
var G__11125 = c;
var G__11126 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11123,G__11124,G__11125,G__11126) : target_fn.call(null,G__11123,G__11124,G__11125,G__11126));
});
var G__11947__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11127 = a;
var G__11128 = b;
var G__11129 = c;
var G__11130 = d;
var G__11131 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11127,G__11128,G__11129,G__11130,G__11131) : self__.dispatch_fn.call(null,G__11127,G__11128,G__11129,G__11130,G__11131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11132 = a;
var G__11133 = b;
var G__11134 = c;
var G__11135 = d;
var G__11136 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11132,G__11133,G__11134,G__11135,G__11136) : target_fn.call(null,G__11132,G__11133,G__11134,G__11135,G__11136));
});
var G__11947__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11137 = a;
var G__11138 = b;
var G__11139 = c;
var G__11140 = d;
var G__11141 = e;
var G__11142 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11137,G__11138,G__11139,G__11140,G__11141,G__11142) : self__.dispatch_fn.call(null,G__11137,G__11138,G__11139,G__11140,G__11141,G__11142));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11143 = a;
var G__11144 = b;
var G__11145 = c;
var G__11146 = d;
var G__11147 = e;
var G__11148 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11143,G__11144,G__11145,G__11146,G__11147,G__11148) : target_fn.call(null,G__11143,G__11144,G__11145,G__11146,G__11147,G__11148));
});
var G__11947__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11149 = a;
var G__11150 = b;
var G__11151 = c;
var G__11152 = d;
var G__11153 = e;
var G__11154 = f;
var G__11155 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155) : self__.dispatch_fn.call(null,G__11149,G__11150,G__11151,G__11152,G__11153,G__11154,G__11155));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11156 = a;
var G__11157 = b;
var G__11158 = c;
var G__11159 = d;
var G__11160 = e;
var G__11161 = f;
var G__11162 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162) : target_fn.call(null,G__11156,G__11157,G__11158,G__11159,G__11160,G__11161,G__11162));
});
var G__11947__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11163 = a;
var G__11164 = b;
var G__11165 = c;
var G__11166 = d;
var G__11167 = e;
var G__11168 = f;
var G__11169 = g;
var G__11170 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170) : self__.dispatch_fn.call(null,G__11163,G__11164,G__11165,G__11166,G__11167,G__11168,G__11169,G__11170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11171 = a;
var G__11172 = b;
var G__11173 = c;
var G__11174 = d;
var G__11175 = e;
var G__11176 = f;
var G__11177 = g;
var G__11178 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178) : target_fn.call(null,G__11171,G__11172,G__11173,G__11174,G__11175,G__11176,G__11177,G__11178));
});
var G__11947__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11179 = a;
var G__11180 = b;
var G__11181 = c;
var G__11182 = d;
var G__11183 = e;
var G__11184 = f;
var G__11185 = g;
var G__11186 = h;
var G__11187 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187) : self__.dispatch_fn.call(null,G__11179,G__11180,G__11181,G__11182,G__11183,G__11184,G__11185,G__11186,G__11187));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11188 = a;
var G__11189 = b;
var G__11190 = c;
var G__11191 = d;
var G__11192 = e;
var G__11193 = f;
var G__11194 = g;
var G__11195 = h;
var G__11196 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11188,G__11189,G__11190,G__11191,G__11192,G__11193,G__11194,G__11195,G__11196) : target_fn.call(null,G__11188,G__11189,G__11190,G__11191,G__11192,G__11193,G__11194,G__11195,G__11196));
});
var G__11947__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11197 = a;
var G__11198 = b;
var G__11199 = c;
var G__11200 = d;
var G__11201 = e;
var G__11202 = f;
var G__11203 = g;
var G__11204 = h;
var G__11205 = i;
var G__11206 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11197,G__11198,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205,G__11206) : self__.dispatch_fn.call(null,G__11197,G__11198,G__11199,G__11200,G__11201,G__11202,G__11203,G__11204,G__11205,G__11206));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11207 = a;
var G__11208 = b;
var G__11209 = c;
var G__11210 = d;
var G__11211 = e;
var G__11212 = f;
var G__11213 = g;
var G__11214 = h;
var G__11215 = i;
var G__11216 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216) : target_fn.call(null,G__11207,G__11208,G__11209,G__11210,G__11211,G__11212,G__11213,G__11214,G__11215,G__11216));
});
var G__11947__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11217 = a;
var G__11218 = b;
var G__11219 = c;
var G__11220 = d;
var G__11221 = e;
var G__11222 = f;
var G__11223 = g;
var G__11224 = h;
var G__11225 = i;
var G__11226 = j;
var G__11227 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11217,G__11218,G__11219,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227) : self__.dispatch_fn.call(null,G__11217,G__11218,G__11219,G__11220,G__11221,G__11222,G__11223,G__11224,G__11225,G__11226,G__11227));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11228 = a;
var G__11229 = b;
var G__11230 = c;
var G__11231 = d;
var G__11232 = e;
var G__11233 = f;
var G__11234 = g;
var G__11235 = h;
var G__11236 = i;
var G__11237 = j;
var G__11238 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238) : target_fn.call(null,G__11228,G__11229,G__11230,G__11231,G__11232,G__11233,G__11234,G__11235,G__11236,G__11237,G__11238));
});
var G__11947__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11239 = a;
var G__11240 = b;
var G__11241 = c;
var G__11242 = d;
var G__11243 = e;
var G__11244 = f;
var G__11245 = g;
var G__11246 = h;
var G__11247 = i;
var G__11248 = j;
var G__11249 = k;
var G__11250 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11239,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250) : self__.dispatch_fn.call(null,G__11239,G__11240,G__11241,G__11242,G__11243,G__11244,G__11245,G__11246,G__11247,G__11248,G__11249,G__11250));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11251 = a;
var G__11252 = b;
var G__11253 = c;
var G__11254 = d;
var G__11255 = e;
var G__11256 = f;
var G__11257 = g;
var G__11258 = h;
var G__11259 = i;
var G__11260 = j;
var G__11261 = k;
var G__11262 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11251,G__11252,G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262) : target_fn.call(null,G__11251,G__11252,G__11253,G__11254,G__11255,G__11256,G__11257,G__11258,G__11259,G__11260,G__11261,G__11262));
});
var G__11947__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11263 = a;
var G__11264 = b;
var G__11265 = c;
var G__11266 = d;
var G__11267 = e;
var G__11268 = f;
var G__11269 = g;
var G__11270 = h;
var G__11271 = i;
var G__11272 = j;
var G__11273 = k;
var G__11274 = l;
var G__11275 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271,G__11272,G__11273,G__11274,G__11275) : self__.dispatch_fn.call(null,G__11263,G__11264,G__11265,G__11266,G__11267,G__11268,G__11269,G__11270,G__11271,G__11272,G__11273,G__11274,G__11275));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11276 = a;
var G__11277 = b;
var G__11278 = c;
var G__11279 = d;
var G__11280 = e;
var G__11281 = f;
var G__11282 = g;
var G__11283 = h;
var G__11284 = i;
var G__11285 = j;
var G__11286 = k;
var G__11287 = l;
var G__11288 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11276,G__11277,G__11278,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288) : target_fn.call(null,G__11276,G__11277,G__11278,G__11279,G__11280,G__11281,G__11282,G__11283,G__11284,G__11285,G__11286,G__11287,G__11288));
});
var G__11947__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11289 = a;
var G__11290 = b;
var G__11291 = c;
var G__11292 = d;
var G__11293 = e;
var G__11294 = f;
var G__11295 = g;
var G__11296 = h;
var G__11297 = i;
var G__11298 = j;
var G__11299 = k;
var G__11300 = l;
var G__11301 = m;
var G__11302 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302) : self__.dispatch_fn.call(null,G__11289,G__11290,G__11291,G__11292,G__11293,G__11294,G__11295,G__11296,G__11297,G__11298,G__11299,G__11300,G__11301,G__11302));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11303 = a;
var G__11304 = b;
var G__11305 = c;
var G__11306 = d;
var G__11307 = e;
var G__11308 = f;
var G__11309 = g;
var G__11310 = h;
var G__11311 = i;
var G__11312 = j;
var G__11313 = k;
var G__11314 = l;
var G__11315 = m;
var G__11316 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315,G__11316) : target_fn.call(null,G__11303,G__11304,G__11305,G__11306,G__11307,G__11308,G__11309,G__11310,G__11311,G__11312,G__11313,G__11314,G__11315,G__11316));
});
var G__11947__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11317 = a;
var G__11318 = b;
var G__11319 = c;
var G__11320 = d;
var G__11321 = e;
var G__11322 = f;
var G__11323 = g;
var G__11324 = h;
var G__11325 = i;
var G__11326 = j;
var G__11327 = k;
var G__11328 = l;
var G__11329 = m;
var G__11330 = n;
var G__11331 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331) : self__.dispatch_fn.call(null,G__11317,G__11318,G__11319,G__11320,G__11321,G__11322,G__11323,G__11324,G__11325,G__11326,G__11327,G__11328,G__11329,G__11330,G__11331));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11332 = a;
var G__11333 = b;
var G__11334 = c;
var G__11335 = d;
var G__11336 = e;
var G__11337 = f;
var G__11338 = g;
var G__11339 = h;
var G__11340 = i;
var G__11341 = j;
var G__11342 = k;
var G__11343 = l;
var G__11344 = m;
var G__11345 = n;
var G__11346 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346) : target_fn.call(null,G__11332,G__11333,G__11334,G__11335,G__11336,G__11337,G__11338,G__11339,G__11340,G__11341,G__11342,G__11343,G__11344,G__11345,G__11346));
});
var G__11947__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11347 = a;
var G__11348 = b;
var G__11349 = c;
var G__11350 = d;
var G__11351 = e;
var G__11352 = f;
var G__11353 = g;
var G__11354 = h;
var G__11355 = i;
var G__11356 = j;
var G__11357 = k;
var G__11358 = l;
var G__11359 = m;
var G__11360 = n;
var G__11361 = o;
var G__11362 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362) : self__.dispatch_fn.call(null,G__11347,G__11348,G__11349,G__11350,G__11351,G__11352,G__11353,G__11354,G__11355,G__11356,G__11357,G__11358,G__11359,G__11360,G__11361,G__11362));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11363 = a;
var G__11364 = b;
var G__11365 = c;
var G__11366 = d;
var G__11367 = e;
var G__11368 = f;
var G__11369 = g;
var G__11370 = h;
var G__11371 = i;
var G__11372 = j;
var G__11373 = k;
var G__11374 = l;
var G__11375 = m;
var G__11376 = n;
var G__11377 = o;
var G__11378 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378) : target_fn.call(null,G__11363,G__11364,G__11365,G__11366,G__11367,G__11368,G__11369,G__11370,G__11371,G__11372,G__11373,G__11374,G__11375,G__11376,G__11377,G__11378));
});
var G__11947__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11379 = a;
var G__11380 = b;
var G__11381 = c;
var G__11382 = d;
var G__11383 = e;
var G__11384 = f;
var G__11385 = g;
var G__11386 = h;
var G__11387 = i;
var G__11388 = j;
var G__11389 = k;
var G__11390 = l;
var G__11391 = m;
var G__11392 = n;
var G__11393 = o;
var G__11394 = p;
var G__11395 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395) : self__.dispatch_fn.call(null,G__11379,G__11380,G__11381,G__11382,G__11383,G__11384,G__11385,G__11386,G__11387,G__11388,G__11389,G__11390,G__11391,G__11392,G__11393,G__11394,G__11395));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11396 = a;
var G__11397 = b;
var G__11398 = c;
var G__11399 = d;
var G__11400 = e;
var G__11401 = f;
var G__11402 = g;
var G__11403 = h;
var G__11404 = i;
var G__11405 = j;
var G__11406 = k;
var G__11407 = l;
var G__11408 = m;
var G__11409 = n;
var G__11410 = o;
var G__11411 = p;
var G__11412 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412) : target_fn.call(null,G__11396,G__11397,G__11398,G__11399,G__11400,G__11401,G__11402,G__11403,G__11404,G__11405,G__11406,G__11407,G__11408,G__11409,G__11410,G__11411,G__11412));
});
var G__11947__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11413 = a;
var G__11414 = b;
var G__11415 = c;
var G__11416 = d;
var G__11417 = e;
var G__11418 = f;
var G__11419 = g;
var G__11420 = h;
var G__11421 = i;
var G__11422 = j;
var G__11423 = k;
var G__11424 = l;
var G__11425 = m;
var G__11426 = n;
var G__11427 = o;
var G__11428 = p;
var G__11429 = q;
var G__11430 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430) : self__.dispatch_fn.call(null,G__11413,G__11414,G__11415,G__11416,G__11417,G__11418,G__11419,G__11420,G__11421,G__11422,G__11423,G__11424,G__11425,G__11426,G__11427,G__11428,G__11429,G__11430));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11431 = a;
var G__11432 = b;
var G__11433 = c;
var G__11434 = d;
var G__11435 = e;
var G__11436 = f;
var G__11437 = g;
var G__11438 = h;
var G__11439 = i;
var G__11440 = j;
var G__11441 = k;
var G__11442 = l;
var G__11443 = m;
var G__11444 = n;
var G__11445 = o;
var G__11446 = p;
var G__11447 = q;
var G__11448 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448) : target_fn.call(null,G__11431,G__11432,G__11433,G__11434,G__11435,G__11436,G__11437,G__11438,G__11439,G__11440,G__11441,G__11442,G__11443,G__11444,G__11445,G__11446,G__11447,G__11448));
});
var G__11947__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11449 = a;
var G__11450 = b;
var G__11451 = c;
var G__11452 = d;
var G__11453 = e;
var G__11454 = f;
var G__11455 = g;
var G__11456 = h;
var G__11457 = i;
var G__11458 = j;
var G__11459 = k;
var G__11460 = l;
var G__11461 = m;
var G__11462 = n;
var G__11463 = o;
var G__11464 = p;
var G__11465 = q;
var G__11466 = r;
var G__11467 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467) : self__.dispatch_fn.call(null,G__11449,G__11450,G__11451,G__11452,G__11453,G__11454,G__11455,G__11456,G__11457,G__11458,G__11459,G__11460,G__11461,G__11462,G__11463,G__11464,G__11465,G__11466,G__11467));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11468 = a;
var G__11469 = b;
var G__11470 = c;
var G__11471 = d;
var G__11472 = e;
var G__11473 = f;
var G__11474 = g;
var G__11475 = h;
var G__11476 = i;
var G__11477 = j;
var G__11478 = k;
var G__11479 = l;
var G__11480 = m;
var G__11481 = n;
var G__11482 = o;
var G__11483 = p;
var G__11484 = q;
var G__11485 = r;
var G__11486 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11468,G__11469,G__11470,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486) : target_fn.call(null,G__11468,G__11469,G__11470,G__11471,G__11472,G__11473,G__11474,G__11475,G__11476,G__11477,G__11478,G__11479,G__11480,G__11481,G__11482,G__11483,G__11484,G__11485,G__11486));
});
var G__11947__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__11487 = a;
var G__11488 = b;
var G__11489 = c;
var G__11490 = d;
var G__11491 = e;
var G__11492 = f;
var G__11493 = g;
var G__11494 = h;
var G__11495 = i;
var G__11496 = j;
var G__11497 = k;
var G__11498 = l;
var G__11499 = m;
var G__11500 = n;
var G__11501 = o;
var G__11502 = p;
var G__11503 = q;
var G__11504 = r;
var G__11505 = s;
var G__11506 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506) : self__.dispatch_fn.call(null,G__11487,G__11488,G__11489,G__11490,G__11491,G__11492,G__11493,G__11494,G__11495,G__11496,G__11497,G__11498,G__11499,G__11500,G__11501,G__11502,G__11503,G__11504,G__11505,G__11506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11507 = a;
var G__11508 = b;
var G__11509 = c;
var G__11510 = d;
var G__11511 = e;
var G__11512 = f;
var G__11513 = g;
var G__11514 = h;
var G__11515 = i;
var G__11516 = j;
var G__11517 = k;
var G__11518 = l;
var G__11519 = m;
var G__11520 = n;
var G__11521 = o;
var G__11522 = p;
var G__11523 = q;
var G__11524 = r;
var G__11525 = s;
var G__11526 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526) : target_fn.call(null,G__11507,G__11508,G__11509,G__11510,G__11511,G__11512,G__11513,G__11514,G__11515,G__11516,G__11517,G__11518,G__11519,G__11520,G__11521,G__11522,G__11523,G__11524,G__11525,G__11526));
});
var G__11947__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__11947 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11947__1.call(this,self__);
case 2:
return G__11947__2.call(this,self__,a);
case 3:
return G__11947__3.call(this,self__,a,b);
case 4:
return G__11947__4.call(this,self__,a,b,c);
case 5:
return G__11947__5.call(this,self__,a,b,c,d);
case 6:
return G__11947__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11947__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11947__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11947__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11947__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11947__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11947__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11947__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11947__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11947__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11947__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11947__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11947__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11947__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11947__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11947__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11947__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11947.cljs$core$IFn$_invoke$arity$1 = G__11947__1;
G__11947.cljs$core$IFn$_invoke$arity$2 = G__11947__2;
G__11947.cljs$core$IFn$_invoke$arity$3 = G__11947__3;
G__11947.cljs$core$IFn$_invoke$arity$4 = G__11947__4;
G__11947.cljs$core$IFn$_invoke$arity$5 = G__11947__5;
G__11947.cljs$core$IFn$_invoke$arity$6 = G__11947__6;
G__11947.cljs$core$IFn$_invoke$arity$7 = G__11947__7;
G__11947.cljs$core$IFn$_invoke$arity$8 = G__11947__8;
G__11947.cljs$core$IFn$_invoke$arity$9 = G__11947__9;
G__11947.cljs$core$IFn$_invoke$arity$10 = G__11947__10;
G__11947.cljs$core$IFn$_invoke$arity$11 = G__11947__11;
G__11947.cljs$core$IFn$_invoke$arity$12 = G__11947__12;
G__11947.cljs$core$IFn$_invoke$arity$13 = G__11947__13;
G__11947.cljs$core$IFn$_invoke$arity$14 = G__11947__14;
G__11947.cljs$core$IFn$_invoke$arity$15 = G__11947__15;
G__11947.cljs$core$IFn$_invoke$arity$16 = G__11947__16;
G__11947.cljs$core$IFn$_invoke$arity$17 = G__11947__17;
G__11947.cljs$core$IFn$_invoke$arity$18 = G__11947__18;
G__11947.cljs$core$IFn$_invoke$arity$19 = G__11947__19;
G__11947.cljs$core$IFn$_invoke$arity$20 = G__11947__20;
G__11947.cljs$core$IFn$_invoke$arity$21 = G__11947__21;
G__11947.cljs$core$IFn$_invoke$arity$22 = G__11947__22;
return G__11947;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args11099){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11099)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11527 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11527) : self__.dispatch_fn.call(null,G__11527));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11528 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11528) : target_fn.call(null,G__11528));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11529 = a;
var G__11530 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11529,G__11530) : self__.dispatch_fn.call(null,G__11529,G__11530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11531 = a;
var G__11532 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11531,G__11532) : target_fn.call(null,G__11531,G__11532));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11533 = a;
var G__11534 = b;
var G__11535 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11533,G__11534,G__11535) : self__.dispatch_fn.call(null,G__11533,G__11534,G__11535));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11536 = a;
var G__11537 = b;
var G__11538 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11536,G__11537,G__11538) : target_fn.call(null,G__11536,G__11537,G__11538));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11539 = a;
var G__11540 = b;
var G__11541 = c;
var G__11542 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11539,G__11540,G__11541,G__11542) : self__.dispatch_fn.call(null,G__11539,G__11540,G__11541,G__11542));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11543 = a;
var G__11544 = b;
var G__11545 = c;
var G__11546 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11543,G__11544,G__11545,G__11546) : target_fn.call(null,G__11543,G__11544,G__11545,G__11546));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11547 = a;
var G__11548 = b;
var G__11549 = c;
var G__11550 = d;
var G__11551 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11547,G__11548,G__11549,G__11550,G__11551) : self__.dispatch_fn.call(null,G__11547,G__11548,G__11549,G__11550,G__11551));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11552 = a;
var G__11553 = b;
var G__11554 = c;
var G__11555 = d;
var G__11556 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11552,G__11553,G__11554,G__11555,G__11556) : target_fn.call(null,G__11552,G__11553,G__11554,G__11555,G__11556));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11557 = a;
var G__11558 = b;
var G__11559 = c;
var G__11560 = d;
var G__11561 = e;
var G__11562 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11557,G__11558,G__11559,G__11560,G__11561,G__11562) : self__.dispatch_fn.call(null,G__11557,G__11558,G__11559,G__11560,G__11561,G__11562));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11563 = a;
var G__11564 = b;
var G__11565 = c;
var G__11566 = d;
var G__11567 = e;
var G__11568 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11563,G__11564,G__11565,G__11566,G__11567,G__11568) : target_fn.call(null,G__11563,G__11564,G__11565,G__11566,G__11567,G__11568));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11569 = a;
var G__11570 = b;
var G__11571 = c;
var G__11572 = d;
var G__11573 = e;
var G__11574 = f;
var G__11575 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575) : self__.dispatch_fn.call(null,G__11569,G__11570,G__11571,G__11572,G__11573,G__11574,G__11575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11576 = a;
var G__11577 = b;
var G__11578 = c;
var G__11579 = d;
var G__11580 = e;
var G__11581 = f;
var G__11582 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582) : target_fn.call(null,G__11576,G__11577,G__11578,G__11579,G__11580,G__11581,G__11582));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11583 = a;
var G__11584 = b;
var G__11585 = c;
var G__11586 = d;
var G__11587 = e;
var G__11588 = f;
var G__11589 = g;
var G__11590 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590) : self__.dispatch_fn.call(null,G__11583,G__11584,G__11585,G__11586,G__11587,G__11588,G__11589,G__11590));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11591 = a;
var G__11592 = b;
var G__11593 = c;
var G__11594 = d;
var G__11595 = e;
var G__11596 = f;
var G__11597 = g;
var G__11598 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598) : target_fn.call(null,G__11591,G__11592,G__11593,G__11594,G__11595,G__11596,G__11597,G__11598));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11599 = a;
var G__11600 = b;
var G__11601 = c;
var G__11602 = d;
var G__11603 = e;
var G__11604 = f;
var G__11605 = g;
var G__11606 = h;
var G__11607 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607) : self__.dispatch_fn.call(null,G__11599,G__11600,G__11601,G__11602,G__11603,G__11604,G__11605,G__11606,G__11607));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11608 = a;
var G__11609 = b;
var G__11610 = c;
var G__11611 = d;
var G__11612 = e;
var G__11613 = f;
var G__11614 = g;
var G__11615 = h;
var G__11616 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616) : target_fn.call(null,G__11608,G__11609,G__11610,G__11611,G__11612,G__11613,G__11614,G__11615,G__11616));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11617 = a;
var G__11618 = b;
var G__11619 = c;
var G__11620 = d;
var G__11621 = e;
var G__11622 = f;
var G__11623 = g;
var G__11624 = h;
var G__11625 = i;
var G__11626 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626) : self__.dispatch_fn.call(null,G__11617,G__11618,G__11619,G__11620,G__11621,G__11622,G__11623,G__11624,G__11625,G__11626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11627 = a;
var G__11628 = b;
var G__11629 = c;
var G__11630 = d;
var G__11631 = e;
var G__11632 = f;
var G__11633 = g;
var G__11634 = h;
var G__11635 = i;
var G__11636 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636) : target_fn.call(null,G__11627,G__11628,G__11629,G__11630,G__11631,G__11632,G__11633,G__11634,G__11635,G__11636));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11637 = a;
var G__11638 = b;
var G__11639 = c;
var G__11640 = d;
var G__11641 = e;
var G__11642 = f;
var G__11643 = g;
var G__11644 = h;
var G__11645 = i;
var G__11646 = j;
var G__11647 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647) : self__.dispatch_fn.call(null,G__11637,G__11638,G__11639,G__11640,G__11641,G__11642,G__11643,G__11644,G__11645,G__11646,G__11647));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11648 = a;
var G__11649 = b;
var G__11650 = c;
var G__11651 = d;
var G__11652 = e;
var G__11653 = f;
var G__11654 = g;
var G__11655 = h;
var G__11656 = i;
var G__11657 = j;
var G__11658 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658) : target_fn.call(null,G__11648,G__11649,G__11650,G__11651,G__11652,G__11653,G__11654,G__11655,G__11656,G__11657,G__11658));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11659 = a;
var G__11660 = b;
var G__11661 = c;
var G__11662 = d;
var G__11663 = e;
var G__11664 = f;
var G__11665 = g;
var G__11666 = h;
var G__11667 = i;
var G__11668 = j;
var G__11669 = k;
var G__11670 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670) : self__.dispatch_fn.call(null,G__11659,G__11660,G__11661,G__11662,G__11663,G__11664,G__11665,G__11666,G__11667,G__11668,G__11669,G__11670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11671 = a;
var G__11672 = b;
var G__11673 = c;
var G__11674 = d;
var G__11675 = e;
var G__11676 = f;
var G__11677 = g;
var G__11678 = h;
var G__11679 = i;
var G__11680 = j;
var G__11681 = k;
var G__11682 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682) : target_fn.call(null,G__11671,G__11672,G__11673,G__11674,G__11675,G__11676,G__11677,G__11678,G__11679,G__11680,G__11681,G__11682));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11683 = a;
var G__11684 = b;
var G__11685 = c;
var G__11686 = d;
var G__11687 = e;
var G__11688 = f;
var G__11689 = g;
var G__11690 = h;
var G__11691 = i;
var G__11692 = j;
var G__11693 = k;
var G__11694 = l;
var G__11695 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695) : self__.dispatch_fn.call(null,G__11683,G__11684,G__11685,G__11686,G__11687,G__11688,G__11689,G__11690,G__11691,G__11692,G__11693,G__11694,G__11695));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11696 = a;
var G__11697 = b;
var G__11698 = c;
var G__11699 = d;
var G__11700 = e;
var G__11701 = f;
var G__11702 = g;
var G__11703 = h;
var G__11704 = i;
var G__11705 = j;
var G__11706 = k;
var G__11707 = l;
var G__11708 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708) : target_fn.call(null,G__11696,G__11697,G__11698,G__11699,G__11700,G__11701,G__11702,G__11703,G__11704,G__11705,G__11706,G__11707,G__11708));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11709 = a;
var G__11710 = b;
var G__11711 = c;
var G__11712 = d;
var G__11713 = e;
var G__11714 = f;
var G__11715 = g;
var G__11716 = h;
var G__11717 = i;
var G__11718 = j;
var G__11719 = k;
var G__11720 = l;
var G__11721 = m;
var G__11722 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722) : self__.dispatch_fn.call(null,G__11709,G__11710,G__11711,G__11712,G__11713,G__11714,G__11715,G__11716,G__11717,G__11718,G__11719,G__11720,G__11721,G__11722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11723 = a;
var G__11724 = b;
var G__11725 = c;
var G__11726 = d;
var G__11727 = e;
var G__11728 = f;
var G__11729 = g;
var G__11730 = h;
var G__11731 = i;
var G__11732 = j;
var G__11733 = k;
var G__11734 = l;
var G__11735 = m;
var G__11736 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736) : target_fn.call(null,G__11723,G__11724,G__11725,G__11726,G__11727,G__11728,G__11729,G__11730,G__11731,G__11732,G__11733,G__11734,G__11735,G__11736));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11737 = a;
var G__11738 = b;
var G__11739 = c;
var G__11740 = d;
var G__11741 = e;
var G__11742 = f;
var G__11743 = g;
var G__11744 = h;
var G__11745 = i;
var G__11746 = j;
var G__11747 = k;
var G__11748 = l;
var G__11749 = m;
var G__11750 = n;
var G__11751 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751) : self__.dispatch_fn.call(null,G__11737,G__11738,G__11739,G__11740,G__11741,G__11742,G__11743,G__11744,G__11745,G__11746,G__11747,G__11748,G__11749,G__11750,G__11751));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11752 = a;
var G__11753 = b;
var G__11754 = c;
var G__11755 = d;
var G__11756 = e;
var G__11757 = f;
var G__11758 = g;
var G__11759 = h;
var G__11760 = i;
var G__11761 = j;
var G__11762 = k;
var G__11763 = l;
var G__11764 = m;
var G__11765 = n;
var G__11766 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766) : target_fn.call(null,G__11752,G__11753,G__11754,G__11755,G__11756,G__11757,G__11758,G__11759,G__11760,G__11761,G__11762,G__11763,G__11764,G__11765,G__11766));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11767 = a;
var G__11768 = b;
var G__11769 = c;
var G__11770 = d;
var G__11771 = e;
var G__11772 = f;
var G__11773 = g;
var G__11774 = h;
var G__11775 = i;
var G__11776 = j;
var G__11777 = k;
var G__11778 = l;
var G__11779 = m;
var G__11780 = n;
var G__11781 = o;
var G__11782 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782) : self__.dispatch_fn.call(null,G__11767,G__11768,G__11769,G__11770,G__11771,G__11772,G__11773,G__11774,G__11775,G__11776,G__11777,G__11778,G__11779,G__11780,G__11781,G__11782));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11783 = a;
var G__11784 = b;
var G__11785 = c;
var G__11786 = d;
var G__11787 = e;
var G__11788 = f;
var G__11789 = g;
var G__11790 = h;
var G__11791 = i;
var G__11792 = j;
var G__11793 = k;
var G__11794 = l;
var G__11795 = m;
var G__11796 = n;
var G__11797 = o;
var G__11798 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798) : target_fn.call(null,G__11783,G__11784,G__11785,G__11786,G__11787,G__11788,G__11789,G__11790,G__11791,G__11792,G__11793,G__11794,G__11795,G__11796,G__11797,G__11798));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11799 = a;
var G__11800 = b;
var G__11801 = c;
var G__11802 = d;
var G__11803 = e;
var G__11804 = f;
var G__11805 = g;
var G__11806 = h;
var G__11807 = i;
var G__11808 = j;
var G__11809 = k;
var G__11810 = l;
var G__11811 = m;
var G__11812 = n;
var G__11813 = o;
var G__11814 = p;
var G__11815 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815) : self__.dispatch_fn.call(null,G__11799,G__11800,G__11801,G__11802,G__11803,G__11804,G__11805,G__11806,G__11807,G__11808,G__11809,G__11810,G__11811,G__11812,G__11813,G__11814,G__11815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11816 = a;
var G__11817 = b;
var G__11818 = c;
var G__11819 = d;
var G__11820 = e;
var G__11821 = f;
var G__11822 = g;
var G__11823 = h;
var G__11824 = i;
var G__11825 = j;
var G__11826 = k;
var G__11827 = l;
var G__11828 = m;
var G__11829 = n;
var G__11830 = o;
var G__11831 = p;
var G__11832 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832) : target_fn.call(null,G__11816,G__11817,G__11818,G__11819,G__11820,G__11821,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827,G__11828,G__11829,G__11830,G__11831,G__11832));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11833 = a;
var G__11834 = b;
var G__11835 = c;
var G__11836 = d;
var G__11837 = e;
var G__11838 = f;
var G__11839 = g;
var G__11840 = h;
var G__11841 = i;
var G__11842 = j;
var G__11843 = k;
var G__11844 = l;
var G__11845 = m;
var G__11846 = n;
var G__11847 = o;
var G__11848 = p;
var G__11849 = q;
var G__11850 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850) : self__.dispatch_fn.call(null,G__11833,G__11834,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11851 = a;
var G__11852 = b;
var G__11853 = c;
var G__11854 = d;
var G__11855 = e;
var G__11856 = f;
var G__11857 = g;
var G__11858 = h;
var G__11859 = i;
var G__11860 = j;
var G__11861 = k;
var G__11862 = l;
var G__11863 = m;
var G__11864 = n;
var G__11865 = o;
var G__11866 = p;
var G__11867 = q;
var G__11868 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868) : target_fn.call(null,G__11851,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11869 = a;
var G__11870 = b;
var G__11871 = c;
var G__11872 = d;
var G__11873 = e;
var G__11874 = f;
var G__11875 = g;
var G__11876 = h;
var G__11877 = i;
var G__11878 = j;
var G__11879 = k;
var G__11880 = l;
var G__11881 = m;
var G__11882 = n;
var G__11883 = o;
var G__11884 = p;
var G__11885 = q;
var G__11886 = r;
var G__11887 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887) : self__.dispatch_fn.call(null,G__11869,G__11870,G__11871,G__11872,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884,G__11885,G__11886,G__11887));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11888 = a;
var G__11889 = b;
var G__11890 = c;
var G__11891 = d;
var G__11892 = e;
var G__11893 = f;
var G__11894 = g;
var G__11895 = h;
var G__11896 = i;
var G__11897 = j;
var G__11898 = k;
var G__11899 = l;
var G__11900 = m;
var G__11901 = n;
var G__11902 = o;
var G__11903 = p;
var G__11904 = q;
var G__11905 = r;
var G__11906 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906) : target_fn.call(null,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__11907 = a;
var G__11908 = b;
var G__11909 = c;
var G__11910 = d;
var G__11911 = e;
var G__11912 = f;
var G__11913 = g;
var G__11914 = h;
var G__11915 = i;
var G__11916 = j;
var G__11917 = k;
var G__11918 = l;
var G__11919 = m;
var G__11920 = n;
var G__11921 = o;
var G__11922 = p;
var G__11923 = q;
var G__11924 = r;
var G__11925 = s;
var G__11926 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926) : self__.dispatch_fn.call(null,G__11907,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__11927 = a;
var G__11928 = b;
var G__11929 = c;
var G__11930 = d;
var G__11931 = e;
var G__11932 = f;
var G__11933 = g;
var G__11934 = h;
var G__11935 = i;
var G__11936 = j;
var G__11937 = k;
var G__11938 = l;
var G__11939 = m;
var G__11940 = n;
var G__11941 = o;
var G__11942 = p;
var G__11943 = q;
var G__11944 = r;
var G__11945 = s;
var G__11946 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946) : target_fn.call(null,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942,G__11943,G__11944,G__11945,G__11946));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__11948 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__11948);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__11953 = msg;
return Error(G__11953);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__11958 = x;
var G__11959 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11958,G__11959) : pred.call(null,G__11958,G__11959));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11960 = y;
var G__11961 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11960,G__11961) : pred.call(null,G__11960,G__11961));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
